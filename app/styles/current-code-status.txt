Directory Tree:
.
├── README.md
├── app
├── components/
│   ├── layout.tsx
│   ├── playbook
│   │   ├── first_mdx
│   │   │   └── page.mdx
│   │   ├── mdx-modules.txt
│   │   ├── page.tsx
│   │   └── web-security
│   │       └── page.mdx
│   ├── styles
│   │   ├── animations.css
│   │   ├── globals.css
│   │   ├── mdx.css
│   │   ├── theme.css
│   │   └── utility-patterns.css
├── eslint.config.mjs
├── mdx-components.tsx
├── next.config.ts
├── package.json
├── postcss.config.mjs
├── tailwind.config.ts
└── tsconfig.json

================================================================================
FILE: globals.css
================================================================================

/* app/styles/globals.css (Updated for Tailwind v3) */

/* === Tailwind v3 Directives (Import base, components, and utilities) === */
@tailwind base;
@tailwind components;
@tailwind utilities;

/* === Custom Style Imports (AFTER Tailwind directives for v3 JIT) === */
@import "./theme.css"; /* Defines CSS variables, custom component styles */
@import "./utility-patterns.css"; /* Defines custom utility classes like .btn */
@import "./animations.css"; /* Defines @keyframes and animation utilities */
@import "./mdx.css"; /* Defines styles for .prose / .mdx-prose */

/* === Base HTML/Body Styles === */
/* Apply base styles using variables defined in theme.css */
html,
body {
  max-width: 100vw;
  overflow-x: hidden; /* Prevent horizontal scroll */
}

body {
  /* Use CSS variables defined in theme.css */
  background-color: rgb(var(--background)); /* Ensure rgb() wrapper if needed */
  color: rgb(var(--foreground)); /* Ensure rgb() wrapper if needed */

  /* Apply font variables if defined in theme.css or layout.tsx */
  /* Example: font-family: var(--font-geist-sans); */

  /* Apply base typography variables from theme.css */
  font-size: var(--fontSize-base);
  line-height: var(--lineHeight-normal);

  /* Apply layout variables from theme.css */
  padding-top: var(--nav-height); /* Adjust if header height changes */

  /* Standard browser normalization */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* Basic reset (also handled by @tailwind base) */
* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

a {
  color: inherit;
  text-decoration: none;
}

/* === Custom @layer definitions (Keep if you have them) === */
@layer utilities {
  .scrollbar-thin {
    scrollbar-width: thin;
  }
  .scrollbar-thin::-webkit-scrollbar {
    width: 6px;
    height: 6px;
  }
  .no-scrollbar {
    scrollbar-width: none;
    -ms-overflow-style: none;
  }
  .no-scrollbar::-webkit-scrollbar {
    display: none;
  }
  /* Add other custom utilities if needed */
  .rtl {
    direction: rtl;
  }
}

================================================================================
FILE: mdx.css
================================================================================

/* app/styles/mdx.css (Simplified for v3 & Typography Plugin) */

/* Overrides or Additions to Typography Plugin --- */

/*  Link Styling Enhancements --- */
/* Base color/decoration comes from --tw-prose-links */
.mdx-prose a {
  text-underline-offset: 2px;
  transition: color 150ms ease-in-out, text-decoration-color 150ms ease-in-out;
  /* Optionally override decoration color alpha */
  text-decoration-color: rgba(var(--primary-rgb), 0.5);
}
.mdx-prose a:hover {
  /* Hover color comes from plugin/theme vars, just adjust decoration */
  text-decoration-color: rgba(var(--secondary-rgb), 0.7);
}

/* External Link Indicator */
.mdx-prose a[target="_blank"]::after {
  content: "↗";
  display: inline-block;
  margin-left: 0.25rem;
  font-size: 0.75em;
  opacity: 0.7;
  transition: opacity 0.2s ease-out;
}
.mdx-prose a[target="_blank"]:hover::after {
  opacity: 1;
}

/* List Styling --- */
/* Marker color comes from --tw-prose-bullets */
/* .mdx-prose ul li::marker { color: rgb(var(--primary-rgb)); } */

/*  Inline Code Styling --- */
/* Let plugin handle color via its defaults, just add bg/padding */
.mdx-prose :not(pre) > code {
  background-color: var(--gray-alpha-100);
  padding: 0.2em 0.4em;
  border-radius: 4px;
  font-size: var(--fontSize-sm);
  font-family: var(--font-geist-mono), monospace;
}

/* Rehype Pretty Code Styling --- */
.mdx-prose figure[data-rehype-pretty-code-figure] {
  margin-block: 1.5em;
}

.mdx-prose figure[data-rehype-pretty-code-figure] > pre {
  border: 1px solid rgb(var(--border-subtle-rgb)); /* Use border variable */
  border-radius: 6px;
  padding: var(--spacing-md);
  overflow-x: auto;
  font-size: 0.9em; /* Slightly smaller than base */
  line-height: 1.6;
  /* Background comes from --tw-prose-pre-bg */
}

.mdx-prose figure[data-rehype-pretty-code-figure] > pre > code {
  display: grid;
  font-family: var(--font-geist-mono), monospace; /* Ensure monospace font */
  background-color: transparent !important; /* Override theme bg */
  font-size: inherit;
  /* Text color comes from --tw-prose-pre-code (theme) or highlighting spans */
}

/* Code Highlights */
.mdx-prose .line--highlighted {
  background-color: rgba(var(--primary-rgb), 0.1); /* Use primary with alpha */
  box-shadow: inset 3px 0 0 0 rgb(var(--primary-rgb));
}
.mdx-prose .word--highlighted {
  background-color: rgba(
    var(--secondary-rgb),
    0.2
  ); /* Use secondary with alpha */
  padding: 0.1em 0.2em;
  border-radius: 3px;
}

/* Code Block Titles */
.mdx-prose [data-rehype-pretty-code-title] {
  font-size: 0.85em;
  font-family: var(--font-geist-mono), monospace;
  color: rgba(var(--foreground-rgb), 0.7);
  background-color: var(--gray-alpha-200); /* Slightly darker alpha gray */
  padding: var(--spacing-sm) var(--spacing-md);
  border: 1px solid rgb(var(--border-subtle-rgb));
  border-bottom: none;
  border-top-left-radius: 6px;
  border-top-right-radius: 6px;
  margin-bottom: 0;
}


================================================================================
FILE: theme.css
================================================================================

/* app/styles/theme.css (Corrected for v3 - Removed @layer wrappers) */

/* ========== Core CSS Variable Definitions ========== */
:root {
  /* --- Core Spacing & Typography Tokens --- */
  --spacing-base: 1rem;
  --spacing-xs: calc(var(--spacing-base) * 0.5);
  --spacing-sm: calc(var(--spacing-base) * 0.75);
  --spacing-md: var(--spacing-base);
  --spacing-lg: calc(var(--spacing-base) * 1.5);
  --spacing-xl: calc(var(--spacing-base) * 2);
  --spacing-2xl: calc(var(--spacing-base) * 3);

  --fontSize-base: clamp(1rem, 1.05cqw + 0.8rem, 1.25rem);
  --fontSize-sm: clamp(0.89rem, 0.95cqw + 0.7rem, 1.13rem);
  --fontSize-xs: clamp(0.8rem, 0.91cqw + 0.6rem, 0.98rem);

  --fontSize-h1: clamp(2.5rem, 5vw, 3.5rem);
  --fontSize-h2: clamp(2rem, 4vw, 3rem);
  --fontSize-h3: clamp(1.75rem, 3vw, 2.5rem);
  --fontSize-h4: clamp(1.5rem, 2.5vw, 2rem);

  --lineHeight-tight: 1.25;
  --lineHeight-normal: 1.75;
  --lineHeight-relaxed: 1.85;

  /* --- Layout Tokens --- */
  --nav-height: 3.75rem;
  --max-width: 70rem;
  --slide-height: 100vh;

  /*  Color Tokens (Light Theme - RGB values) --- */
  --background-rgb: 255 255 255;
  --foreground-rgb: 23 23 23;
  --primary-rgb: 168 85 247; /* Corresponds to purple-500 */
  --secondary-rgb: 99 102 241; /* Corresponds to indigo-500 */
  --accent-rgb: 219 39 119; /* Corresponds to pink-600 (example) */
  --border-subtle-rgb: 226 232 240; /* slate-200 */
  --border-medium-rgb: 203 213 225; /* slate-300 */
  --gray-alpha-100: rgba(var(--foreground-rgb), 0.06);
  --gray-alpha-200: rgba(var(--foreground-rgb), 0.1);
}

/* Dark Theme Overrides --- */
.dark {
  --background-rgb: 15 23 42; /* slate-900 */
  --foreground-rgb: 241 245 249; /* slate-100 (Brighter) */
  --primary-rgb: 192 132 252;
  --secondary-rgb: 129 140 248;
  --accent-rgb: 216 180 254;
  --border-subtle-rgb: 51 65 85;
  --border-medium-rgb: 71 85 105;
  --button-primary-hover-rgb: 216 180 254;
  --button-secondary-hover-rgb: 99 102 241;
  --dark-base-rgb: 15 23 42;
  --dark-elevated-rgb: 30 41 59;
  --gray-alpha-100: rgba(var(--foreground-rgb), 0.08);
  --gray-alpha-200: rgba(var(--foreground-rgb), 0.12);
}

/* Global HTML Styles --- */
html {
  color-scheme: light dark;
  scroll-behavior: smooth;
  font-size: 100%;
}

/* Styles for Swiper carousel */
.stellar-carousel .swiper-slide {
  opacity: 0.8;
  transition-property: opacity;
  transition-timing-function: theme(
    "transitionTimingFunction.DEFAULT",
    cubic-bezier(0.4, 0, 0.2, 1)
  );
  transition-duration: theme("transitionDuration.150", 150ms);
  &.swiper-slide-active {
    opacity: 1;
  }
}

/* Styles for scroll controls */
.scroll-controls {
  position: sticky;
  bottom: theme("spacing.8", "2rem");
  z-index: 50;
  display: flex;
  justify-content: flex-end;
  margin-right: calc(var(--scrollbar-width, 0px) + 1rem);
}

/* ==========================================================================
   Utility Overrides & Prose Styles (No @layer needed)
   ========================================================================== */

/* Layout Utilities --- */
.content-grid {
  display: grid;
  grid-template-columns: 40fr 5fr 5fr 40fr;
  grid-template-rows: minmax(var(--slide-height), auto);
}

.sticky-col {
  position: sticky;
  top: 0; /* Adjust if needed, e.g., top-[var(--nav-height)] */
  height: var(--slide-height);
  scroll-snap-align: start;
}

/* Scroll Utilities --- */
[data-scroll-section] {
  scroll-snap-type: y mandatory;
  scroll-behavior: smooth;
  overscroll-behavior: contain;
}

================================================================================
FILE: utility-patterns.css
================================================================================

/* app/styles/utility-patterns.css */

/* === Typography Components (Using CSS Variables from theme.css) === */
.heading-1 {
  font-size: var(--fontSize-h1);
  font-weight: 800; /* extrabold */
  line-height: var(--lineHeight-tight);
}
.heading-2 {
  font-size: var(--fontSize-h2);
  font-weight: 800; /* extrabold */
  line-height: var(--lineHeight-tight);
}
.heading-3 {
  font-size: var(--fontSize-h3);
  font-weight: 700; /* bold */
  line-height: var(--lineHeight-tight);
}
.heading-4 {
  font-size: var(--fontSize-h4);
  font-weight: 700; /* bold */
  line-height: var(--lineHeight-tight);
}

/* === Button Components (Using CSS Variables from theme.css) === */
/* These act as base styles that can be extended with Tailwind classes */
.btn {
  @apply inline-flex items-center justify-center rounded-full px-[var(--spacing-md)] py-[0.375rem] text-[length:var(--fontSize-sm)] leading-[var(--lineHeight-normal)] font-medium transition-all duration-150 whitespace-nowrap border border-transparent;
  /* Apply base styles using @apply for brevity */
}

.btn-sm {
  @apply inline-flex items-center justify-center rounded-full px-[var(--spacing-sm)] py-[var(--spacing-xs)] text-[length:var(--fontSize-xs)] leading-[var(--lineHeight-normal)] font-medium transition-all duration-150 whitespace-nowrap border border-transparent;
  /* Use --fontSize-xs defined in theme.css */
}

/* === Form Components === */
/* NOTE: @tailwindcss/forms plugin provides base styles.
   These custom classes might override or supplement them.
   Review if they are all necessary after enabling the plugin.
   Using Tailwind classes directly in components might be simpler.
*/
.form-input,
.form-textarea,
.form-multiselect,
.form-select {
  /* Example using Tailwind classes via @apply - assumes forms plugin is active */
  @apply block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm dark:bg-slate-800 dark:border-slate-600 dark:text-slate-200 dark:placeholder-slate-500 dark:focus:border-indigo-400 dark:focus:ring-indigo-400;
  /* Adjust colors (e.g., border-gray-300, focus:border-indigo-500) to match your theme */
  font-size: var(--fontSize-sm); /* Override font size if needed */
}

/* Placeholder color is often handled by the base input styles */
/* .form-input::placeholder,
.form-textarea::placeholder {
 // Example if needed
   color: theme('colors.slate.500');
} */

.form-select {
  @apply pr-10; /* Keep padding for arrow */
}

.form-checkbox,
.form-radio {
  /* Example using Tailwind classes via @apply - assumes forms plugin is active */
  @apply rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 dark:border-slate-600 dark:bg-slate-800 dark:checked:bg-indigo-500 dark:focus:ring-indigo-400;
  /* Adjust colors to match your theme */
}

/* === Scrollbar Utilities (Defined directly - Layer Removed) === */
.scrollbar-thin {
  scrollbar-width: thin;
}
.scrollbar-thin::-webkit-scrollbar {
  width: 6px;
  height: 6px;
}
.no-scrollbar {
  scrollbar-width: none;
  -ms-overflow-style: none;
}
.no-scrollbar::-webkit-scrollbar {
  display: none;
}
.no-search-decoration::-webkit-search-decoration,
.no-search-decoration::-webkit-search-cancel-button,
.no-search-decoration::-webkit-search-results-button,
.no-search-decoration::-webkit-search-results-decoration {
  -webkit-appearance: none;
}

================================================================================
FILE: mdx-components.tsx
================================================================================
// mdx-components.tsx
import type { MDXComponents } from "mdx/types";
import type { ComponentPropsWithoutRef } from "react";
import { cn } from "@/lib/utils";

// Define reusable gradient classes using Tailwind v3 utility classes
// Make sure primary/secondary are mapped in tailwind.config.ts
const gradientPrimaryText =
  "bg-gradient-to-r from-primary-500 to-secondary-500 dark:from-primary-400 dark:to-secondary-400 bg-clip-text text-transparent";
const gradientSecondaryText =
  "bg-gradient-to-r from-accent-500 to-primary-500 dark:from-accent-400 dark:to-primary-400 bg-clip-text text-transparent"; // Assumes accent is mapped

export function useMDXComponents(components: MDXComponents): MDXComponents {
  return {
    ...components,

    // Override h2 to apply primary gradient and base styles
    h2: ({ children, className, ...props }: ComponentPropsWithoutRef<"h2">) => (
      <h2
        // Apply Tailwind classes directly. Plugin handles base typography.
        className={cn(
          "mt-[2em] mb-[1em]", // Keep custom margins if desired
          gradientPrimaryText, // Apply the primary gradient
          className
        )}
        {...props}
      >
        {children}
      </h2>
    ),
    h3: ({ children, className, ...props }: ComponentPropsWithoutRef<"h3">) => (
      <h3
        className={cn(
          "mt-[1.8em] mb-[0.8em]", // Keep custom margins if desired
          gradientSecondaryText, // Apply the secondary gradient
          className
        )}
        {...props}
      >
        {children}
      </h3>
    ),

    // Override 'a' link element - rely on mdx.css for styling now
    a: ({ children, href, ...props }: ComponentPropsWithoutRef<"a">) => {
      const isExternal =
        href && (href.startsWith("http") || href.startsWith("//"));
      if (isExternal) {
        return (
          <a
            href={href}
            target="_blank"
            rel="noopener noreferrer"
            // Class applied for mdx.css to target, plugin handles base link style
            className="prose-a prose-a-external"
            {...props}
          >
            {children}
          </a>
        );
      }
      return (
        // Class applied for mdx.css to target
        <a href={href} className="prose-a prose-a-internal" {...props}>
          {children}
        </a>
      );
    },

    hr: ({ className, ...props }: ComponentPropsWithoutRef<"hr">) => (
      <hr
        className={cn(
          "my-12 h-0.5 border-none rounded", // Base structure & margin
          // Use Tailwind color utilities based on config mapping
          "bg-primary-500 dark:bg-primary-400",
          // Use CSS variables for the complex shadow
          "shadow-[0_0_10px_rgb(var(--primary-rgb)),0_0_20px_rgb(var(--primary-rgb)),0_0_30px_rgb(var(--accent-rgb))]",
          "animate-neonPulse", // Assumes animation exists
          className
        )}
        {...props}
      />
    ),
  };
}

// tailwind.config.ts (samir.codes - Downgraded to v3 style)
import type { Config } from 'tailwindcss'
import colors from 'tailwindcss/colors' // Import default colors for mapping
// Import necessary v3 plugins
import typography from '@tailwindcss/typography'
import forms from '@tailwindcss/forms'
import aspectRatio from '@tailwindcss/aspect-ratio'
import containerQueries from '@tailwindcss/container-queries'
// NOTE: tailwindcss-animate is removed for now
const config: Config = {
    content: [
        './components/**/*.{js,ts,jsx,tsx,mdx,css}',
        './app/**/*.{js,ts,jsx,tsx,mdx,css}',
    ],
    darkMode: 'class', // Keep using class-based dark mode
    theme: {
        extend: {
            // Color Palette Definition (Mapped to Tailwind v3 defaults) ---
            colors: {
                // Map semantic names to Tailwind scales based on your theme.css values
                primary: colors.purple,    // primary: 168 85 247; -> purple-500 is #a855f7
                secondary: colors.indigo,  // secondary: 99 102 241; -> indigo-500 is #6366f1
                accent: colors.pink, // Changed accent mapping for variety
                gray: colors.slate, // Use slate consistently

                // Basic placeholders - actual colors from CSS vars on body
                background: colors.white,
                foreground: colors.slate[900],

                // Explicitly include needed default colors
                red: colors.red,
                // Add blue, green etc. if used border-blue-500 etc.
            },

            fontFamily: {
                sans: ['var(--font-geist-sans)', 'ui-sans-serif', 'system-ui'],
                mono: ['var(--font-geist-mono)', 'ui-monospace', 'monospace'],
            },
            position: {
                sticky: 'sticky',
                fixed: 'fixed',
                absolute: 'absolute',
                relative: 'relative',
                static: 'static',
            },
            boxShadow: {
                'clay-dark': `
                  inset 4px 4px 8px rgba(0,0,0,0.3),
                  inset -4px -4px 8px rgba(51, 65, 85, 0.5),
                  5px 5px 10px rgba(0,0,0,0.4),
                  -5px -5px 10px rgba(51, 65, 85, 0.3)`,
            },
            fontSize: {
                'xs': 'clamp(0.8rem, 0.91cqw + 0.6rem, 0.98rem)',
                'sm': 'clamp(0.89rem, 0.95cqw + 0.7rem, 1.13rem)',
                'base': 'clamp(1rem, 1.05cqw + 0.8rem, 1.25rem)',
                // Add lg, xl, etc. if needed
            },
            scrollSnapType: {
                y: 'y mandatory',
            },
            gridTemplateColumns: {
                'scroll-slide': '40fr 5fr 5fr 40fr',
            },
        },
    },
    plugins: [
        aspectRatio,
        containerQueries,
        forms,
        typography({
            className: 'mdx-prose',
        })
    ],
}
export default config

---
title: "Web Security Fundamentals"
description: "Core security concepts for modern web"
author: "Samir Coder"
date: "2025-03-30"
tags: [security, web-development, fundamentals]
---

import ArticleLayout from "@/components/layouts/ArticleLayout";

{/* Table of Contents Component */}
export const toc = (
<nav>
  {/* Removed h2 - the layout adds "On this page" */}
  <ul className="list-none !pl-0 space-y-1">
    <li>
      <a
        href="#why-it-matters"
        className="text-slate-400 hover:text-primary transition duration-150 ease-in-out no-underline"
      >
        Why Does Web Security Matter?
      </a>
    </li>
    <li>
      <a
        href="#core-pillars"
        className="text-slate-400 hover:text-primary transition duration-150 ease-in-out no-underline"
      >
        Core Pillars of Web Security
      </a>
      <ul className="list-none !pl-4 mt-1 space-y-1">
        <li>
          <a
            href="#pillar-https"
            className="text-sm text-slate-400 hover:text-primary transition duration-150 ease-in-out no-underline"
          >
            1. HTTPS Everywhere
          </a>
        </li>
        <li>
          <a
            href="#pillar-input"
            className="text-sm text-slate-400 hover:text-primary transition duration-150 ease-in-out no-underline"
          >
            2. Never Trust User Input
          </a>
        </li>
        <li>
          <a
            href="#pillar-output"
            className="text-sm text-slate-400 hover:text-primary transition duration-150 ease-in-out no-underline"
          >
            3. Encode Output Correctly
          </a>
        </li>
        <li>
          <a
            href="#pillar-access"
            className="text-sm text-slate-400 hover:text-primary transition duration-150 ease-in-out no-underline"
          >
            4. Control Access (AuthN/AuthZ)
          </a>
        </li>
        <li>
          <a
            href="#pillar-headers"
            className="text-sm text-slate-400 hover:text-primary transition duration-150 ease-in-out no-underline"
          >
            5. Security Headers
          </a>
        </li>
        <li>
          <a
            href="#pillar-dependencies"
            className="text-sm text-slate-400 hover:text-primary transition duration-150 ease-in-out no-underline"
          >
            6. Keep Dependencies Updated
          </a>
        </li>
      </ul>
    </li>
    <li>
      <a
        href="#common-threats"
        className="text-slate-400 hover:text-primary transition duration-150 ease-in-out no-underline"
      >
        Common Threats to Be Aware Of
      </a>
    </li>
    <li>
      <a
        href="#developer-role"
        className="text-slate-400 hover:text-primary transition duration-150 ease-in-out no-underline"
      >
        Your Role as a Developer
      </a>
    </li>
    <li>
      <a
        href="#journey-continues"
        className="text-slate-400 hover:text-primary transition duration-150 ease-in-out no-underline"
      >
        The Journey Continues
      </a>
    </li>
  </ul>
</nav>
);

<ArticleLayout tableOfContents={toc}>
<h1>Web Security Fundamentals: Protecting Your Digital Fortress</h1>
    {/* Section: Conclusion */}
    <h2 id="journey-continues">The Journey Continues</h2>
     {/* Rest of the content */}
</ArticleLayout>
