/* app/styles/animations.css */

/* ==========================================================================
   Keyframe Definitions (Must match names used in tailwind.config.ts)
   ========================================================================== */

/* Animated Gradient Underline */
@keyframes slideGradient {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

/* === Text Flip Effect (Hero) === */
@keyframes slideWordsUp {
  0%,
  45% {
    /* Pause on 'Build' */
    transform: translateY(0);
  }
  50%,
  95% {
    /* Pause on 'Break' */
    /* Move container up by the height of one line (100% of its own height) */
    transform: translateY(-100%);
  }
  100% {
    /* Loop back */
    transform: translateY(0);
  }
}

/* === Letter Enter Animation (for Logo and Menu Items) === */
@keyframes letter-enter {
  0% {
    opacity: 0;
    transform: translateY(100%);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

/* ==========================================================================
   Burger Line Keyframe Definitions (Based on common burger animation logic)
   May need to adjust these values to match design's movement.
   ========================================================================== */
@keyframes burger-line1-start {
  /* This is the segment that rotates to form the top arm of the 'X' */
  0% {
    transform: translateY(0) rotate(0deg); /* Initial state */
  }
  100% {
    transform: translateY(2.5px) rotate(45deg); /* Final 'X' top arm */
  }
}

@keyframes burger-line1-end {
  /* This is the segment that fades out or moves away for the top line */
  0% {
    transform: translateX(0); /* Initial state */
    opacity: 1;
  }
  100% {
    transform: translateX(100%); /* Moves out of view */
    opacity: 0; /* Fades out */
  }
}

@keyframes burger-line2-start {
  /* This is the segment that rotates to form the bottom arm of the 'X' */
  0% {
    transform: translateY(0) rotate(0deg); /* Initial state */
  }
  100% {
    transform: translateY(-2.5px) rotate(-45deg); /* Final 'X' bottom arm */
  }
}

@keyframes burger-line2-end {
  /* This is the segment that fades out or moves away for the bottom line */
  0% {
    transform: translateX(0); /* Initial state */
    opacity: 1;
  }
  100% {
    transform: translateX(-100%); /* Moves out of view (opposite direction) */
    opacity: 0; /* Fades out */
  }
}

.transform-custom {
  will-change: transform;
  transform: translate(var(--translateX, 0), var(--translateY, 0))
    rotate(var(--rotate, 0deg)) scale(var(--scaleX, 1), var(--scaleY, 1))
    translateZ(0); /* translateZ(0) for GPU acceleration */
}

.anim-in-fade-up {
  --translateY: 14px;
  opacity: 0;
}
.anim-in-fade-down {
  --translateY: -14px;
  opacity: 0;
}
.anim-in-fade-right {
  --translateX: -14px;
  opacity: 0;
}
.anim-in-fade-left {
  --translateX: 14px;
  opacity: 0;
}
.anim-in-fade-up-right {
  --translateX: -14px;
  --translateY: 14px;
  opacity: 0;
}
.anim-in-fade-up-left {
  --translateX: 14px;
  --translateY: 14px;
  opacity: 0;
}
.anim-in-fade-down-right {
  --translateX: -14px;
  --translateY: -14px;
  opacity: 0;
}
.anim-in-fade-down-left {
  --translateX: 14px;
  --translateY: -14px;
  opacity: 0;
}
.anim-in-zoom-in-up {
  --translateY: 14px;
  --scaleX: 0.6;
  --scaleY: 0.6;
  opacity: 0;
}
.anim-in-zoom-in-down {
  --translateY: -14px;
  --scaleX: 0.6;
  --scaleY: 0.6;
  opacity: 0;
}
.anim-in-zoom-in-right {
  --translateX: -14px;
  --scaleX: 0.6;
  --scaleY: 0.6;
  opacity: 0;
}
.anim-in-zoom-in-left {
  --translateX: 14px;
  --scaleX: 0.6;
  --scaleY: 0.6;
  opacity: 0;
}
.anim-in-zoom-out-up {
  --translateY: 14px;
  --scaleX: 1.2;
  --scaleY: 1.2;
  opacity: 0;
}
.anim-in-zoom-out-down {
  --translateY: -14px;
  --scaleX: 1.2;
  --scaleY: 1.2;
  opacity: 0;
}
.anim-in-zoom-out-right {
  --translateX: -14px;
  --scaleX: 1.2;
  --scaleY: 1.2;
  opacity: 0;
}
.anim-in-zoom-out-left {
  --translateX: 14px;
  --translateY: -14px;
  --scaleX: 1.2;
  --scaleY: 1.2;
  opacity: 0;
}

/* Common transition for all anim-in elements */
/* Apply class to elements that use anim-in-* and transform-custom */
.anim-in {
  transition: transform 0.8s var(--alias-easeOut),
    opacity 0.8s var(--alias-easeOut);
  will-change: transform, opacity;
}

/* ==========================================================================
   Anim-in Final States (Triggered when html.is-ready and parent.is-active)
   These reset the CSS variables and opacity to their "natural" or "active" state.
   ========================================================================== */
html.is-ready .scroll-object.is-active .anim-in-fade-up,
html.is-ready .scroll-object.is-active .anim-in-fade-down,
html.is-ready .scroll-object.is-active .anim-in-fade-right,
html.is-ready .scroll-object.is-active .anim-in-fade-left,
html.is-ready .scroll-object.is-active .anim-in-fade-up-right,
html.is-ready .scroll-object.is-active .anim-in-fade-up-left,
html.is-ready .scroll-object.is-active .anim-in-fade-down-right,
html.is-ready .scroll-object.is-active .anim-in-fade-down-left,
html.is-ready .scroll-object.is-active .anim-in-zoom-in-up,
html.is-ready .scroll-object.is-active .anim-in-zoom-in-down,
html.is-ready .scroll-object.is-active .anim-in-zoom-in-right,
html.is-ready .scroll-object.is-active .anim-in-zoom-in-left,
html.is-ready .scroll-object.is-active .anim-in-zoom-out-up,
html.is-ready .scroll-object.is-active .anim-in-zoom-out-down,
html.is-ready .scroll-object.is-active .anim-in-zoom-out-right,
html.is-ready .scroll-object.is-active .anim-in-zoom-out-left {
  --translateX: 0;
  --translateY: 0;
  --rotate: 0;
  --scaleX: 1;
  --scaleY: 1;
  opacity: 1;
}

.menu-button.is-active .burger-line-container:nth-child(1) {
  /* Can set CSS variables here if the children use transform-custom */
  /* Or directly apply transform if the children are simple */
  --translateY: 2.5px;
  --rotate: 45deg;
  /* If using a transition here, define it. Tailwind `transition` class on the component is better. */
  transition: transform 0.6s var(--alias-easeOut2),
    var(--_tw-translate-x) 0.6s var(--alias-easeOut2),
    var(--_tw-translate-y) 0.6s var(--alias-easeOut2),
    var(--_tw-rotate) 0.6s var(--alias-easeOut2); /* Ensures smooth transition */
}

.menu-button.is-active .burger-line-container:nth-child(2) {
  --translateY: -2.5px;
  --rotate: -45deg;
  transition: transform 0.6s var(--alias-easeOut2),
    var(--_tw-translate-x) 0.6s var(--alias-easeOut2),
    var(--_tw-translate-y) 0.6s var(--alias-easeOut2),
    var(--_tw-rotate) 0.6s var(--alias-easeOut2);
}

.menu-button.is-active
  .burger-line-container:nth-child(1)
  .burger-line-segment:nth-child(2),
.menu-button.is-active
  .burger-line-container:nth-child(2)
  .burger-line-segment:nth-child(1) {
  /* These segments might fade out or scale down if they are the "middle" parts of the lines */
  opacity: 0;
  transform: scaleX(0); /* Example: scale to nothing */
  transition: opacity 0.6s var(--alias-easeOut2),
    transform 0.6s var(--alias-easeOut2);
}

/* ==========================================================================
   Other Animation Utility Classes (Mostly for specific hover effects)
   ========================================================================== */

.fancy-hover {
  @media (hover) {
    & > li {
      transition: opacity 0.3s linear;
    }
  }

  &:has(> li:hover) > li:not(:hover),
  &:has(> li:focus-within) > li:not(:focus-within) {
    opacity: 0.25;
  }
}

.bouncy-hover {
  @media (hover) {
    & > li {
      transform-origin: left center;
      transition: transform 1s var(--bounce), opacity 0.3s linear;
    }
  }

  &:has(> li:hover) > li:not(:hover),
  &:has(> li:focus-within) > li:not(:focus-within) {
    opacity: 0.25;
    transform: scale(0.8);
  }
}

.fanning-hover {
  /* play with these */
  --arc: 5deg;
  --distance-multiplier: 15%;

  &:has(li:nth-child(1):hover) {
    --target: 1;
  }
  &:has(li:nth-child(2):hover) {
    --target: 2;
  }
  &:has(li:nth-child(3):hover) {
    --target: 3;
  }
  &:has(li:nth-child(4) :hover) {
    --target: 4;
  }
  &:has(li:nth-child(5) :hover) {
    --target: 5;
  }
  &:has(li:nth-child(6) :hover) {
    --target: 6;
  }
  &:has(li:nth-child(7) :hover) {
    --target: 7;
  }
  &:has(li:nth-child(8) :hover) {
    --target: 8;
  }
  &:has(li:nth-child(9) :hover) {
    --target: 9;
  }
  &:has(li:nth-child(10) :hover) {
    --target: 10;
  }

  @media (hover) and (prefers-reduced-motion: no-preference) {
    & > li {
      transform-origin: -200% 50%;
      /* Fixed space in var(--bounce) */
      transition: transform 1s var(--bounce), opacity 0.3s linear;
    }

    &:has(> li:hover) > li:not(:hover),
    &:has(> li:focus-within) > li:not(:focus-within) {
      /* used for calculations, don't touch */
      --distance-from-target: abs(var(--sibling-index) - var(--target));
      --distance-multiplier-calc: var(--distance-from-target) *
        var(--distance-multiplier);
      --gradual-fadeout: calc(100% - var(--distance-multiplier-calc));
      --angle: calc((var(--sibling-index) - var(--target)) * var(--arc));

      /* Fixed space in var(--gradual-fadeout) */
      opacity: var(--gradual-fadeout);
      transform: rotateZ(var(--angle));
    }
  }
}

.fanning-list {
  list-style: none; /* Remove default list bullets */
  padding: 0;
  margin: 0;
}

.fanning-list-item {
  transform-origin: left center;
  transition: transform 0.5s ease-in-out, opacity 0.5s ease-in-out;
  padding: 10px;
  margin-bottom: 5px;
  display: block;
  width: 100%;
}
/* Optional: Add a subtle scale effect on active item */
.fanning-list-item:hover,
.fanning-list-item:focus-within {
  transform: scale(1.02);
  transition: transform 0.3s ease;
}

@media (hover: none) {
  .fanning-list:has(> li:hover) > li:not(:hover) {
    opacity: 1 !important;
    transform: none !important;
  }
}

/* Quick Flip Effect */
.quick-flip {
  overflow-y: clip;
  --quick-flip-duration: 0.325s;
}

.quick-flip > * {
  display: block;
  transition: translate var(--quick-flip-duration),
    transform 0s calc(var(--quick-flip-duration) / 2);
  transition-timing-function: cubic-bezier(0.66, 0, 0.34, 1);
}

.quick-flip:hover > *,
.quick-flip:focus > * {
  translate: 0 -2lh;
  transform: translateY(2lh);
}

/* Flip Effect Hero */
.flip-animation-container {
  animation: slideWordsUp 4s infinite ease-in-out;
  will-change: transform;
  transform: translateZ(0);
  width: auto;
}

/* ==========================================================================
   Reduced Motion / Accessibility (Uncomment to enable these)
   ========================================================================== */
/* @media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-delay: -1ms !important;
    animation-duration: 1ms !important;
    animation-iteration-count: 1 !important;
    background-attachment: initial !important;
    scroll-behavior: auto !important;
    transition-duration: 0s !important;
    transition-delay: 0s !important;
  }
} */
