/* app/styles/globals.css (Updated for Tailwind v3) */

/* === Custom Font Definitions === */
@font-face {
  font-family: "MonaspaceNeon"; /* Must match the key in tailwind.config.ts */
  src: url("/fonts/MonaspaceNeon-Regular.woff2") format("woff2"); /* Adjust path and format */
  font-weight: normal; /* Or specify weight range if variable */
  font-style: normal;
  font-display: swap; /* Improves perceived performance */
}

@font-face {
  font-family: "MonaspaceArgon";
  src: url("/fonts/MonaspaceArgon-Regular.woff2") format("woff2");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "MonaspaceXenon"; /* MUST MATCH */
  src: url("/fonts/MonaspaceXenon-Regular.woff2") format("woff2");
}
@font-face {
  font-family: "MonaspaceRadon";
  src: url("/fonts/MonaspaceRadon-Regular.woff2") format("woff2");
}

/* === Tailwind v3 Directives  === */
@tailwind base;
@tailwind components;
@tailwind utilities;

/* === Custom Style Imports (AFTER Tailwind directives for v3 JIT) === */
@import "./theme.css"; /* Defines CSS variables, custom component styles */
@import "./utility-patterns.css";
@import "./animations.css";
@import "./mdx.css";

/* === Base HTML/Body Styles === */
html,
body {
  max-width: 100vw;
  overflow-x: hidden; /* Prevent horizontal scroll */
  min-height: 100vh;
}

body {
  /* Theme-aware Background and Text Color --- */
  /* Generic role-based variables, which get their values, from the theme class (.dark, .mocha-mousse) applied to the html tag. */

  background-color: var(--color-surface-page);
  color: var(--color-text-default);

  background-image: none;
  /* Or 'scroll' if scrollable needed, but 'initial' is safer */
  background-attachment: initial;

  font-family: var(--font-cal-sans);
  font-size: var(--fontSize-base);
  line-height: var(--lineHeight-normal);

  font-feature-settings: "ss01" 1;
  font-feature-settings: "ss02" 1;
  /* Standard browser normalization */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;

  overscroll-behavior: none !important;
}

.font-mono {
  letter-spacing: 0.05em !important;
}

.will-change-transform {
  transform: translateY(3.3446px) translateZ(0px);
  will-change: transform;
}

.hero-text {
  font-family: var(--font-cinzel), serif;
  line-height: 1.2; /* maps to leading-[1] */
  /* text-transform: uppercase; */
  font-size: clamp(1.875rem, 0.92rem + 4.9vw, 5.625rem);
  letter-spacing: -0.025em;

  /* stylistic set to activate */
  font-feature-settings: "ss01" 1;
  /* font-feature-settings: "ss02" 1; */
}

/* Basic reset */
* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

a {
  color: inherit;
  text-decoration: none;
}

button {
  background-color: var(--button-primary-fill);
  color: var(--button-primary-text);
  border: 1px solid var(--button-primary-border);
  padding: 10px 20px; /* Example padding */
  border-radius: 5px; /* Example border radius */
  cursor: pointer;
  transition: background-color 0.3s ease, border-color 0.3s ease,
    color 0.3s ease; /* Smooth transition for hover */
}

button:hover {
  background-color: var(--button-primary-fill-hover);
  border-color: var(--button-primary-border-hover);
  color: var(--button-primary-text-hover);
}

/* Custom hover effects */
.nav-item {
  transition: all 0.2s ease-in-out;
}

/* Optional: Add subtle shadow to nav */
.nav-shadow {
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
}

/* === lighting effect with pseudo-elements === */
.bg-lighting::before {
  content: "";
  position: absolute;
  top: -20%;
  left: -20%;
  width: 140%;
  height: 140%;
  background: radial-gradient(
    circle at 50% 50%,
    rgba(255, 255, 255, 0.2) 0%,
    transparent 60%
  );
  pointer-events: none;
}

/* === Highlighter Styles === */

/* HighlighterItem Pseudo-elements */
.highlighterItem::before {
  content: "";
  position: absolute;
  width: 24rem; /* w-96 */
  height: 24rem; /* h-96 */
  left: -12rem; /* left-48 */
  top: -12rem; /* top-48 */
  background-color: rgb(var(--primary-rgb));
  border-radius: 9999px;
  opacity: 0;
  pointer-events: none;
  transition: opacity 500ms;
  transform: translate(
    var(--mouse-x, 0px),
    var(--mouse-y, 0px)
  ); /* Add fallback */
  z-index: 30; /* Check z-index conflicts */
  filter: blur(100px);
}
.highlighterItem::after {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: inherit;
  opacity: 0;
  transition: opacity 500ms;
  /* Example subtle foreground color */
  background: radial-gradient(
    250px circle at var(--mouse-x, 0px) var(--mouse-y, 0px),
    rgba(var(--foreground-rgb), 0.1),
    transparent
  );
  z-index: 10; /* Check z-index conflicts */
}

/* HighlighterItem02 Pseudo-elements */
.highlighterItem02::before {
  content: "";
  position: absolute;
  width: 16rem; /* w-64 */
  height: 16rem; /* h-64 */
  left: -8rem; /* left-32 */
  top: -8rem; /* top-32 */
  background-color: rgb(var(--secondary-rgb));
  border-radius: 9999px;
  opacity: 0;
  pointer-events: none;
  transition: opacity 500ms;
  transform: translate(var(--mouse-x, 0px), var(--mouse-y, 0px)); /* fallback */
  z-index: 30;
  filter: blur(64px);
}

.highlighterItem02::after {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: inherit;
  opacity: 0;
  transition: opacity 500ms;
  background: radial-gradient(
    250px circle at var(--mouse-x, 0px) var(--mouse-y, 0px),
    rgba(var(--foreground-rgb), 0.1),
    transparent
  );
  z-index: 10;
}

/* Group hover effects */
.group:hover .highlighterItem::before {
  opacity: 0.1;
}
.group:hover .highlighterItem::after {
  opacity: 0.3;
}
.group:hover .highlighterItem02::before {
  opacity: 0.15;
}
.group:hover .highlighterItem02::after {
  opacity: 0.3;
}

/* === Custom @layer definitions  === */

@layer utilities {
  .rtl {
    direction: rtl;
  }
}

/* MDX Prose Styles (Controlling Typography Plugin) --- */
/* Apply thin scrollbar specifically to code blocks */
.mdx-prose figure[data-rehype-pretty-code-figure] > pre {
  border: 1px solid rgb(var(--border-subtle-rgb));
  border-radius: 6px;
  padding: var(--spacing-md);
  overflow-x: auto; /* Ensure horizontal scrolling is enabled */
  font-size: 0.9em;
  line-height: 1.6;
  scrollbar-width: thin; /* Standard property */
  scrollbar-color: rgba(var(--foreground-rgb), 0.5) transparent; /* Optional: Thumb/track color */
}

/* Webkit scrollbar styling (optional but recommended for cross-browser) */
.mdx-prose figure[data-rehype-pretty-code-figure] > pre::-webkit-scrollbar {
  height: 6px; /* Height for horizontal scrollbar */
  width: 6px; /* Width for vertical scrollbar (if it ever scrolls vertically) */
}

.mdx-prose
  figure[data-rehype-pretty-code-figure]
  > pre::-webkit-scrollbar-track {
  background: transparent; /* Or a subtle background color */
}

.mdx-prose
  figure[data-rehype-pretty-code-figure]
  > pre::-webkit-scrollbar-thumb {
  background-color: rgba(var(--foreground-rgb), 0.5); /* Match thumb color */
  border-radius: 3px;
  border: 1px solid transparent; /* Prevent border from adding size */
  background-clip: content-box; /* Clip background to content area */
}

/* MDX Prose Styles (Controlling Typography Plugin) --- */
/* Plugin variables need to be defined to use theme variables */
.mdx-prose {
  @apply max-w-none;

  /* Map semantic variables defined in :root */
  --tw-prose-body: rgb(var(--color-text-default-rgb));
  --tw-prose-headings: rgb(var(--color-text-default-rgb));
  --tw-prose-lead: rgb(var(--color-text-muted-rgb));
  --tw-prose-links: rgb(
    var(--color-accent-primary-rgb)
  ); /* Using moth-orange */
  --tw-prose-bold: rgb(var(--color-text-default-rgb));
  --tw-prose-counters: rgb(var(--color-text-muted-rgb));
  --tw-prose-bullets: rgb(
    var(--color-accent-primary-rgb)
  ); /* Using moth-orange */
  --tw-prose-hr: rgb(var(--color-border-default-rgb)); /* Using moth-mousse */
  --tw-prose-quotes: rgb(var(--color-text-muted-rgb));
  --tw-prose-quote-borders: rgb(var(--color-border-default-rgb));
  --tw-prose-captions: rgb(var(--color-text-muted-rgb));
  --tw-prose-code: rgb(
    var(--color-accent-secondary-rgb)
  ); /* Using deep-ochre */
  --tw-prose-pre-code: inherit; /* Let syntax highlighter handle */
  --tw-prose-pre-bg: rgb(
    var(--color-code-background-rgb)
  ); /* Using moth-brown */
  --tw-prose-th-borders: rgb(var(--color-border-default-rgb));
  --tw-prose-td-borders: rgb(
    var(--color-border-subtle-rgb)
  ); /* Using moth-brown */

  /* Define invert vars pointing to the same values, just in case */
  --tw-prose-invert-body: rgb(var(--color-text-default-rgb));
  --tw-prose-invert-headings: rgb(var(--color-text-default-rgb));
  --tw-prose-invert-lead: rgb(var(--color-text-muted-rgb));
  --tw-prose-invert-links: rgb(var(--color-accent-primary-rgb));
  --tw-prose-invert-bold: rgb(var(--color-text-default-rgb));
  --tw-prose-invert-counters: rgb(var(--color-text-muted-rgb));
  --tw-prose-invert-bullets: rgb(var(--color-accent-primary-rgb));
  --tw-prose-invert-hr: rgb(var(--color-border-default-rgb));
  --tw-prose-invert-quotes: rgb(var(--color-text-muted-rgb));
  --tw-prose-invert-quote-borders: rgb(var(--color-border-default-rgb));
  --tw-prose-invert-captions: rgb(var(--color-text-muted-rgb));
  --tw-prose-invert-code: rgb(var(--color-accent-secondary-rgb));
  --tw-prose-invert-pre-code: inherit;
  --tw-prose-invert-pre-bg: rgb(var(--color-code-background-rgb));
  --tw-prose-invert-th-borders: rgb(var(--color-border-default-rgb));
  --tw-prose-invert-td-borders: rgb(var(--color-border-subtle-rgb));
}
