/* app/styles/globals.css */

@import "./theme.css";
@import "./utility-patterns.css";
@import "./mdx.css";

@font-face {
  font-family: "MonaspaceNeon";
  src: url("/fonts/MonaspaceNeon-Regular.woff2") format("woff2");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: "MonaspaceArgon";
  src: url("/fonts/MonaspaceArgon-Regular.woff2") format("woff2");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: "MonaspaceXenon";
  src: url("/fonts/MonaspaceXenon-Regular.woff2") format("woff2");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  html {
    scroll-behavior: smooth;
    -webkit-text-size-adjust: 100%;
    -moz-tab-size: 4;
    -o-tab-size: 4;
    tab-size: 4;
    font-feature-settings: normal;
    font-variation-settings: normal;
    -webkit-tap-highlight-color: transparent;
    @apply font-body text-step-0 leading-base;
    @apply bg-surface-page text-text-default;
  }
  body {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    text-rendering: optimizelegibility;
    overscroll-behavior: none;
    scroll-snap-type: y mandatory;
  }
  li {
    transition-delay: var(--delay, 0ms);
  }
}

@layer components {
  .content {
    z-index: var(--my-z-index-content);
    max-width: 1140px;
    margin-left: auto;
    margin-right: auto;
    padding-left: 1rem;
    padding-right: 1rem;
    position: relative;
  }

  .loader-container {
    position: fixed;
    inset: 0;
    z-index: var(--my-z-index-loader);
    overflow: hidden;
    pointer-events: none;
  }

  .header-container {
    z-index: var(--my-z-index-header);
    position: fixed;
    pointer-events: none;
    width: 100vw;
    top: 0;
    left: 0;
    background-color: transparent;
    box-shadow: none;
    transition: background-color 500ms var(--my-ease-out-2),
      box-shadow 500ms var(--my-ease-out-2);
  }

  .header-container-glass {
    height: 68px;
    background-color: color-mix(in srgb, var(--c-glass) 12%, transparent);
    backdrop-filter: blur(8px) url(#glassHeaderFilter)
      saturate(var(--saturation));
    -webkit-backdrop-filter: blur(8px) saturate(var(--saturation)); /* For WebKit browsers */

    box-shadow: inset 0 0 0 1px in srgb,
      color-mix(
        var(--c-light) calc(var(--glass-reflex-light) * 10%),
        transparent
      ),
      inset 1.8px 3px 0px -2px color-mix(in srgb, var(--c-light)
            calc(var(--glass-reflex-light) * 90%), transparent),
      inset -2px -2px 0px -2px color-mix(in srgb, var(--c-light)
            calc(var(--glass-reflex-light) * 80%), transparent),
      inset -3px -8px 1px -6px color-mix(in srgb, var(--c-light)
            calc(var(--glass-reflex-light) * 60%), transparent),
      inset -0.3px -1px 4px 0px
        color-mix(
          in srgb,
          var(--c-dark) calc(var(--glass-reflex-dark) * 12%),
          transparent
        ),
      inset -1.5px 2.5px 0px -2px
        color-mix(
          in srgb,
          var(--c-dark) calc(var(--glass-reflex-dark) * 20%),
          transparent
        ),
      inset 0px 3px 4px -2px color-mix(in srgb, var(--c-dark)
            calc(var(--glass-reflex-dark) * 20%), transparent),
      inset 2px -6.5px 1px -4px
        color-mix(
          in srgb,
          var(--c-dark) calc(var(--glass-reflex-dark) * 10%),
          transparent
        ),
      0px 1px 5px 0px
        color-mix(
          in srgb,
          var(--c-dark) calc(var(--glass-reflex-dark) * 10%),
          transparent
        ),
      0px 6px 16px 0px
        color-mix(
          in srgb,
          var(--c-dark) calc(var(--glass-reflex-dark) * 8%),
          transparent
        );

    transition: background-color 400ms cubic-bezier(1, 0, 0.4, 1),
      box-shadow 400ms cubic-bezier(1, 0, 0.4, 1),
      color 400ms cubic-bezier(1, 0, 0.4, 1);

    border-bottom-left-radius: 1em; /* Rounded corners for aesthetics */
    border-bottom-right-radius: 1em;
  }

  .glass-header__filter {
    position: absolute;
    width: 0;
    height: 0;
    z-index: -1;
  }

  .app-header-block {
    pointer-events: auto;
    display: flex;
    align-items: center;
    justify-content: space-between;
    flex: 1;
    height: var(--my-nav-height);
  }

  .header-main {
    pointer-events: auto;
    border-width: 0 0 4px;
    border-image-slice: 1;
    border-image-source: linear-gradient(
      to right,
      var(--sc-red-1),
      var(--sc-orange-2)
    );
    border-left: 0;
    border-right: 0;
    border-top: 0;
  }

  .header-nav {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 1rem 2rem;
  }

  .logo-wrap a {
    font-size: 1.4rem;
    font-weight: bold;
    text-decoration: none;
    color: var(--gray-lightest);
  }

  .nav-stripe {
    flex: 1;
    height: 2px;
    background: linear-gradient(to right, var(--sc-red-1), var(--sc-orange-2));
    margin: 0 1rem;
  }

  .contact {
    font-size: 0.875rem;
    color: var(--gray-lightest);
  }
  .section-grid-wrapper {
    @apply py-10;
  }

  .section-grid-inner {
    @apply flex relative w-full h-auto items-stretch flex-shrink flex-row flex-nowrap container;
    gap: var(--my-grid-column-gap, 0px);
  }

  .hamburger-button {
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
  }

  .hamburger-line-1,
  .hamburger-line-2 {
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
    transition: all 0.4s var(--my-ease-bounce);
  }

  .hamburger-button.is-active .hamburger-line-1 {
    transform: translateY(0) rotate(45deg);
  }
  .hamburger-button.is-active .hamburger-line-2 {
    transform: translateY(0) rotate(-45deg);
  }

  .menu-button.is-active .burger-line-container:nth-child(1) {
    animation: var(--my-animation-burger-close-1) 0.5s var(--my-ease-out)
      forwards;
  }

  .menu-button.is-active .burger-line-container:nth-child(2) {
    animation: var(--my-animation-burger-close-2) 0.5s var(--my-ease-out)
      forwards;
  }

  .scrollbar-thin {
    scrollbar-width: thin;
  }
  .scrollbar-thin::-webkit-scrollbar {
    width: 6px;
    height: 6px;
  }
  .scrollbar-thin::-webkit-scrollbar-track {
    background: transparent;
  }
  .scrollbar-thin::-webkit-scrollbar-thumb {
    background-color: var(--color-primary);
    border-radius: 9999px;
    border: 1px solid var(--color-accent-primary);
  }
  .scrollbar-thin::-webkit-scrollbar-thumb:hover {
    background-color: var(--color-accent-primary);
  }

  /* View Transitions */
  ::view-transition-old(root) {
    animation: exit-fade 0.25s ease-out forwards;
  }
  ::view-transition-new(root) {
    animation: enter-fade 0.25s ease-out 0.1s backwards;
  }

  @keyframes exit-fade {
    from {
      opacity: 1;
    }
    to {
      opacity: 0;
    }
  }

  @keyframes enter-fade {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  /* Animation States */
  .anim-initial-state {
    opacity: 0;
    transform: translate(var(--my-translateX), var(--my-translateY))
      rotate(var(--my-rotate)) scale(var(--my-scaleX), var(--my-scaleY));
  }

  .anim-final-state {
    opacity: 1;
    transform: translate(0, 0) rotate(0) scale(1, 1);
  }

  .anim-in {
    transition: transform 0.8s var(--my-ease-out),
      opacity 0.8s var(--my-ease-out);
    will-change: transform, opacity;
  }

  html.is-ready .anim-trigger.is-active .anim-initial-state {
    @apply anim-final-state;
  }
}
