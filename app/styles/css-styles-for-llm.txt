Directory Tree:
.
├── animations.css
├── globals.css
├── mdx.css
├── theme.css
└── utility-patterns.css


================================================================================
FILE: animations.css
================================================================================

/* app/styles/animations.css */

/* ==========================================================================
   Keyframe Definitions (Must match names used in tailwind.config.ts)
   ========================================================================== */

/* Animated Gradient Underline */
@keyframes slideGradient {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

/* === Text Flip Effect (Hero) === */
@keyframes slideWordsUp {
  0%,
  45% {
    /* Pause on 'Build' */
    transform: translateY(0);
  }
  50%,
  95% {
    /* Pause on 'Break' */
    /* Move container up by the height of one line (100% of its own height) */
    transform: translateY(-100%);
  }
  100% {
    /* Loop back */
    transform: translateY(0);
  }
}

/* === Letter Enter Animation (for Logo and Menu Items) === */
@keyframes letter-enter {
  0% {
    opacity: 0;
    transform: translateY(100%);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

/* ==========================================================================
   Burger Line Keyframe Definitions (Based on common burger animation logic)
   May need to adjust these values to match design's movement.
   ========================================================================== */
@keyframes burger-line1-start {
  /* This is the segment that rotates to form the top arm of the 'X' */
  0% {
    transform: translateY(0) rotate(0deg); /* Initial state */
  }
  100% {
    transform: translateY(2.5px) rotate(45deg); /* Final 'X' top arm */
  }
}

@keyframes burger-line1-end {
  /* This is the segment that fades out or moves away for the top line */
  0% {
    transform: translateX(0); /* Initial state */
    opacity: 1;
  }
  100% {
    transform: translateX(100%); /* Moves out of view */
    opacity: 0; /* Fades out */
  }
}

@keyframes burger-line2-start {
  /* This is the segment that rotates to form the bottom arm of the 'X' */
  0% {
    transform: translateY(0) rotate(0deg); /* Initial state */
  }
  100% {
    transform: translateY(-2.5px) rotate(-45deg); /* Final 'X' bottom arm */
  }
}

@keyframes burger-line2-end {
  /* This is the segment that fades out or moves away for the bottom line */
  0% {
    transform: translateX(0); /* Initial state */
    opacity: 1;
  }
  100% {
    transform: translateX(-100%); /* Moves out of view (opposite direction) */
    opacity: 0; /* Fades out */
  }
}

.transform-custom {
  will-change: transform;
  transform: translate(var(--translateX, 0), var(--translateY, 0))
    rotate(var(--rotate, 0deg)) scale(var(--scaleX, 1), var(--scaleY, 1))
    translateZ(0); /* translateZ(0) for GPU acceleration */
}

.anim-in-fade-up {
  --translateY: 14px;
  opacity: 0;
}
.anim-in-fade-down {
  --translateY: -14px;
  opacity: 0;
}
.anim-in-fade-right {
  --translateX: -14px;
  opacity: 0;
}
.anim-in-fade-left {
  --translateX: 14px;
  opacity: 0;
}
.anim-in-fade-up-right {
  --translateX: -14px;
  --translateY: 14px;
  opacity: 0;
}
.anim-in-fade-up-left {
  --translateX: 14px;
  --translateY: 14px;
  opacity: 0;
}
.anim-in-fade-down-right {
  --translateX: -14px;
  --translateY: -14px;
  opacity: 0;
}
.anim-in-fade-down-left {
  --translateX: 14px;
  --translateY: -14px;
  opacity: 0;
}
.anim-in-zoom-in-up {
  --translateY: 14px;
  --scaleX: 0.6;
  --scaleY: 0.6;
  opacity: 0;
}
.anim-in-zoom-in-down {
  --translateY: -14px;
  --scaleX: 0.6;
  --scaleY: 0.6;
  opacity: 0;
}
.anim-in-zoom-in-right {
  --translateX: -14px;
  --scaleX: 0.6;
  --scaleY: 0.6;
  opacity: 0;
}
.anim-in-zoom-in-left {
  --translateX: 14px;
  --scaleX: 0.6;
  --scaleY: 0.6;
  opacity: 0;
}
.anim-in-zoom-out-up {
  --translateY: 14px;
  --scaleX: 1.2;
  --scaleY: 1.2;
  opacity: 0;
}
.anim-in-zoom-out-down {
  --translateY: -14px;
  --scaleX: 1.2;
  --scaleY: 1.2;
  opacity: 0;
}
.anim-in-zoom-out-right {
  --translateX: -14px;
  --scaleX: 1.2;
  --scaleY: 1.2;
  opacity: 0;
}
.anim-in-zoom-out-left {
  --translateX: 14px;
  --translateY: -14px;
  --scaleX: 1.2;
  --scaleY: 1.2;
  opacity: 0;
}

/* Common transition for all anim-in elements */
/* Apply class to elements that use anim-in-* and transform-custom */
.anim-in {
  transition: transform 0.8s var(--alias-easeOut),
    opacity 0.8s var(--alias-easeOut);
  will-change: transform, opacity;
}

/* ==========================================================================
   Anim-in Final States (Triggered when html.is-ready and parent.is-active)
   These reset the CSS variables and opacity to their "natural" or "active" state.
   ========================================================================== */
html.is-ready .scroll-object.is-active .anim-in-fade-up,
html.is-ready .scroll-object.is-active .anim-in-fade-down,
html.is-ready .scroll-object.is-active .anim-in-fade-right,
html.is-ready .scroll-object.is-active .anim-in-fade-left,
html.is-ready .scroll-object.is-active .anim-in-fade-up-right,
html.is-ready .scroll-object.is-active .anim-in-fade-up-left,
html.is-ready .scroll-object.is-active .anim-in-fade-down-right,
html.is-ready .scroll-object.is-active .anim-in-fade-down-left,
html.is-ready .scroll-object.is-active .anim-in-zoom-in-up,
html.is-ready .scroll-object.is-active .anim-in-zoom-in-down,
html.is-ready .scroll-object.is-active .anim-in-zoom-in-right,
html.is-ready .scroll-object.is-active .anim-in-zoom-in-left,
html.is-ready .scroll-object.is-active .anim-in-zoom-out-up,
html.is-ready .scroll-object.is-active .anim-in-zoom-out-down,
html.is-ready .scroll-object.is-active .anim-in-zoom-out-right,
html.is-ready .scroll-object.is-active .anim-in-zoom-out-left {
  --translateX: 0;
  --translateY: 0;
  --rotate: 0;
  --scaleX: 1;
  --scaleY: 1;
  opacity: 1;
}

.menu-button.is-active .burger-line-container:nth-child(1) {
  /* Can set CSS variables here if the children use transform-custom */
  /* Or directly apply transform if the children are simple */
  --translateY: 2.5px;
  --rotate: 45deg;
  /* If using a transition here, define it. Tailwind `transition` class on the component is better. */
  transition: transform 0.6s var(--alias-easeOut2),
    var(--_tw-translate-x) 0.6s var(--alias-easeOut2),
    var(--_tw-translate-y) 0.6s var(--alias-easeOut2),
    var(--_tw-rotate) 0.6s var(--alias-easeOut2); /* Ensures smooth transition */
}

.menu-button.is-active .burger-line-container:nth-child(2) {
  --translateY: -2.5px;
  --rotate: -45deg;
  transition: transform 0.6s var(--alias-easeOut2),
    var(--_tw-translate-x) 0.6s var(--alias-easeOut2),
    var(--_tw-translate-y) 0.6s var(--alias-easeOut2),
    var(--_tw-rotate) 0.6s var(--alias-easeOut2);
}

.menu-button.is-active
  .burger-line-container:nth-child(1)
  .burger-line-segment:nth-child(2),
.menu-button.is-active
  .burger-line-container:nth-child(2)
  .burger-line-segment:nth-child(1) {
  /* These segments might fade out or scale down if they are the "middle" parts of the lines */
  opacity: 0;
  transform: scaleX(0); /* Example: scale to nothing */
  transition: opacity 0.6s var(--alias-easeOut2),
    transform 0.6s var(--alias-easeOut2);
}

/* ==========================================================================
   Other Animation Utility Classes (Mostly for specific hover effects)
   ========================================================================== */

.fancy-hover {
  @media (hover) {
    & > li {
      transition: opacity 0.3s linear;
    }
  }

  &:has(> li:hover) > li:not(:hover),
  &:has(> li:focus-within) > li:not(:focus-within) {
    opacity: 0.25;
  }
}

.bouncy-hover {
  @media (hover) {
    & > li {
      transform-origin: left center;
      transition: transform 1s var(--bounce), opacity 0.3s linear;
    }
  }

  &:has(> li:hover) > li:not(:hover),
  &:has(> li:focus-within) > li:not(:focus-within) {
    opacity: 0.25;
    transform: scale(0.8);
  }
}

.fanning-hover {
  /* play with these */
  --arc: 5deg;
  --distance-multiplier: 15%;

  &:has(li:nth-child(1):hover) {
    --target: 1;
  }
  &:has(li:nth-child(2):hover) {
    --target: 2;
  }
  &:has(li:nth-child(3):hover) {
    --target: 3;
  }
  &:has(li:nth-child(4) :hover) {
    --target: 4;
  }
  &:has(li:nth-child(5) :hover) {
    --target: 5;
  }
  &:has(li:nth-child(6) :hover) {
    --target: 6;
  }
  &:has(li:nth-child(7) :hover) {
    --target: 7;
  }
  &:has(li:nth-child(8) :hover) {
    --target: 8;
  }
  &:has(li:nth-child(9) :hover) {
    --target: 9;
  }
  &:has(li:nth-child(10) :hover) {
    --target: 10;
  }

  @media (hover) and (prefers-reduced-motion: no-preference) {
    & > li {
      transform-origin: -200% 50%;
      /* Fixed space in var(--bounce) */
      transition: transform 1s var(--bounce), opacity 0.3s linear;
    }

    &:has(> li:hover) > li:not(:hover),
    &:has(> li:focus-within) > li:not(:focus-within) {
      /* used for calculations, don't touch */
      --distance-from-target: abs(var(--sibling-index) - var(--target));
      --distance-multiplier-calc: var(--distance-from-target) *
        var(--distance-multiplier);
      --gradual-fadeout: calc(100% - var(--distance-multiplier-calc));
      --angle: calc((var(--sibling-index) - var(--target)) * var(--arc));

      /* Fixed space in var(--gradual-fadeout) */
      opacity: var(--gradual-fadeout);
      transform: rotateZ(var(--angle));
    }
  }
}

.fanning-list {
  list-style: none; /* Remove default list bullets */
  padding: 0;
  margin: 0;
}

.fanning-list-item {
  transform-origin: left center;
  transition: transform 0.5s ease-in-out, opacity 0.5s ease-in-out;
  padding: 10px;
  margin-bottom: 5px;
  display: block;
  width: 100%;
}
/* Optional: Add a subtle scale effect on active item */
.fanning-list-item:hover,
.fanning-list-item:focus-within {
  transform: scale(1.02);
  transition: transform 0.3s ease;
}

@media (hover: none) {
  .fanning-list:has(> li:hover) > li:not(:hover) {
    opacity: 1 !important;
    transform: none !important;
  }
}

/* Quick Flip Effect */
.quick-flip {
  overflow-y: clip;
  --quick-flip-duration: 0.325s;
}

.quick-flip > * {
  display: block;
  transition: translate var(--quick-flip-duration),
    transform 0s calc(var(--quick-flip-duration) / 2);
  transition-timing-function: cubic-bezier(0.66, 0, 0.34, 1);
}

.quick-flip:hover > *,
.quick-flip:focus > * {
  translate: 0 -2lh;
  transform: translateY(2lh);
}

/* Flip Effect Hero */
.flip-animation-container {
  animation: slideWordsUp 4s infinite ease-in-out;
  will-change: transform;
  transform: translateZ(0);
  width: auto;
}

/* ==========================================================================
   Reduced Motion / Accessibility (Uncomment to enable these)
   ========================================================================== */
/* @media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-delay: -1ms !important;
    animation-duration: 1ms !important;
    animation-iteration-count: 1 !important;
    background-attachment: initial !important;
    scroll-behavior: auto !important;
    transition-duration: 0s !important;
    transition-delay: 0s !important;
  }
} */


================================================================================
FILE: globals.css
================================================================================

/* app/styles/globals.css */

@import "./theme.css";

@font-face {
  font-family: "MonaspaceNeon";
  src: url("/fonts/MonaspaceNeon-Regular.woff2") format("woff2");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: "MonaspaceArgon";
  src: url("/fonts/MonaspaceArgon-Regular.woff2") format("woff2");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: "MonaspaceXenon";
  src: url("/fonts/MonaspaceXenon-Regular.woff2") format("woff2");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: "MonaspaceRadon";
  src: url("/fonts/MonaspaceRadon-Regular.woff2") format("woff2");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  blockquote::before {
    content: open-quote;
  }
  blockquote::after {
    content: close-quote;
  }
  blockquote {
    quotes: "“" "”" "‘" "’";
  }

  html {
    scroll-behavior: smooth;
    font-size: 100%;
    --vw: 1px;
    --vh: 1px;
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    display: block;
    font-family: var(--font-sans);
    -webkit-locale: "en";
  }

  html.is-ready {
    /* Styles that apply only when is-ready is present on html */
  }

  body,
  input {
    color: var(--color-text-default);
    background-color: var(--color-surface-page);
    font-family: var(--font-sans);
    font-feature-settings: "kern" on, "liga" on;
    font-size: var(--type-scale-step-0);
    letter-spacing: normal;
    line-height: 1.325;
    font-variation-settings: "opsz" var(--pf-opsz), "slnt" var(--pf-slnt),
      "wght" var(--pf-wght); /* Default wght: 400 from theme.css */
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    --translateX: 0;
    --translateY: 0;
    --rotate: 0;
    --scaleX: 1;
    --scaleY: 1;
  }

  body {
    overscroll-behavior: none;
  }

  body[page-type="detail"] {
    background: var(--nerdy-gradient);
    background-attachment: fixed;
  }

  @media screen and (min-width: 40em) {
    body,
    input {
      --pf-opsz: 20;
    }
  }

  @media screen and (min-width: 45em) {
    body,
    input {
      line-height: 1.4725;
      --pf-opsz: 40;
    }
  }

  @media screen and (min-width: 55em) {
    body,
    input {
      line-height: 1.5;
    }
  }

  @media screen and (min-width: 65em) {
    body,
    input {
      --pf-opsz: 80;
    }
  }

  @media screen and (min-width: 80em) {
    body,
    input {
      line-height: 1.45;
      --pf-opsz: 160;
    }
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  p.welcome {
    --pf-opsz: 250;
  }

  @media screen and (min-width: 30em) {
    h1,
    h2,
    h3,
    h4,
    h5,
    h6,
    p.welcome {
      --pf-opsz: 400;
    }
  }

  @media screen and (min-width: 35em) {
    h1,
    h2,
    h3,
    h4,
    h5,
    h6,
    p {
      --pf-opsz: 600;
    }
  }

  @media screen and (min-width: 50em) {
    h1,
    h2,
    h3,
    h4,
    h5,
    h6,
    p {
      --pf-opsz: 850;
    }
  }

  @media screen and (min-width: 70em) {
    h1,
    h2,
    h3,
    h4,
    h5,
    h6,
    p.welcome {
      --pf-opsz: 1000;
    }
  }

  strong {
    font-synthesis: none;
    --pf-wght: 700;
    font-variation-settings: "opsz" var(--pf-opsz), "slnt" var(--pf-slnt),
      "wght" var(--pf-wght);
  }

  em,
  i,
  blockquote p {
    font-style: italic;
    font-synthesis: none;
    --pf-slnt: 10;
    font-variation-settings: "opsz" var(--pf-opsz), "slnt" var(--pf-slnt),
      "wght" var(--pf-wght);
  }

  h1,
  h2,
  h3,
  h4 {
    padding-bottom: var(--spacing-xs);
    font-variation-settings: "opsz" var(--pf-opsz), "slnt" var(--pf-slnt),
      "wght" var(--pf-wght);
  }

  h1 {
    font-size: var(--type-scale-step-5);
    line-height: var(--type-scale-step-5);
    padding-bottom: var(--spacing-lg);
    --pf-wght: 300;
    font-variation-settings: "opsz" var(--pf-opsz), "slnt" var(--pf-slnt),
      "wght" var(--pf-wght);
  }

  @media screen and (min-width: 40em) {
    h1 {
      line-height: calc(var(--type-scale-step-5) * 0.825);
    }
  }

  h1 span {
    --pf-wght: 100;
    font-variation-settings: "opsz" var(--pf-opsz), "slnt" var(--pf-slnt),
      "wght" var(--pf-wght);
  }

  h2 {
    font-size: var(--type-scale-step-3);
    line-height: var(--type-scale-step-3);
    --pf-wght: 100;
    font-variation-settings: "opsz" var(--pf-opsz), "slnt" var(--pf-slnt),
      "wght" var(--pf-wght);
  }

  h3 {
    font-size: var(--type-scale-step-2);
    line-height: var(--type-scale-step-2);
    --pf-wght: 700;
    font-variation-settings: "opsz" var(--pf-opsz), "slnt" var(--pf-slnt),
      "wght" var(--pf-wght);
  }

  h3 a {
    text-decoration-thickness: 0.025em;
  }

  h4 {
    font-size: var(--type-scale-step-0);
    line-height: var(--type-scale-step-0);
    letter-spacing: var(--tracking-wide);
    text-transform: uppercase;
    --pf-wght: 560;
    font-variation-settings: "opsz" var(--pf-opsz), "slnt" var(--pf-slnt),
      "wght" var(--pf-wght);
  }

  h4 + p,
  h4 + ul.tags {
    margin-top: -0.5rem;
  }

  figcaption,
  button {
    font-size: var(--type-scale-step--1);
  }

  figcaption {
    margin-bottom: var(--spacing-l);
  }

  * {
    box-sizing: border-box;
    padding: 0;
    margin: 0;
  }

  a {
    @apply transition-colors duration-300;
    /* @apply text-text-default hover:text-accent-primary; */
    text-decoration: none;
  }

  .hero-text {
    font-family: var(--font-cinzel), serif;
    line-height: 1.2;
    font-size: clamp(1.875rem, 0.82rem + 4.6vw, 5.625rem);
    letter-spacing: -0.025em;
    font-feature-settings: "ss01" 1;
  }

  .font-mono {
    letter-spacing: 0.05em !important;
  }

  /* This custom transform class is crucial for your variable-based animations */
  .transform-custom {
    will-change: transform;
    transform: translate(var(--translateX, 0), var(--translateY, 0))
      /* Added defaults for safety */ rotate(var(--rotate, 0deg))
      scale(var(--scaleX, 1), var(--scaleY, 1)) translateZ(0);
  }

  /* This pattern relies on a parent `.is-ready.is-active` state. */
  /* These are NOT actual utility classes but part of your animation system */
  /* Keep these as they manage the final states when animation triggers */
  .is-ready.is-active .anim-in-shift-y-0 {
    --translateY: 0%;
  }

  .will-change-transform {
    transform: translateY(3.3446px) translateZ(0px);
    will-change: transform;
  }

  .mdx-prose {
    @apply max-w-none;
    --tw-prose-body: var(--color-text-default);
    --tw-prose-body: rgb(var(--color-text-default-rgb));
    --tw-prose-headings: rgb(var(--color-text-default-rgb));
    --tw-prose-lead: rgb(var(--color-text-muted-rgb));
    --tw-prose-links: rgb(var(--color-accent-primary-rgb));
    --tw-prose-bold: rgb(var(--color-text-default-rgb));
    --tw-prose-counters: rgb(var(--color-text-muted-rgb));
    --tw-prose-bullets: rgb(var(--color-accent-primary-rgb));
    --tw-prose-hr: rgb(var(--color-border-default-rgb));
    --tw-prose-quotes: rgb(var(--color-text-muted-rgb));
    --tw-prose-quote-borders: rgb(var(--color-border-default-rgb));
    --tw-prose-captions: rgb(var(--color-text-muted-rgb));
    --tw-prose-code: rgb(var(--color-accent-secondary-rgb));
    --tw-prose-pre-code: inherit;
    --tw-prose-pre-bg: rgb(var(--color-code-background-rgb));
    --tw-prose-th-borders: rgb(var(--color-border-default-rgb));
    --tw-prose-td-borders: rgb(var(--color-border-subtle-rgb));
    --tw-prose-invert-body: rgb(var(--color-text-default-rgb));
    --tw-prose-invert-headings: rgb(var(--color-text-default-rgb));
    --tw-prose-invert-lead: rgb(var(--color-text-muted-rgb));
    --tw-prose-invert-links: rgb(var(--color-accent-primary-rgb));
    --tw-prose-invert-bold: rgb(var(--color-text-default-rgb));
    --tw-prose-invert-counters: rgb(var(--color-text-muted-rgb));
    --tw-prose-invert-bullets: rgb(var(--color-accent-primary-rgb));
    --tw-prose-invert-hr: rgb(var(--color-border-default-rgb));
    --tw-prose-invert-quotes: rgb(var(--color-text-muted-rgb));
    --tw-prose-invert-quote-borders: rgb(var(--color-border-default-rgb));
    --tw-prose-invert-captions: rgb(var(--color-text-muted-rgb));
    --tw-prose-invert-code: rgb(var(--color-accent-secondary-rgb));
    --tw-prose-invert-pre-code: inherit;
    --tw-prose-invert-pre-bg: rgb(var(--color-code-background-rgb));
    --tw-prose-invert-th-borders: rgb(var(--color-border-default-rgb));
    --tw-prose-invert-td-borders: rgb(var(--color-border-subtle-rgb));
  }
}

@layer components {
  .transform-custom {
    will-change: transform;
    transform: translate(var(--translateX), var(--translateY))
      rotate(var(--rotate)) scale(var(--scaleX), var(--scaleY)) translateZ(0);
  }

  /* This pattern relies on a parent `.is-ready.is-active` state. */
  .is-ready.is-active .anim-in-shift-y-0 {
    --translateY: 0%;
  }

  .is-ready.is-active .anim-in-scale-x-1 {
    --scaleX: 1;
  }

  /* === Hamburger Button Styles === */
  .burger-wrapper {
    cursor: pointer;
    display: block;
    opacity: 1;
    width: 36px;
    height: 15px;
    position: relative;
    pointer-events: auto;
    will-change: transform;
    top: 50%;
    left: 0;
    transform: translateY(calc(-50% - 2.5px));
  }
  .line-wrapper {
    position: absolute;
    left: 0;
    width: 100%;
    height: var(--line-height);
    display: block;
    overflow: hidden;
    background-color: currentColor;
    transform-origin: 0% 50%;
    backface-visibility: hidden;
    -webkit-backface-visibility: hidden;
    transition: transform 0.3s var(--ease-out-standard);
  }

  .line-wrapper-1 {
    top: 50%;
    transform: translateY(-2.5px);
  }

  .line-wrapper-2 {
    top: 50%;
    transform: translateY(2.5px);
  }

  @keyframes burger_line1_start_animation {
    0% {
      transform: translateY(-2.5px) rotate(0deg);
    }
    100% {
      transform: translateY(0px) rotate(45deg);
    }
  }

  @keyframes burger_line1_end_animation {
    0% {
      transform: translateY(2.5px) rotate(0deg);
    }
    100% {
      transform: translateY(0px) rotate(-45deg);
    }
  }

  @keyframes letter_enter_animation {
    0% {
      opacity: 1;
    }
    100% {
      opacity: 1;
    }
  }

  @keyframes burger_close_line1_animation {
    0% {
      transform: translateY(-2.5px) rotate(0deg) scale(1, 1);
    }
    100% {
      transform: translateY(0px) rotate(45deg) scale(0.7, 1) translateZ(0px);
    }
  }

  @keyframes burger_close_line2_animation {
    0% {
      transform: translateY(2.5px) rotate(0deg) scale(1, 1);
    }
    100% {
      transform: translateY(0px) rotate(-45deg) scale(0.7, 1) translateZ(0px);
    }
  }
  /* =========== *
  End Hamburger Style
     =========== */

  .hamburger div {
    transition: all 0.3s ease;
  }

  .menu {
    transition: transform 0.3s ease;
  }

  /* The .scroll-object class for animations */
  .scroll-object {
    /* Base styles for scroll objects */
    /* Add any default transitions or opacity changes here if they always apply */
  }

  .scroll-object.is-active {
    /* Styles that apply when the scroll-object is in view */
    /* This will likely include animation-triggering properties or resets */
  }

  /* Specific transition utility classes */

  .tween-all-1-6s-easeOut2 {
    transition: all 1.6s var(--alias-easeOut2);
  }

  .tween-all-1s-easeOut {
    transition: all 1s var(--alias-easeOut);
  }

  .tween-0-3s-easeOut {
    transition: all 0.3s var(--alias-easeOut);
  }

  .tween-bg-color-0-3s-easeOut {
    transition: background-color 0.3s var(--alias-easeOut);
  }

  .tween-color-0-5s-easeOut {
    transition: color 0.5s var(--alias-easeOut);
  }

  .tween-opacity-1-3s-easeOut2 {
    transition: opacity 1.3s var(--alias-easeOut2);
  }

  .tween-opacity-1-6s-easeOut {
    transition: opacity 1.6s var(--alias-easeOut);
  }

  .tween-opacity-0-6s-easeOut3 {
    transition: opacity 0.6s var(--alias-easeOut3);
  }

  .tween-stroke-dashoffset-1-6s-4s-easeOut3 {
    transition: stroke-dashoffset 1.6s 4s var(--alias-easeOut3);
  }

  .tween-1-8s-easeOut {
    transition: all 1.8s var(--alias-easeOut);
  }

  .tween-transform-0-6s-easeOut {
    transition: transform 0.6s var(--alias-easeOut);
  }

  .tween-transform-0-6s-easeOut3 {
    transition: transform 0.6s var(--alias-easeOut3);
  }

  .tween-transform-1-3s-easeOut3 {
    transition: transform 1.3s var(--alias-easeOut3);
  }

  .tween-transform-1-8s-2-3s-easeOut2 {
    transition: transform 1.8s 2.3s var(--alias-easeOut2);
  }

  .tween-transform-2-3s-easeOutSlow {
    transition: transform 2.3s var(--alias-easeOutSlow);
  }

  /* Marquee (Used in Header) */
  @keyframes marquee {
    0% {
      transform: translateX(0);
    }
    to {
      transform: translateX(-100%);
    }
  }

  .marquee {
    animation: marquee 30s linear infinite;
    white-space: nowrap;
    font-family: var(--font-cinzel-deco), serif;
  }

  .project_list {
    @media screen and (min-width: 55em) {
      li.project {
        display: grid;
        grid-gap: 0 5%;
        grid-template-columns: 33% 62%;
        grid-template-areas: "head body";
        padding: var(--spacing-2xl) 0;
      }
    }
  }

  .project_header {
    grid-area: head;
    padding-top: var(--spacing-lg);
  }

  .project_header > h2 {
    font-size: var(--type-scale-step-3);
  }

  .project_body {
    grid-area: body;
    padding-top: var(--spacing-l);
  }

  .portfolio_intro {
    font-size: var(--type-scale-step-2);
    line-height: calc(var(--type-scale-step-2) * 1.125);
    max-width: 50ch;
  }

  .portfolio_intro > a {
    color: #333;
    text-decoration-thickness: 0.05em;
    text-underline-offset: 0.07em;
    transition: color 0.25s ease, text-decoration-color 0.25s ease;
  }

  .quote {
    margin: 0;
    background: var(--hdr-gradient);
    padding: 1em;
    border-radius: 1em;
  }
  .quote figcaption,
  .quote blockquote {
    margin: 1em;
  }

  .detail-page-background {
    background: radial-gradient(
        circle at 35% 50%,
        rgba(5, 88, 255, 0.15),
        transparent 50%
      ),
      radial-gradient(
        circle at 65% 50%,
        rgba(128, 0, 74, 0.15),
        transparent 50%
      ),
      radial-gradient(
        circle at 50% 65%,
        rgba(74, 128, 0, 0.15),
        transparent 50%
      );
    background-attachment: fixed;
  }

  .scroll-watcher {
    height: 10px;
    position: fixed;
    top: 0;
    z-index: 1000;
    background-color: var(--color-accent-primary);
    width: 100%;
    scale: 0 1;
    transform-origin: left;
    animation: scroll-watcher linear;
    animation-timeline: scroll(y);
  }

  @keyframes scroll-watcher {
    to {
      scale: 1 1;
    }
  }

  .scroll-controls {
    position: sticky;
    bottom: theme("spacing.8", "2rem");
    z-index: 50;
    display: flex;
    justify-content: flex-end;
    margin-right: calc(var(--scrollbar-width, 0px) + 1rem);
  }

  [data-scroll-section] {
    scroll-snap-type: y mandatory;
    scroll-behavior: smooth;
    overscroll-behavior: contain;
  }

  .lighting-effect {
    position: relative;
    overflow: hidden;
  }

  .lighting-effect::before,
  .lighting-effect::after {
    content: "";
    position: absolute;
    border-radius: 50%;
    filter: blur(80px);
    opacity: 0.7;
    z-index: -1;
  }

  .lighting-effect::before {
    background: radial-gradient(
      circle,
      var(--color-accent-primary) 0%,
      transparent 70%
    );
    top: -50px;
    left: -50px;
    width: 200px;
    height: 200px;
    animation: light-pulse 5s infinite alternate ease-in-out;
  }

  .lighting-effect::after {
    background: radial-gradient(
      circle,
      var(--color-accent-secondary) 0%,
      transparent 70%
    );
    bottom: -50px;
    right: -50px;
    width: 250px;
    height: 250px;
    animation: light-pulse 6s infinite alternate-reverse ease-in-out;
  }

  @keyframes light-pulse {
    0% {
      transform: translate(0, 0) scale(1);
      opacity: 0.7;
    }
    50% {
      transform: translate(10px, 10px) scale(1.1);
      opacity: 0.8;
    }
    100% {
      transform: translate(0, 0) scale(1);
      opacity: 0.7;
    }
  }
}

@layer utilities {
  .shift-y-neg-100 {
    --translateY: -100%;
  }
  .shift-y-0 {
    --translateY: 0%;
  }
  .shift-y-neg-100fy {
    --translateY: calc(-100 * var(--unit-fy));
  }
  .shift-y-neg-2-5px {
    --translateY: -2.5px;
  }
  .shift-y-2-5px {
    --translateY: 2.5px;
  }
  .shift-y-7vh {
    --translateY: 7vh;
  }
  .shift-y-0vh {
    --translateY: 0vh;
  }
  .shift-x-neg-50 {
    --translateX: -50%;
  }
  .shift-x-100 {
    --translateX: 100%;
  }
  .shift-x-neg-100 {
    --translateX: -100%;
  }
  .shift-x-0 {
    --translateX: 0;
  }
  .shift-x-neg-12 {
    --translateX: -12%;
  }

  .scale-x-0 {
    --scaleX: 0;
  }
  .scale-x-1 {
    --scaleX: 1;
  }
  .scale-x-0-15 {
    --scaleX: 0.15;
  }
  .scale-0 {
    --scaleX: 0;
    --scaleY: 0;
  }
  .scale-1 {
    --scaleX: 1;
    --scaleY: 1;
  }

  .rotate-45deg {
    --rotate: 45deg;
  }
  .rotate-neg-45deg {
    --rotate: -45deg;
  }
  .rotate-0deg {
    --rotate: 0deg;
  }
  .rotate-90deg {
    --rotate: 90deg;
  }
  .w-fit-fx {
    width: var(--alias-fit);
  }
  .w-20px {
    width: 20px;
  }
  .w-10px {
    width: 10px;
  }
  .w-36px {
    width: 36px;
  }
  .w-60px {
    width: 60px;
  }
  .w-87px {
    width: 87px;
  }
  .w-310fx {
    width: calc(310 * var(--unit-fx));
  }
  .w-620fx {
    width: calc(620 * var(--unit-fx));
  }
  .w-100fx {
    width: calc(100 * var(--unit-fx));
  }
  .w-790fx {
    width: calc(790 * var(--unit-fx));
  }
  .w-514fx {
    width: calc(514 * var(--unit-fx));
  }
  .w-779fx {
    width: calc(779 * var(--unit-fx));
  }
  .w-430fx {
    width: calc(430 * var(--unit-fx));
  }
  .w-511fx {
    width: calc(511 * var(--unit-fx));
  }
  .w-472fx {
    width: calc(472 * var(--unit-fx));
  }
  .w-300fx {
    width: calc(300 * var(--unit-fx));
  }
  .w-206fx {
    width: calc(206 * var(--unit-fx));
  }

  .h-fit-fy {
    height: var(--alias-fit);
  }
  .h-100vh {
    height: 100vh;
  }
  .h-14px {
    height: 14px;
  }
  .h-1px {
    height: 1px;
  }
  .h-15px {
    height: 15px;
  }
  .h-800fy {
    height: calc(800 * var(--unit-fy));
  }
  .h-900fy {
    height: calc(900 * var(--unit-fy));
  }
  .h-990fy {
    height: calc(990 * var(--unit-fy));
  }
  .h-100fx {
    height: calc(100 * var(--unit-fx));
  }
  .h-430fx {
    height: calc(430 * var(--unit-fx));
  }
  .h-200vh {
    height: 200vh;
  }
  .h-66px {
    height: 66px;
  }
  .min-h-100vh {
    min-height: 100vh;
  }
  .min-h-900fy {
    min-height: calc(900 * var(--unit-fy));
  }

  .z-10 {
    z-index: 10;
  }
  .z-1 {
    z-index: 1;
  }
  .z-0 {
    z-index: 0;
  }
  .z-9 {
    z-index: 9;
  }
  .z-100 {
    z-index: 100;
  }
  .z-1000000 {
    z-index: 1000000;
  }
  .z-neg-1 {
    z-index: -1;
  }
  .z-2 {
    z-index: 2;
  }
  .z-3 {
    z-index: 3;
  }

  .bg-transparent {
    background: var(--alias-trans);
  }
  .bg-current-color {
    background: var(--alias-current);
  }
  .bg-light {
    background: var(--alias-light);
  }
  .bg-dark {
    background: var(--alias-dark);
  }
  .bg-none {
    background: none;
  }
  .bg-black {
    background: black;
  }

  .c-dark {
    color: var(--alias-dark);
  }
  .c-light {
    color: var(--alias-light);
  }
  .c-current-color {
    color: var(--alias-current);
  }

  .b-t-solid-1px-white20 {
    border-top: solid 1px var(--alias-white20);
  }
  .b-b-solid-1px-black20 {
    border-bottom: solid 1px var(--alias-black20);
  }
  .b-b-solid-1px-black {
    border-bottom: solid 1px black;
  }
  .border-solid-1px-black40 {
    border: solid 1px var(--alias-black40);
  }
  .border-solid-1px-white20 {
    border: solid 1px var(--alias-white20);
  }

  .o-0-7 {
    opacity: 0.7;
  }
  .o-0-15 {
    opacity: 0.15;
  }
  .o-0-25 {
    opacity: 0.25;
  }
  .o-0-6 {
    opacity: 0.6;
  }

  .p-20px {
    padding: 20px;
  }
  .p-y-25px {
    padding-top: 25px;
    padding-bottom: 25px;
  }
  .p-x-30px {
    padding-right: 30px;
    padding-left: 30px;
  }
  .p-x-102fx {
    padding-right: calc(102 * var(--unit-fx));
    padding-left: calc(102 * var(--unit-fx));
  }
  .p-t-102fy {
    padding-top: calc(102 * var(--unit-fy));
  }
  .p-l-211fx {
    padding-left: calc(211 * var(--unit-fx));
  }
  .p-r-290fx {
    padding-right: calc(290 * var(--unit-fx));
  }
  .p-x-103fx {
    padding-right: calc(103 * var(--unit-fx));
    padding-left: calc(103 * var(--unit-fx));
  }
  .p-y-90fy {
    padding-top: calc(90 * var(--unit-fy));
    padding-bottom: calc(90 * var(--unit-fy));
  }
  .p-x-101fx {
    padding-right: calc(101 * var(--unit-fx));
    padding-left: calc(101 * var(--unit-fx));
  }
  .p-b-100fy {
    padding-bottom: calc(100 * var(--unit-fy));
  }
  .p-x-47fx {
    padding-right: calc(47 * var(--unit-fx));
    padding-left: calc(47 * var(--unit-fx));
  }
  .p-b-200fy {
    padding-bottom: calc(200 * var(--unit-fy));
  }
  .p-t-90fy {
    padding-top: calc(90 * var(--unit-fy));
  }
  .p-l-90fx {
    padding-left: calc(90 * var(--unit-fx));
  }
  .p-r-209fx {
    padding-right: calc(209 * var(--unit-fx));
  }
  .p-t-180fy {
    padding-top: calc(180 * var(--unit-fy));
  }
  .p-l-103fx {
    padding-left: calc(103 * var(--unit-fx));
  }
  .p-b-150fy {
    padding-bottom: calc(150 * var(--unit-fy));
  }
  .p-l-102fx {
    padding-left: calc(102 * var(--unit-fx));
  }
  .p-t-200fy {
    padding-top: calc(200 * var(--unit-fy));
  }
  .p-t-130fy {
    padding-top: calc(130 * var(--unit-fy));
  }
  .p-l-30fx {
    padding-left: calc(30 * var(--unit-fx));
  }
  .p-r-102fx {
    padding-right: calc(102 * var(--unit-fx));
  }
  .p-y-50fy {
    padding-top: calc(50 * var(--unit-fy));
    padding-bottom: calc(50 * var(--unit-fy));
  }
  .p-r-30fx {
    padding-right: calc(30 * var(--unit-fx));
  }
  .p-x-100fx {
    padding-right: calc(100 * var(--unit-fx));
    padding-left: calc(100 * var(--unit-fx));
  }

  .m-r-40fx {
    margin-right: calc(40 * var(--unit-fx));
  }
  .m-r-10fx {
    margin-right: calc(10 * var(--unit-fx));
  }
  .m-r-30fx {
    margin-right: calc(30 * var(--unit-fx));
  }
  .m-b-114fy {
    margin-bottom: calc(114 * var(--unit-fy));
  }
  .m-b-42fy {
    margin-bottom: calc(42 * var(--unit-fy));
  }
  .m-b-19fy {
    margin-bottom: calc(19 * var(--unit-fy));
  }
  .m-b-1fy {
    margin-bottom: calc(1 * var(--unit-fy));
  }
  .m-b-87fy {
    margin-bottom: calc(87 * var(--unit-fy));
  }
  .m-b-70fy {
    margin-bottom: calc(70 * var(--unit-fy));
  }
  .m-b-86fy {
    margin-bottom: calc(86 * var(--unit-fy));
  }
  .m-b-154fy {
    margin-bottom: calc(154 * var(--unit-fy));
  }
  .m-b-162fy {
    margin-bottom: calc(162 * var(--unit-fy));
  }
  .m-b-90fy {
    margin-bottom: calc(90 * var(--unit-fy));
  }
  .m-b-38fy {
    margin-bottom: calc(38 * var(--unit-fy));
  }
  .m-r-11fx {
    margin-right: calc(11 * var(--unit-fx));
  }

  .rtl {
    direction: rtl;
  }

  .just-center {
    justify-content: var(--alias-center);
  }
  .just-start {
    justify-content: var(--alias-start);
  }
  .just-end {
    justify-content: var(--alias-end);
  }
  .just-between {
    justify-content: var(--alias-between);
  }
  .items-center {
    align-items: center;
  }
  .items-start {
    align-items: var(--alias-start);
  }
  .items-stretch {
    align-items: stretch;
  }
  .items-end {
    align-items: var(--alias-end);
  }
  .dir-column {
    flex-direction: var(--alias-col);
  }
  .grow-0 {
    flex-grow: 0;
  }
  .shrink-0 {
    flex-shrink: 0;
  }
  .justify-between {
    justify-content: var(--alias-between);
  }
  .wrap-wrap {
    flex-wrap: wrap;
  }
  .dir-row-reverse {
    flex-direction: row-reverse;
  }

  .space-x-10px > *:not(:last-child) {
    margin-right: 10px;
  }
  .space-x-20fx > *:not(:last-child) {
    margin-right: calc(20 * var(--unit-fx));
  }
  .space-x-15px > *:not(:last-child) {
    margin-right: 15px;
  }
  .space-y-195fy > *:not(:last-child) {
    margin-bottom: calc(195 * var(--unit-fy));
  }

  .align-y-middle {
    vertical-align: middle;
  }

  .radius-100px {
    border-radius: 100px;
  }
  .radius-300px {
    border-radius: 300px;
  }
  .object-cover {
    object-fit: cover;
  }
  .object-contain {
    object-fit: contain;
  }
  .blend-difference {
    mix-blend-mode: difference;
  }
  .fill-currentColor {
    fill: currentColor;
  }
  .stroke-white20 {
    stroke: var(--alias-white20);
  }
  .anim-delay-1-3s {
    animation-delay: 1.3s !important;
  }
  .anim-delay-1-4s {
    animation-delay: 1.4s !important;
  }

  .before-p-t-92::before {
    padding-top: 92%;
  }
  .before-p-t-145::before {
    padding-top: 145%;
  }

  .d-none {
    display: none;
  }
}

@import "./utility-patterns.css";
@import "./animations.css";
@import "./mdx.css";

/* Specific global styles */
.bg-lighting::before {
  content: "";
  position: absolute;
  top: -20%;
  left: -20%;
  width: 140%;
  height: 140%;
  background: radial-gradient(
    circle at 50% 50%,
    rgba(255, 255, 255, 0.2) 0%,
    transparent 60%
  );
  pointer-events: none;
}
::view-transition-old(root) {
  animation: exit-fade 0.25s ease-out forwards;
}
::view-transition-new(root) {
  animation: enter-fade 0.25s ease-out 0.1s backwards;
}
@keyframes exit-fade {
  from {
    opacity: 1;
    transform: scale(1);
  }
  to {
    opacity: 0;
    transform: scale(0.98);
  }
}
@keyframes enter-fade {
  from {
    opacity: 0;
    transform: scale(1.02);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

.anim-in-fade-up {
  --translateY: 14px;
  opacity: 0;
}
.anim-in-fade-down {
  --translateY: -14px;
  opacity: 0;
}
.anim-in-fade-right {
  --translateX: -14px;
  opacity: 0;
}
.anim-in-fade-left {
  --translateX: 14px;
  opacity: 0;
}
.anim-in-fade-up-right {
  --translateX: -14px;
  --translateY: 14px;
  opacity: 0;
}
.anim-in-fade-up-left {
  --translateX: 14px;
  --translateY: 14px;
  opacity: 0;
}
.anim-in-fade-down-right {
  --translateX: -14px;
  --translateY: -14px;
  opacity: 0;
}
.anim-in-fade-down-left {
  --translateX: 14px;
  --translateY: -14px;
  opacity: 0;
}
.anim-in-zoom-in-up {
  --translateY: 14px;
  --scaleX: 0.6;
  --scaleY: 0.6;
  opacity: 0;
}
.anim-in-zoom-in-down {
  --translateY: -14px;
  --scaleX: 0.6;
  --scaleY: 0.6;
  opacity: 0;
}
.anim-in-zoom-in-right {
  --translateX: -14px;
  --scaleX: 0.6;
  --scaleY: 0.6;
  opacity: 0;
}
.anim-in-zoom-in-left {
  --translateX: 14px;
  --scaleX: 0.6;
  --scaleY: 0.6;
  opacity: 0;
}
.anim-in-zoom-out-up {
  --translateY: 14px;
  --scaleX: 1.2;
  --scaleY: 1.2;
  opacity: 0;
}
.anim-in-zoom-out-down {
  --translateY: -14px;
  --scaleX: 1.2;
  --scaleY: 1.2;
  opacity: 0;
}
.anim-in-zoom-out-right {
  --translateX: -14px;
  --scaleX: 1.2;
  --scaleY: 1.2;
  opacity: 0;
}
.anim-in-zoom-out-left {
  --translateX: 14px;
  --translateY: -14px;
  --scaleX: 1.2;
  --scaleY: 1.2;
  opacity: 0;
}

.anim-in {
  transition: transform 0.8s var(--alias-easeOut),
    opacity 0.8s var(--alias-easeOut);
  will-change: transform, opacity;
}

html.is-ready .scroll-object.is-active .anim-in-fade-up,
html.is-ready .scroll-object.is-active .anim-in-fade-down,
html.is-ready .scroll-object.is-active .anim-in-fade-right,
html.is-ready .scroll-object.is-active .anim-in-fade-left,
html.is-ready .scroll-object.is-active .anim-in-fade-up-right,
html.is-ready .scroll-object.is-active .anim-in-fade-up-left,
html.is-ready .scroll-object.is-active .anim-in-fade-down-right,
html.is-ready .scroll-object.is-active .anim-in-fade-down-left,
html.is-ready .scroll-object.is-active .anim-in-zoom-in-up,
html.is-ready .scroll-object.is-active .anim-in-zoom-in-down,
html.is-ready .scroll-object.is-active .anim-in-zoom-in-right,
html.is-ready .scroll-object.is-active .anim-in-zoom-in-left,
html.is-ready .scroll-object.is-active .anim-in-zoom-out-up,
html.is-ready .scroll-object.is-active .anim-in-zoom-out-down,
html.is-ready .scroll-object.is-active .anim-in-zoom-out-right,
html.is-ready .scroll-object.is-active .anim-in-zoom-out-left {
  --translateX: 0;
  --translateY: 0;
  --rotate: 0;
  --scaleX: 1;
  --scaleY: 1;
  opacity: 1;
}

.menu-button.is-active .burger-line-container:nth-child(1) {
  transform: translateY(2.5px) rotate(45deg); /* Or sets --translateY: 2.5px; --rotate: 45deg; if using transform-custom */
}

.menu-button.is-active .burger-line-container:nth-child(2) {
  transform: translateY(-2.5px) rotate(-45deg); /* Or sets --translateY: -2.5px; --rotate: -45deg; */
}

.menu-button.is-active
  .burger-line-container
  .burger-line-segment:nth-child(2) {
  opacity: 0;
}

.burger-wrapper.hovered:not(.active) .line-wrapper-1 {
  animation: burger_line1_start_animation 1.3s var(--alias-easeOut2) 0.1s
    forwards;
}

.burger-wrapper.hovered:not(.active) .line-wrapper-2 {
  animation: burger_line1_end_animation 1.3s var(--alias-easeOut2) 0s forwards;
}

.burger-wrapper.hovered:not(.active) .line-wrapper {
  animation: letter_enter_animation 0.4s var(--alias-easeOut) 0.5s forwards;
}

.burger-wrapper.active .line-wrapper-1 {
  animation: burger_close_line1_animation 1s var(--alias-easeOut) 0.5s forwards !important;
}

.burger-wrapper.active .line-wrapper-2 {
  animation: burger_close_line2_animation 1s var(--alias-easeOut) 0.5s forwards !important;
}

.burger-wrapper.active {
  animation: none !important;
}


================================================================================
FILE: mdx.css
================================================================================

/* app/styles/mdx.css (Simplified for v3 & Typography Plugin) */

/* Overrides or Additions to Typography Plugin --- */

/*  Link Styling Enhancements --- */
/* Base color/decoration comes from --tw-prose-links */
.mdx-prose a {
  text-underline-offset: 2px;
  transition: color 150ms ease-in-out, text-decoration-color 150ms ease-in-out;
  /* Optionally override decoration color alpha */
  text-decoration-color: rgba(var(--primary-rgb), 0.5);
}
.mdx-prose a:hover {
  /* Hover color comes from plugin/theme vars, just adjust decoration */
  text-decoration-color: rgba(var(--secondary-rgb), 0.7);
}

/* External Link Indicator */
.mdx-prose a[target="_blank"]::after {
  content: "↗";
  display: inline-block;
  margin-left: 0.25rem;
  font-size: 0.75em;
  opacity: 0.7;
  transition: opacity 0.2s ease-out;
}
.mdx-prose a[target="_blank"]:hover::after {
  opacity: 1;
}

/* List Styling --- */
/* Marker color comes from --tw-prose-bullets */
/* .mdx-prose ul li::marker { color: rgb(var(--primary-rgb)); } */

/*  Inline Code Styling --- */
/* Let plugin handle color via its defaults, just add bg/padding */
.mdx-prose :not(pre) > code {
  background-color: var(--gray-alpha-100);
  padding: 0.2em 0.4em;
  border-radius: 4px;
  font-size: var(--fontSize-sm);
  font-family: var(--font-geist-mono), monospace;
}

/* Rehype Pretty Code Styling --- */
.mdx-prose figure[data-rehype-pretty-code-figure] {
  margin-block: 1.5em;
}

.mdx-prose figure[data-rehype-pretty-code-figure] > pre {
  border: 1px solid rgb(var(--border-subtle-rgb)); /* Use border variable */
  border-radius: 6px;
  padding: var(--spacing-md);
  overflow-x: auto;
  font-size: 0.9em; /* Slightly smaller than base */
  line-height: 1.6;
  /* Background comes from --tw-prose-pre-bg */
}

.mdx-prose figure[data-rehype-pretty-code-figure] > pre > code {
  display: grid;
  font-family: var(--font-geist-mono), monospace; /* Ensure monospace font */
  background-color: transparent !important; /* Override theme bg */
  font-size: inherit;
  /* Text color comes from --tw-prose-pre-code (theme) or highlighting spans */
}

/* Code Highlights */
.mdx-prose .line--highlighted {
  background-color: rgba(var(--primary-rgb), 0.1); /* Use primary with alpha */
  box-shadow: inset 3px 0 0 0 rgb(var(--primary-rgb));
}
.mdx-prose .word--highlighted {
  background-color: rgba(
    var(--secondary-rgb),
    0.2
  ); /* Use secondary with alpha */
  padding: 0.1em 0.2em;
  border-radius: 3px;
}

/* Code Block Titles */
.mdx-prose [data-rehype-pretty-code-title] {
  font-size: 0.85em;
  font-family: var(--font-geist-mono), monospace;
  color: rgba(var(--foreground-rgb), 0.7);
  background-color: var(--gray-alpha-200); /* Slightly darker alpha gray */
  padding: var(--spacing-sm) var(--spacing-md);
  border: 1px solid rgb(var(--border-subtle-rgb));
  border-bottom: none;
  border-top-left-radius: 6px;
  border-top-right-radius: 6px;
  margin-bottom: 0;
}


================================================================================
FILE: theme.css
================================================================================

/* app/styles/theme.css */
@import url("https://fonts.googleapis.com/css2?family=Cal+Sans&display=swap");

/* ========== Core CSS Variable Definitions ========== */

:root {
  /* === Base OKLCH Color Definitions === */
  /* ... (Your existing OKLCH color definitions) ... */
  --oklch-moth-green: oklch(20.3% 0.037 138); /* #0e1b07 */
  --oklch-moth-brown: oklch(24.6% 0.062 48); /* #35170c */
  --oklch-moth-mousse: oklch(55.8% 0.053 51); /* #9e7967 */
  --oklch-moth-light: oklch(93.5% 0.016 53);
  --oklch-moth-orange: oklch(47.9% 0.106 44); /* #924622 */

  --oklch-accent-terra-cotta: oklch(65.1% 0.06 25); /* #bc8f8f */
  --oklch-accent-earth-green: oklch(74.1% 0.06 145); /* #8fbc8f */
  --oklch-accent-warm-tan: oklch(77.5% 0.054 77); /* #d2b48c */
  --oklch-accent-deep-ochre: oklch(51.2% 0.098 53); /* #a0522d */
  --oklch-accent-soft-grey: oklch(79.2% 0 0); /* #c0c0c0 */

  --oklch-white: oklch(100% 0 0);
  --oklch-black: oklch(0% 0 0);

  /* Monaspace OKLCH Variables */
  --oklch-neon-primary: oklch(85% 0.3 145); /* Vibrant Green */
  --oklch-argon-primary: oklch(85% 0.3 190); /* Cyan */
  --oklch-xenon-primary: oklch(75% 0.3 330); /* Magenta */
  --oklch-radon-primary: oklch(70% 0.3 25); /* Red */
  --oklch-krypton-primary: oklch(95% 0.3 100); /* Yellow */
  --oklch-neon-dark: var(--oklch-neon-primary);
  --oklch-argon-dark: var(--oklch-argon-primary);
  --oklch-xenon-dark: var(--oklch-xenon-primary);
  --oklch-radon-dark: var(--oklch-radon-primary);
  --oklch-krypton-dark: var(--oklch-krypton-primary);

  /* === Semantic Color Mapping (LIGHT THEME) === */
  --color-surface-page: var(--oklch-moth-green); /* Light background */
  --color-surface-card: var(
    --oklch-moth-light
  ); /* Assuming moth-light for light card background */
  --color-surface-secondary: var(
    --oklch-moth-light
  ); /* Assuming moth-light for light surface secondary */
  --color-text-default: var(
    --oklch-white
  ); /* Dark text (on green background, white is better) */
  --color-text-muted: var(--oklch-moth-mousse); /* Muted text */
  --color-text-inverted: var(--oklch-white); /* Text on dark backgrounds */
  --color-accent-primary: var(--oklch-moth-orange); /* Keep accent */
  --color-accent-secondary: var(--oklch-accent-deep-ochre); /* Keep accent */
  --color-border-default: var(--oklch-accent-soft-grey); /* Lighter borders */
  --color-border-subtle: var(
    --oklch-moth-light
  ); /* Assuming moth-light for subtle borders */
  --color-interactive-primary: var(--oklch-accent-deep-ochre);
  --color-interactive-secondary: var(--oklch-moth-orange);
  --color-interactive-muted: var(--oklch-moth-mousse);
  --color-interactive-text: var(--oklch-white); /* Text on buttons */
  --color-code-background: var(
    --oklch-moth-light
  ); /* Assuming moth-light for code background */

  /* Map Monaspace vars */
  --color-neon-primary: var(--oklch-neon-primary);
  --color-argon-primary: var(--oklch-argon-primary);
  --color-xenon-primary: var(--oklch-xenon-primary);
  --color-radon-primary: var(--oklch-radon-primary);
  --color-krypton-primary: var(--oklch-krypton-primary);
  /* Define -dark vars for light theme (can be same as primary) */
  --color-neon-dark: var(--oklch-neon-primary);
  --color-argon-dark: var(--oklch-argon-primary);
  --color-xenon-dark: var(--oklch-xenon-primary);
  --color-radon-dark: var(--oklch-radon-primary);
  --color-krypton-dark: var(--oklch-krypton-primary);
  --initial-bg-color: var(--oklch-white); /* Start with white */
  /* === Gradient (LIGHT THEME) === */
  --hdr-gradient: radial-gradient(
    farthest-corner circle at 50% 50% in oklab,
    oklch(44% 0.04 139) 0%,
    oklch(20% 0.04 135) 100%
  );

  --nerdy-gradient: radial-gradient(
      circle at 35% 50%,
      rgba(255, 165, 0, 0.15),
      transparent 50%
    ),
    /* COLOR_2 (consider using low opacity) */
      radial-gradient(
        circle at 65% 50%,
        rgba(0, 128, 128, 0.15),
        transparent 50%
      ),
    /* COLOR_3 (consider using low opacity) */
      radial-gradient(
        circle at 50% 65%,
        rgba(221, 160, 221, 0.15),
        transparent 50%
      ),
    var(--color-surface-page);

  /* === Shadows (LIGHT THEME) === */
  /* Adjust RGB values for lighter shadows */
  --shadow-highlight-rgb: 255, 255, 255; /* White */
  --shadow-base-rgb: 200, 200, 200; /* Light Grey */
  --shadow-outer-rgb: 150, 150, 150; /* Medium Grey */

  /* === Typography === */
  --font-cinzel: "Cinzel", serif;
  --font-cinzel-deco: "Cinzel Decorative", serif;
  --font-sans: "Geist Mono", monospace; /* temp */

  /* === Typography Scale === */
  --type-scale-step--2: clamp(0.5rem, 0.8665rem + -0.4886vw, 0.7688rem);
  --type-scale-step--1: clamp(0.7075rem, 0.8609rem + -0.2045vw, 0.82rem);
  --type-scale-step-0: clamp(0.875rem, 0.8295rem + 0.2273vw, 1rem);
  --type-scale-step-1: clamp(0.9338rem, 0.7592rem + 0.8727vw, 1.4138rem);
  --type-scale-step-2: clamp(0.9963rem, 0.6315rem + 1.8239vw, 1.9994rem);
  --type-scale-step-3: clamp(1.0631rem, 0.4218rem + 3.2068vw, 2.8269rem);
  --type-scale-step-4: clamp(1.1344rem, 0.0932rem + 5.2057vw, 3.9975rem);
  --type-scale-step-5: clamp(1.21rem, -0.4055rem + 8.0773vw, 4.7125rem);

  /* Utopian spacing scales */
  --spacing-xs: clamp(0.69rem, calc(0.65rem + 0.2vw), 0.88rem);
  --spacing-s: clamp(0.88rem, calc(0.82rem + 0.27vw), 1.13rem);
  --spacing-m: clamp(1.31rem, calc(1.23rem + 0.41vw), 1.69rem);
  --spacing-l: clamp(1.75rem, calc(1.64rem + 0.54vw), 2.25rem);
  --spacing-xl: clamp(2.63rem, calc(2.46rem + 0.81vw), 3.38rem);
  --spacing-2xl: clamp(3.5rem, calc(3.28rem + 1.08vw), 4.5rem);

  /* Explicitly define --spacing-sm and --spacing-md to match utility-patterns.css */

  --spacing-sm: var(--spacing-s);
  --spacing-md: var(--spacing-m);

  --spacing-range-xs-s: clamp(0.69rem, calc(0.59rem + 0.47vw), 1.13rem);
  --spacing-range-s-m: clamp(0.88rem, calc(0.7rem + 0.88vw), 1.69rem);
  --spacing-range-m-l: clamp(1.31rem, calc(1.11rem + 1.01vw), 2.25rem);
  --spacing-range-l-xl: clamp(1.75rem, calc(1.4rem + 1.76vw), 3.38rem);
  --spacing-range-xl-2xl: clamp(2.63rem, calc(2.22rem + 2.03vw), 4.5rem);

  /* === Default Variable Font Settings === */
  --pf-opsz: 1;
  --pf-slnt: 0;
  --pf-wght: 300;

  /* Core Spacing & Typography Tokens */
  --spacing-base: 1rem;

  /* Layout Tokens */
  --nav-height: 5rem;
  --max-width: 70rem;
  --slide-height: 100vh;

  /* Global Transform Variables (for .transform-custom class) */
  --translateX: 0;
  --translateY: 0;
  --rotate: 0;
  --scaleX: 1;
  --scaleY: 1;

  --minSize: 320;
  --maxSize: 1440;
  --media-d: 1440px; /* desktop */
  --media-l: 1439px; /* large laptop/tablet landscape */
  --media-t: 1024px; /* tablet portrait */
  --media-tp: 1024px; /* tablet portrait (duplicate, keep one or alias) */
  --media-m: 767px; /* mobile landscape/small tablet */
  --media-mp: 600px; /* mobile portrait */
  --media-nom: 768px; /* "no mobile" breakpoint */

  --alias-grey10: rgba(196, 196, 196, 0.1);
  --alias-white20: rgba(255, 255, 255, 0.2);
  --alias-white25: rgba(255, 255, 255, 0.25);
  --alias-white85: rgba(255, 255, 255, 0.85);
  --alias-black10: rgba(0, 0, 0, 0.1);
  --alias-black20: rgba(0, 0, 0, 0.2);
  --alias-black30: rgba(0, 0, 0, 0.3);
  --alias-black40: rgba(0, 0, 0, 0.4);
  --alias-black50: rgba(0, 0, 0, 0.5);

  --alias-theme: #000; /* From original HTML root */
  --alias-dark: #000; /* From original HTML root */
  --alias-light: #fff; /* From original HTML root */

  /* Easing Aliases (Referenced by Tailwind.config.ts) */
  --alias-easeOut: cubic-bezier(0.43, 0.195, 0.02, 1);
  --alias-easeOut2: cubic-bezier(0.77, 0, 0.175, 1);
  --alias-easeOut3: cubic-bezier(0.165, 0.84, 0.44, 1);
  --alias-easeOutSlow: cubic-bezier(
    0.43,
    0.195,
    0.02,
    1
  ); /* Duplicate of easeOut, ensure intent */

  /* Dynamic values and should be set by JS on the HTML element */
  --vw: 1px; /* Default, will be overridden by JS */
  --vh: 1px; /* Default, will be overridden by JS */

  --unit-vw: calc(var(--vw) / 100);
  --unit-vhfix: calc(var(--vh) / 100);
  --unit-vr: calc(15 / 1440 * var(--vw));
  --unit-fx: calc(var(--vw) / 1440);
  --unit-fy: calc(var(--vh) / 900);
  --unit-c: calc(var(--vw) / 14);

  --baseColor: var(--alias-dark);
  --baseBackground: var(--alias-light);

  --alias-between: space-between;
  --alias-around: space-around;
  --alias-evenly: space-evenly;
  --alias-start: flex-start;
  --alias-end: flex-end;
  --alias-fit: 100%;
  --alias-current: currentColor;
  --alias-abs: absolute;
  --alias-col: column;
  --alias-trans: transparent;
  /* Line Heights */
  --lineHeight-tight: 1.1; /* Example value, adjust as needed */
  --lineHeight-normal: 1.5;

  /* Font Sizes (Mapping to Utopian scale) */
  --fontSize-h1: var(--type-scale-step-5);
  --fontSize-h2: var(--type-scale-step-4);
  --fontSize-h3: var(--type-scale-step-3);
  --fontSize-h4: var(--type-scale-step-2);
  --fontSize-sm: var(--type-scale-step-0);
  --fontSize-xs: var(--type-scale-step--1);

  /* Bounce easing for animations */
  --bounce: cubic-bezier(0.175, 0.885, 0.32, 1.275); /* TODO: adjust */
}

/* Dark Theme Overrides */
.dark {
  --color-surface-page: var(--oklch-black);
  --color-surface-card: var(--oklch-moth-green);
  --color-surface-secondary: var(--oklch-moth-green);
  --color-text-default: var(--oklch-white);
  --color-text-muted: var(--oklch-moth-mousse);
  --color-text-inverted: var(--oklch-black);
  --color-accent-primary: var(--oklch-moth-orange);
  --color-accent-secondary: var(--oklch-accent-deep-ochre);
  --color-border-default: var(--oklch-accent-soft-grey);
  --color-border-subtle: var(--oklch-moth-green);
  --color-interactive-primary: var(--oklch-accent-deep-ochre);
  --color-interactive-secondary: var(--oklch-moth-orange);
  --color-interactive-muted: var(--oklch-moth-mousse);
  --color-interactive-text: var(--oklch-white);
  --color-code-background: var(--oklch-moth-green);

  /* Dark Theme Monaspace vars */
  --color-neon-primary: var(--oklch-neon-dark);
  --color-argon-primary: var(--oklch-argon-dark);
  --color-xenon-primary: var(--oklch-xenon-dark);
  --color-radon-primary: var(--oklch-radon-dark);
  --color-krypton-primary: var(--oklch-krypton-dark);
  /* Ensure -dark vars are distinct if needed for dark theme */
  --color-neon-dark: var(--oklch-neon-dark);
  --color-argon-dark: var(--oklch-argon-dark);
  --color-xenon-dark: var(--oklch-xenon-dark);
  --color-radon-dark: var(--oklch-radon-dark);
  --color-krypton-dark: var(--oklch-krypton-dark);

  /* Dark theme gradient */
  --hdr-gradient: radial-gradient(
    farthest-corner circle at 50% 50% in oklab,
    oklch(20% 0.04 135) 0%,
    oklch(5% 0.02 130) 100%
  );

  --nerdy-gradient: radial-gradient(
      circle at 35% 50%,
      rgba(255, 165, 0, 0.05),
      transparent 50%
    ),
    /* COLOR_2 */
      radial-gradient(
        circle at 65% 50%,
        rgba(0, 128, 128, 0.05),
        transparent 50%
      ),
    /* COLOR_3 */
      radial-gradient(
        circle at 50% 65%,
        rgba(221, 160, 221, 0.05),
        transparent 50%
      ),
    var(--color-surface-page);

  /* Dark theme shadows */
  --shadow-highlight-rgb: 70, 70, 70;
  --shadow-base-rgb: 30, 30, 30;
  --shadow-outer-rgb: 0, 0, 0;
}

/* === Component Styles (Keep minimal) === */

.scroll-watcher {
  height: 10px;
  position: fixed;
  top: 0;
  z-index: 1000;
  background-color: var(--color-accent);
  width: 100%;
  scale: 0 1;
  transform-origin: left;
  animation: scroll-watcher linear;
  animation-timeline: scroll(y);
}

@keyframes scroll-watcher {
  to {
    scale: 1 1;
  }
}

/* Scroll controls */
.scroll-controls {
  position: sticky;
  bottom: theme("spacing.8", "2rem");
  z-index: 50;
  display: flex;
  justify-content: flex-end;
  margin-right: calc(var(--scrollbar-width, 0px) + 1rem);
}

/* Scroll Utilities */
[data-scroll-section] {
  scroll-snap-type: y mandatory;
  scroll-behavior: smooth;
  overscroll-behavior: contain;
}


================================================================================
FILE: utility-patterns.css
================================================================================

/* app/styles/utility-patterns.css */

.glowtext {
  position: relative;
  /* Ensure the base text has the correct color and font family */
  /* These are applied via Tailwind classes in the component */
}

.glowtext::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0.6; /* Original was 60% */
  filter: blur(6px);
  pointer-events: none; /* Ensure the pseudo-element doesn't interfere with interactions */
  /* Hardware acceleration hints */
  backface-visibility: hidden;
  -webkit-backface-visibility: hidden;
  -moz-backface-visibility: hidden;
  transform: translateZ(0);
  -webkit-transform: translateZ(0);
  -moz-transform: translateZ(0);
  /* The color of the glow comes from the inherited text color */
}

/* Apply hardware acceleration to the main element as well */
.accelerate {
  backface-visibility: hidden;
  -webkit-backface-visibility: hidden;
  -moz-backface-visibility: hidden;
  transform: translateZ(0);
  -webkit-transform: translateZ(0);
  -moz-transform: translateZ(0);
  /* will-change property is often applied via inline style or utility class */
}

/* Keyframes are defined in tailwind.config.js */
/* Animation classes are applied via Tailwind utilities (e.g., animate-ghostpulse) */

/* Styles for the ghost animated elements */
/* These might be applied directly to the element or a wrapper */
.ghost {
  filter: saturate(0);
  opacity: 0.4;
}

.ghost2 {
  /* animation-name, duration, etc. are applied via Tailwind animate-{name} utilities */
  filter: saturate(30%);
  /* font-family, font-variation-settings are applied via Tailwind classes */
}

.ghost3 {
  /* animation-name, duration, etc. are applied via Tailwind animate-{name} utilities */
  filter: saturate(30%);
  /* font-family, font-variation-settings are applied via Tailwind classes */
}

.ghost4 {
  /* animation-name, duration, etc. are applied via Tailwind animate-{name} utilities */
  filter: saturate(30%);
  /* font-weight, font-family, font-variation-settings are applied via Tailwind classes */
}

/* === Typography (Using CSS Variables from theme.css) === */
.heading-1 {
  font-size: var(--fontSize-h1);
  font-weight: 800; /* extrabold */
  line-height: var(--lineHeight-tight);
}
.heading-2 {
  font-size: var(--fontSize-h2);
  font-weight: 800; /* extrabold */
  line-height: var(--lineHeight-tight);
}
.heading-3 {
  font-size: var(--fontSize-h3);
  font-weight: 700; /* bold */
  line-height: var(--lineHeight-tight);
}
.heading-4 {
  font-size: var(--fontSize-h4);
  font-weight: 700; /* bold */
  line-height: var(--lineHeight-tight);
}

.header-title {
  font-weight: 400;
  color: #d5a54e;
  font-family: Cochin LT W01 Roman, sans-serif;
  left: 0;
  margin: 0;
  position: absolute;
  text-align: center;
  text-transform: uppercase;
  top: 30vh;
  width: 100%;
  opacity: 0;
}

/* === Button Components (Using CSS Variables from theme.css) === */
/* These act as base styles that can be extended with Tailwind classes */
.btn {
  @apply inline-flex items-center justify-center rounded-full px-[var(--spacing-md)] py-[0.375rem] text-[length:var(--fontSize-sm)] leading-[var(--lineHeight-normal)] font-medium transition-all duration-150 whitespace-nowrap border border-transparent;
}

.btn-sm {
  @apply inline-flex items-center justify-center rounded-full px-[var(--spacing-sm)] py-[var(--spacing-xs)] text-[length:var(--fontSize-xs)] leading-[var(--lineHeight-normal)] font-medium transition-all duration-150 whitespace-nowrap border border-transparent;
  /* Use --fontSize-xs defined in theme.css */
}

/* === Form Components === */
/* NOTE: @tailwindcss/forms plugin provides base styles.
   These custom classes might override or supplement them.
*/
.form-input,
.form-textarea,
.form-multiselect,
.form-select {
  /* Forms plugin needs to be active */
  @apply block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm dark:bg-slate-800 dark:border-slate-600 dark:text-slate-200 dark:placeholder-slate-500 dark:focus:border-indigo-400 dark:focus:ring-indigo-400;
  /* Adjust colors (e.g., border-gray-300, focus:border-indigo-500) to match theme */
  font-size: var(--fontSize-sm); /* Override font size if needed */
}

.form-select {
  @apply pr-10; /* Keep padding for arrow */
}

.form-checkbox,
.form-radio {
  @apply rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 dark:border-slate-600 dark:bg-slate-800 dark:checked:bg-indigo-500 dark:focus:ring-indigo-400;
}

/* === Scrollbar Utilities === */
.scrollbar-thin {
  scrollbar-width: thin;
}
.scrollbar-thin::-webkit-scrollbar {
  width: 6px;
  height: 6px;
}
.no-scrollbar {
  scrollbar-width: none;
  -ms-overflow-style: none;
}
.no-scrollbar::-webkit-scrollbar {
  display: none;
}
.no-search-decoration::-webkit-search-decoration,
.no-search-decoration::-webkit-search-cancel-button,
.no-search-decoration::-webkit-search-results-button,
.no-search-decoration::-webkit-search-results-decoration {
  -webkit-appearance: none;
}

