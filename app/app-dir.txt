Directory Tree:
.
├── (auth)
│   ├── layout.tsx
│   ├── signin
│   │   └── page.tsx
│   └── signup
│       └── page.tsx
├── (default)
│   ├── layout.tsx
│   └── page.tsx
├── actions
│   └── auth.ts
├── layout.tsx
└── styles
    ├── animations.css
    ├── globals.css
    ├── mdx.css
    ├── styes-dir.txt
    ├── theme.css
    └── utility-patterns.css


================================================================================
FILE: (auth)/layout.tsx
================================================================================

// (auth)/layout.tsx
import Link from "next/link";
import type { Route } from "next";

const NAV_ITEMS = ["Tag", "View", "Behavior"] as const;

export function AuthLayout({ children }: { children: React.ReactNode }) {
  return (
    <main className="grow bg-[#0e1b07] bg-[radial-gradient(circle,_#173C2B_4%,_#44705F_62%,_#173E2C_88%)] text-gray-200">
      {/* Nebula Background Container (Fixed Fullscreen) */}
      {/* Content Area */}
      <section>
        <div className="relative z-10 max-w-6xl mx-auto px-4 sm:px-6">
          <div
            className="absolute inset-0 -z-10 overflow-hidden pointer-events-none -ml-28 -mr-28"
            aria-hidden="true"
          ></div>
          <div className="pt-32 pb-12 md:pt-40 md:pb-20">{children}</div>
        </div>
      </section>
    </main>
  );
}

export default function WelcomeLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <div className="min-h-screen bg-gradient-to-br from-custom-peach via-[#fcf4f1] to-custom-peach">
      <header className="flex items-center justify-between px-4 py-4 md:px-8 md:py-6">
        <h1 className="text-2xl font-medium text-gray-700">Welcome Home</h1>

        <nav className="flex space-x-4 md:space-x-6">
          {NAV_ITEMS.map((item) => (
            <Link
              key={item}
              href={`/${item.toLowerCase()}` as Route}
              role="navigation"
              aria-label={`Navigate to ${item}`}
              className="text-gray-600 hover:text-gray-900 transition-colors duration-200 text-lg focus:outline-none focus:ring-2 focus:ring-primary-500"
            >
              {item}
            </Link>
          ))}
        </nav>
      </header>

      <main>{children}</main>
    </div>
  );
}


================================================================================
FILE: (auth)/signin/page.tsx
================================================================================


import Link from 'next/link';
import Image from "next/image"
import AuthLogo from '@/public/logo.svg';
import { cn } from '@/lib/utils';

export const metadata = {
  title: 'Sign In - Samir.Codes', // Updated title
  description: 'Sign in to your account',
};

export default function SignIn() {
  return (
    <>
      {/* Page header (Keep as is for now) */}
      <div className="max-w-3xl mx-auto text-center pb-12">
      <Image
        className="max-w-none"
        src={AuthLogo}
        width={38}
        height={38}
        priority
        alt="logo"
      />
        <h1 className="h2 bg-clip-text text-transparent bg-gradient-to-r from-slate-200/60 via-slate-200 to-slate-200/60">
          Sign in to your account
        </h1>
      </div>

      {/* --- Form Container: Apply Claymorphism --- */}
      <div
        className={
          // Base layout & sizing
          "max-w-1/2 mx-auto " +
          // Claymorphism styles
          "bg-slate-800/80 " + // Slightly transparent base to interact with nebula? Or solid bg-slate-800
          "rounded-3xl " +     // Generous rounding
          "p-6 sm:p-8 " +      // Padding inside the container
          "shadow-clay-dark-soft " + // Apply the custom shadow
          "backdrop-blur-sm"     // Optional: Add blur if using transparent bg
        }
      >
        {/* Form content goes here - Keep existing form for now */}
        <form>
          <div className="space-y-4">
            <div>
              <label className="block text-sm text-slate-300 font-medium mb-1" htmlFor="email">Email</label>
              {/* Input styling will be addressed next */}
              <input id="email" className="form-input w-full" type="email" required />
            </div>
            <div>
              <div className="flex justify-between">
                <label className="block text-sm text-slate-300 font-medium mb-1" htmlFor="password">Password</label>
                <Link className="text-sm font-medium text-primary hover:text-purple-400 transition duration-150 ease-in-out ml-2" href="/reset-password">Forgot?</Link>
              </div>
              {/* Input styling will be addressed next */}
              <input id="password" className="form-input w-full" type="password" autoComplete="on" required />
            </div>
          </div>
          <div className="mt-6">
            {/* Button styling will be addressed next */}
            <button className="btn text-sm text-white bg-primary hover:bg-purple-700 w-full shadow-sm group">
              Sign In <span className="tracking-normal text-purple-300 group-hover:translate-x-0.5 transition-transform duration-150 ease-in-out ml-1">-></span>
            </button>
          </div>
        </form>

        {/* Footer links inside the container */}
        <div className="text-center mt-6"> {/* Increased margin slightly */}
          <div className="text-sm text-slate-400">
            Don't have an account? <Link className="font-medium text-primary hover:text-purple-400 transition duration-150 ease-in-out" href="/signup">Sign up</Link>
          </div>
        </div>

        {/* Divider (Keep as is for now) */}
        <div className="flex items-center my-6">
          <div className="border-t border-slate-700 grow mr-3" aria-hidden="true" /> {/* Adjusted color slightly */}
          <div className="text-sm text-slate-500 italic">or</div>
          <div className="border-t border-slate-700 grow ml-3" aria-hidden="true" /> {/* Adjusted color slightly */}
        </div>

   {/* Social login */}
   <div className="flex space-x-3">
          {/* Twitter Button */}
          <button
            className={cn( "btn-sm",  "w-full h-9",               "relative group","border",
              // Use CSS Variables for colors in the gradient border
              "border-transparent", // Make base border transparent
              "bg-slate-900", // Set the background color directly
              "bg-clip-padding", // Clip background to padding box (padding-box keyword)
              // Apply the conic gradient border using background-image on the border itself
              // This requires careful layering or pseudo-elements usually.
              // A simpler approach is a pseudo-element overlay:
              "before:absolute before:inset-[-1px] before:-z-10", // Position pseudo-element slightly outside, behind
              "before:rounded-full", // Match button rounding
              "before:bg-[conic-gradient(var(--color-slate-400),var(--color-slate-700)_25%,var(--color-slate-700)_75%,var(--color-slate-400)_100%)]", // Conic gradient on pseudo-element
              // Original hover/text styles
              "text-slate-300 hover:text-white transition duration-150 ease-in-out"
              // Removed the complex arbitrary [background:...]
              // Removed the second before pseudo-element for the overlay as bg-slate-900 handles it
            )}
          >
            <span className="relative z-10"> {/* Ensure icon is above background */}
              <span className="sr-only">Continue with Twitter</span>
              {/* Twitter SVG */}
              <svg className="fill-current" xmlns="http://www.w3.org/2000/svg" width="14" height="12">
                 <path d="m4.34 0 2.995 3.836L10.801 0h2.103L8.311 5.084 13.714 12H9.482L6.169 7.806 2.375 12H.271l4.915-5.436L0 0h4.34Zm-.635 1.155H2.457l7.607 9.627h1.165L3.705 1.155Z" />
              </svg>
            </span>
          </button>

          {/* GitHub Button - Apply the same refactored classes */}
          <button
             className={cn(
              "btn-sm",
              "w-full h-9",
              "relative group",
              "border border-transparent",
              "bg-slate-900 bg-clip-padding",
              "before:absolute before:inset-[-1px] before:-z-10",
              "before:rounded-full",
              "before:bg-[conic-gradient(var(--color-slate-400),var(--color-slate-700)_25%,var(--color-slate-700)_75%,var(--color-slate-400)_100%)]",
              "text-slate-300 hover:text-white transition duration-150 ease-in-out"
            )}
          >
            <span className="relative z-10">
              <span className="sr-only">Continue with GitHub</span>
              {/* GitHub SVG */}
              <svg className="fill-current" xmlns="http://www.w3.org/2000/svg" width="16" height="15">
                 <path d="M7.488 0C3.37 0 0 3.37 0 7.488c0 3.276 2.153 6.084 5.148 7.113.374.094.468-.187.468-.374v-1.31c-2.06.467-2.527-.936-2.527-.936-.375-.843-.843-1.124-.843-1.124-.655-.468.094-.468.094-.468.749.094 1.123.75 1.123.75.655 1.216 1.778.842 2.153.654.093-.468.28-.842.468-1.03-1.685-.186-3.37-.842-3.37-3.743 0-.843.281-1.498.75-1.966-.094-.187-.375-.936.093-1.965 0 0 .655-.187 2.059.749a6.035 6.035 0 0 1 1.872-.281c.655 0 1.31.093 1.872.28 1.404-.935 2.059-.748 2.059-.748.374 1.03.187 1.778.094 1.965.468.562.748 1.217.748 1.966 0 2.901-1.778 3.463-3.463 3.65.281.375.562.843.562 1.498v2.059c0 .187.093.468.561.374 2.996-1.03 5.148-3.837 5.148-7.113C14.976 3.37 11.606 0 7.488 0Z" />
               </svg>
            </span>
          </button>
        </div>
      </div>
      {/* --- End Form Container --- */}
    </>
  );
}


================================================================================
FILE: (auth)/signup/page.tsx
================================================================================

const Signup = () => {
    return 'signup'
  }

  export default Signup


================================================================================
FILE: (default)/layout.tsx
================================================================================

// app/(default)/layout.tsx
import "aos/dist/aos.css";
import Header from "@/components/ui/header";
import Footer from "@/components/ui/footer";
import Animate from "@/components/animate";

export default function DefaultLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <>
      <Animate />
      <Header />

      <main className="grow" style={{ opacity: 1 }}>
        <div className="pt-[65px] lg:pt-[70px]">{children}</div>
      </main>
      <Footer />
    </>
  );
}


================================================================================
FILE: (default)/page.tsx
================================================================================

// app/page.tsx

import ProjectStack from "@/components/project-stack";
import HeroSection from "@/components/HeroSection";
import ProfessionalSummary from "@/components/professional-summary";
import TechStack from "@/components/tech-stack";
import FanningList from "@/components/fanning-list";
import TypefaceShowcase from "@/components/typeface-section";

// Import Data
import {
  myProjects,
  jobExperiences,
  languages,
  frameworksAndLibraries,
  databasesAndCaching,
  cloudAndDevOps,
  developerTools,
} from "@/lib/data/port-data";

import type { SkillCategory } from "@/types";

export default function Home() {
  // This grouping logic is fine here as it relates to page composition
  const skillCategories: SkillCategory[] = [
    { title: "Languages", skills: languages },
    { title: "Frameworks & Libraries", skills: frameworksAndLibraries },
    { title: "Databases & Caching", skills: databasesAndCaching },
    { title: "Cloud & DevOps", skills: cloudAndDevOps },
    { title: "Developer Tools", skills: developerTools },
  ];

  return (
    <article>
      <HeroSection />
      <TypefaceShowcase />

      <ProjectStack projects={myProjects} />

      <FanningList experiences={jobExperiences} />

      {/* === Professional Summary Section === */}
      <ProfessionalSummary experiences={jobExperiences} />
      <TechStack skillCategories={skillCategories} />
    </article>
  );
}


================================================================================
FILE: actions/auth.ts
================================================================================

'use server'

import { z } from 'zod'
import {
  verifyPassword,
  createSession,
  createUser,
  deleteSession,
} from '@/lib/session'
import { getUserByEmail } from '@/lib/dal'
import { mockDelay } from '@/lib/utils'
import { redirect } from 'next/navigation'

// Define Zod schema for signin validation
const SignInSchema = z.object({
  email: z.string().min(1, 'Email is required').email('Invalid email format'),
  password: z.string().min(1, 'Password is required'),
})

// Define Zod schema for signup validation
const SignUpSchema = z
  .object({
    email: z.string().min(1, 'Email is required').email('Invalid email format'),
    password: z.string().min(6, 'Password must be at least 6 characters'),
    confirmPassword: z.string().min(1, 'Please confirm your password'),
  })
  .refine((data) => data.password === data.confirmPassword, {
    message: "Passwords don't match",
    path: ['confirmPassword'],
  })

export type SignInData = z.infer<typeof SignInSchema>
export type SignUpData = z.infer<typeof SignUpSchema>

export type ActionResponse = {
  success: boolean
  message: string
  errors?: Record<string, string[]>
  error?: string
}

export async function signIn(formData: FormData): Promise<ActionResponse> {
  try {
    // Add a small delay to simulate network latency
    await mockDelay(700)

    // Extract data from form
    const data = {
      email: formData.get('email') as string,
      password: formData.get('password') as string,
    }

    // Validate with Zod
    const validationResult = SignInSchema.safeParse(data)
    if (!validationResult.success) {
      return {
        success: false,
        message: 'Validation failed',
        errors: validationResult.error.flatten().fieldErrors,
      }
    }

    // Find user by email
    const user = await getUserByEmail(data.email)
    if (!user) {
      return {
        success: false,
        message: 'Invalid email or password',
        errors: {
          email: ['Invalid email or password'],
        },
      }
    }

    // Verify password
    const isPasswordValid = await verifyPassword(data.password, user.password)
    if (!isPasswordValid) {
      return {
        success: false,
        message: 'Invalid email or password',
        errors: {
          password: ['Invalid email or password'],
        },
      }
    }

    // Create session
    await createSession(user.id)

    return {
      success: true,
      message: 'Signed in successfully',
    }
  } catch (error) {
    console.error('Sign in error:', error)
    return {
      success: false,
      message: 'An error occurred while signing in',
      error: 'Failed to sign in',
    }
  }
}

export async function signUp(formData: FormData): Promise<ActionResponse> {
  try {
    // Add a small delay to simulate network latency
    await mockDelay(700)

    // Extract data from form
    const data = {
      email: formData.get('email') as string,
      password: formData.get('password') as string,
      confirmPassword: formData.get('confirmPassword') as string,
    }

    // Validate with Zod
    const validationResult = SignUpSchema.safeParse(data)
    if (!validationResult.success) {
      return {
        success: false,
        message: 'Validation failed',
        errors: validationResult.error.flatten().fieldErrors,
      }
    }

    // Check if user already exists
    const existingUser = await getUserByEmail(data.email)
    if (existingUser) {
      return {
        success: false,
        message: 'User with this email already exists',
        errors: {
          email: ['User with this email already exists'],
        },
      }
    }

    // Create new user
    const user = await createUser(data.email, data.password)
    if (!user) {
      return {
        success: false,
        message: 'Failed to create user',
        error: 'Failed to create user',
      }
    }

    // Create session for the newly registered user
    await createSession(user.id)

    return {
      success: true,
      message: 'Account created successfully',
    }
  } catch (error) {
    console.error('Sign up error:', error)
    return {
      success: false,
      message: 'An error occurred while creating your account',
      error: 'Failed to create account',
    }
  }
}

export async function signOut(): Promise<void> {
  try {
    await mockDelay(300)
    await deleteSession()
  } catch (error) {
    console.error('Sign out error:', error)
    throw new Error('Failed to sign out')
  } finally {
    redirect('/signin')
  }
}


================================================================================
FILE: layout.tsx
================================================================================

// app/layout.tsx
import {
  Cinzel,
  Cinzel_Decorative,
  Dancing_Script,
  Geist_Mono,
} from "next/font/google";
import { ThemeProvider } from "next-themes";
import type { Metadata } from "next";
import "./styles/globals.css";
import { cn } from "@/lib/utils";

export const metadata: Metadata = {
  title: "Samir Codes",
  description: "Personal website and portfolio",
};

const cinzel = Cinzel({
  weight: ["400", "700", "900"], // Choose the weights
  subsets: ["latin"],
  display: "swap",
  variable: "--font-cinzel",
});

const cinzelDecorative = Cinzel_Decorative({
  weight: ["400", "700", "900"], // Choose the weights
  subsets: ["latin"],
  display: "swap",
  variable: "--font-cinzel-deco",
});

const dancingScript = Dancing_Script({
  weight: ["400", "700"],
  subsets: ["latin"],
  display: "swap",
  variable: "--font-dancing-script",
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html
      lang="en"
      className="scroll-smooth scrollbar-thin"
      suppressHydrationWarning
    >
      <body
        className={cn(
          cinzel.variable,
          cinzelDecorative.variable,
          dancingScript.variable,
          geistMono.variable,
          "antialiased",
          "tracking-tight"
        )}
      >
        <ThemeProvider
          attribute="class"
          defaultTheme="dark" // Ensures .dark is applied initially if no preference
          enableSystem={true}
          themes={["dark"]}
        >
          <div className="flex flex-col min-h-screen overflow-hidden supports-[overflow:clip]:overflow-clip mx-4">
            {children}
          </div>
        </ThemeProvider>
      </body>
    </html>
  );
}


================================================================================
FILE: styles/animations.css
================================================================================

/* app/styles/animations.css */

/* ==========================================================================
   Keyframe Definitions
   ========================================================================== */

/*  Animated Gradient Underline */
@keyframes slideGradient {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

/* === flip effect === */
@keyframes slideWordsUp {
  0%,
  45% {
    /* Pause on 'Build' */
    transform: translateY(0);
  }
  50%,
  95% {
    /* Pause on 'Break' */
    /* Move container up by the height of one line (100% of its own height) */
    transform: translateY(-100%);
  }
  100% {
    /* Loop back */
    transform: translateY(0);
  }
}

/* ========= Animation Utility Classes ========= */

/* ========= Fancy Hover ========= */

.fancy-hover {
  @media (hover) {
    & > li {
      transition: opacity 0.3s linear;
    }
  }

  &:has(> li:hover) > li:not(:hover),
  &:has(> li:focus-within) > li:not(:focus-within) {
    opacity: 0.25;
  }
}

.bouncy-hover {
  @media (hover) {
    /* @media (hover) and (prefers-reduced-motion) { */
    & > li {
      transform-origin: left center;
      transition: transform 1s var(--bounce), opacity 0.3s linear;
    }
  }

  &:has(> li:hover) > li:not(:hover),
  &:has(> li:focus-within) > li:not(:focus-within) {
    opacity: 0.25;
    transform: scale(0.8);
  }
}

.fanning-hover {
  /* play with these */
  --arc: 5deg;
  --distance-multiplier: 15%;

  &:has(li:nth-child(1):hover) {
    --target: 1;
  }
  &:has(li:nth-child(2):hover) {
    --target: 2;
  }
  &:has(li:nth-child(3):hover) {
    --target: 3;
  }
  &:has(li:nth-child(4) :hover) {
    --target: 4;
  }
  &:has(li:nth-child(5) :hover) {
    --target: 5;
  }
  &:has(li:nth-child(6) :hover) {
    --target: 6;
  }
  &:has(li:nth-child(7) :hover) {
    --target: 7;
  }
  &:has(li:nth-child(8) :hover) {
    --target: 8;
  }
  &:has(li:nth-child(9) :hover) {
    --target: 9;
  }
  &:has(li:nth-child(10) :hover) {
    --target: 10;
  }

  @media (hover) and (prefers-reduced-motion: no-preference) {
    & > li {
      transform-origin: -200% 50%;
      transition: transform 1s var (--bounce), opacity 0.3s linear;
    }

    &:has(> li:hover) > li:not(:hover),
    &:has(> li:focus-within) > li:not(:focus-within) {
      /* used for calculations, don't touch */
      --distance-from-target: abs(var (--sibling-index) - var(--target));
      --distance-multiplier-calc: var(--distance-from-target) *
        var(--distance-multiplier);
      --gradual-fadeout: calc(100% - var(--distance-multiplier-calc));
      --angle: calc((var(--sibling-index) - var(--target)) * var(--arc));

      /* opacity: 0.25; */
      /* transform: scale(0.8); */
      opacity: var (--gradual-fadeout);
      transform: rotateZ(var(--angle));
    }
  }
}

/* ========= Fanning Effect ========= */

.fanning-list {
  list-style: none; /* Remove default list bullets */
  padding: 0;
  margin: 0;
  /* Add any other base styles for the ul */
  /* The :has() selector below triggers the fanning effect */
  /* This ensures the effect only happens when a child li is hovered or focused */
}

/* Styles for individual list items */
.fanning-list-item {
  /* Set the transform origin for rotation */
  transform-origin: left center;
  transition: transform 0.5s ease-in-out, opacity 0.5s ease-in-out;
  /* Add padding, margin, or other styling for list items */
  padding: 10px; /* Example padding */
  margin-bottom: 5px; /* Example margin */
  /* Ensure items are block level or have defined width for transform-origin to work consistently */
  display: block;
  width: 100%; /* Example width */

  /* Optional: Add a subtle effect on the active item itself */
  /* As discussed, this specific rule is not in the core blog post demo */
  /* &:hover,
  &:focus-within {
    transform: scale(1.05);
  } */
}
/* Optional: Add a subtle scale effect on active item */
.fanning-list-item:hover,
.fanning-list-item:focus-within {
  transform: scale(1.02);
  transition: transform 0.3s ease;
}

/* Media query to disable hover effects on devices that don't support hover */
/* This is important for touch devices */
@media (hover: none) {
  .fanning-list:has(> li:hover) > li:not(:hover) {
    opacity: 1 !important; /* Override opacity */
    transform: none !important; /* Override transform */
  }
}

/* Optional: Add styles for reduced motion */
/* @media (prefers-reduced-motion: reduce) {
  .fanning-list-item {
    Disable transitions
    transition: none !important;
  }
} */

/* ========= Quick Flip Effect ========= */
.quick-flip {
  overflow-y: clip;
  --quick-flip-duration: 0.325s;
}

.quick-flip > * {
  display: block; /* Won't work without this block */
  transition: translate var(--quick-flip-duration),
    transform 0s calc(var(--quick-flip-duration) / 2);
  transition-timing-function: cubic-bezier(0.66, 0, 0.34, 1);
}

.quick-flip:hover > *,
.quick-flip:focus > * {
  translate: 0 -2lh;
  transform: translateY(2lh);
}

.animate-slideGradient {
  animation: slideGradient 3s ease infinite;
}

/* ========= Flip Effect Hero ========= */

.flip-animation-container {
  /* Apply the animation */
  animation: slideWordsUp 4s infinite ease-in-out;
  /* Ensure smooth GPU acceleration */
  will-change: transform;
  transform: translateZ(0); /* Force GPU layer */
  width: auto;
}

/* @media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-delay: -1ms l important;
    animation-duration: 1ms !important;
    animation-iteration-count: 1 !important;
    background-attachment: initial !important;
    scroll-behavior: auto !important;
    transition-duration: 0s !important;
    transition-delay: 0s !important;
  }
} */

/* ==========================================================================
   Custom AOS Animations
   ========================================================================== */
@media screen {
  html:not(.no-js) body [data-aos="fade-up"] {
    -webkit-transform: translate3d(0, 14px, 0);
    transform: translate3d(0, 14px, 0);
  }
  html:not(.no-js) body [data-aos="fade-down"] {
    -webkit-transform: translate3d(0, -14px, 0);
    transform: translate3d(0, -14px, 0);
  }
  html:not(.no-js) body [data-aos="fade-right"] {
    -webkit-transform: translate3d(-14px, 0, 0);
    transform: translate3d(-14px, 0, 0);
  }
  html:not(.no-js) body [data-aos="fade-left"] {
    -webkit-transform: translate3d(14px, 0, 0);
    transform: translate3d(14px, 0, 0);
  }
  html:not(.no-js) body [data-aos="fade-up-right"] {
    -webkit-transform: translate3d(-14px, 14px, 0);
    transform: translate3d(-14px, 14px, 0);
  }

  html:not(.no-js) body [data-aos="fade-up-left"] {
    -webkit-transform: translate3d(14px, 14px, 0);
    transform: translate3d(14px, 14px, 0);
  }

  html:not(.no-js) body [data-aos="fade-down-right"] {
    -webkit-transform: translate3d(-14px, -14px, 0);
    transform: translate3d(-14px, -14px, 0);
  }

  html:not(.no-js) body [data-aos="fade-down-left"] {
    -webkit-transform: translate3d(14px, -14px, 0);
    transform: translate3d(14px, -14px, 0);
  }

  html:not(.no-js) body [data-aos="zoom-in-up"] {
    -webkit-transform: translate3d(0, 14px, 0) scale(0.6);
    transform: translate3d(0, 14px, 0) scale(0.6);
  }

  html:not(.no-js) body [data-aos="zoom-in-down"] {
    -webkit-transform: translate3d(0, -14px, 0) scale(0.6);
    transform: translate3d(0, -14px, 0) scale(0.6);
  }

  html:not(.no-js) body [data-aos="zoom-in-right"] {
    -webkit-transform: translate3d(-14px, 0, 0) scale(0.6);
    transform: translate3d(-14px, 0, 0) scale(0.6);
  }

  html:not(.no-js) body [data-aos="zoom-in-left"] {
    -webkit-transform: translate3d(14px, 0, 0) scale(0.6);
    transform: translate3d(14px, 0, 0) scale(0.6);
  }

  html:not(.no-js) body [data-aos="zoom-out-up"] {
    -webkit-transform: translate3d(0, 14px, 0) scale(1.2);
    transform: translate3d(0, 14px, 0) scale(1.2);
  }

  html:not(.no-js) body [data-aos="zoom-out-down"] {
    -webkit-transform: translate3d(0, -14px, 0) scale(1.2);
    transform: translate3d(0, -14px, 0) scale(1.2);
  }

  html:not(.no-js) body [data-aos="zoom-out-right"] {
    -webkit-transform: translate3d(-14px, 0, 0) scale(1.2);
    transform: translate3d(-14px, 0, 0) scale(1.2);
  }

  html:not(.no-js) body [data-aos="zoom-out-left"] {
    -webkit-transform: translate3d(14px, 0, 0) scale(1.2);
    transform: translate3d(14px, 0, 0) scale(1.2);
  }
}


================================================================================
FILE: styles/globals.css
================================================================================

/* app/styles/globals.css (Updated for Tailwind v3) */

/* === Custom Font Definitions === */
@font-face {
  font-family: "MonaspaceNeon"; /* Must match the key in tailwind.config.ts */
  src: url("/fonts/MonaspaceNeon-Regular.woff2") format("woff2"); /* Adjust path and format */
  font-weight: normal; /* Or specify weight range if variable */
  font-style: normal;
  font-display: swap; /* Improves perceived performance */
}

@font-face {
  font-family: "MonaspaceArgon";
  src: url("/fonts/MonaspaceArgon-Regular.woff2") format("woff2");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "MonaspaceXenon"; /* MUST MATCH */
  src: url("/fonts/MonaspaceXenon-Regular.woff2") format("woff2");
}
@font-face {
  font-family: "MonaspaceRadon";
  src: url("/fonts/MonaspaceRadon-Regular.woff2") format("woff2");
}

/* === Tailwind v3 Directives  === */
@tailwind base;
@tailwind components;
@tailwind utilities;

/* === Custom Style Imports (AFTER Tailwind directives for v3 JIT) === */
@import "./theme.css"; /* Defines CSS variables, custom component styles */
@import "./utility-patterns.css";
@import "./animations.css";
@import "./mdx.css";

/* === Base HTML/Body Styles === */
html,
body {
  max-width: 100vw;
  overflow-x: hidden; /* Prevent horizontal scroll */
  min-height: 100vh;
}

/* :root {
  --hdr-gradient: radial-gradient(
    farthest-corner circle at 50% 50% in oklab,
    oklch(44% 0.04 139) 0%, oklch(20% 0.04 135) 100%
  );
  --sdr-gradient: radial-gradient(
    farthest-corner circle at 50% 50%,
    #475843 0%, #0e1a07 100%
  );

  background: var(--hdr-gradient);
} */

body {
  /* Theme-aware Background and Text Color --- */
  /* Generic role-based variables, which get their values, from the theme class (.dark, .mocha-mousse) applied to the html tag. */

  background-color: var(--color-surface-page);
  color: var(--color-text-default);

  background-image: none;
  /* Or 'scroll' if scrollable needed, but 'initial' is safer */
  background-attachment: initial;

  font-family: var(--font-cal-sans);
  font-size: var(--fontSize-base);
  line-height: var(--lineHeight-normal);

  font-feature-settings: "ss01" 1;
  font-feature-settings: "ss02" 1;
  /* Standard browser normalization */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;

  overscroll-behavior: none !important;

  &[page-type="detail"] {
    background: radial-gradient(
        circle at 35% 50%,
        /* YOUR_COLOR_1 (consider using low opacity, e.g., rgba(R,G,B, 0.15)) */
          rgba(255, 165, 0, 0.15),
        /* Example: Semi-transparent Orange */ transparent 50%
      ),
      radial-gradient(
        circle at 65% 50%,
        /* YOUR_COLOR_2 (consider using low opacity) */ rgba(0, 128, 128, 0.15),
        /* Example: Semi-transparent Teal */ transparent 50%
      ),
      radial-gradient(
        circle at 50% 65%,
        /* YOUR_COLOR_3 (consider using low opacity) */
          rgba(221, 160, 221, 0.15),
        /* Example: Semi-transparent Plum */ transparent 50%
      );
    background-attachment: fixed;
  }
}

.font-mono {
  letter-spacing: 0.05em !important;
}

.will-change-transform {
  transform: translateY(3.3446px) translateZ(0px);
  will-change: transform;
}

.hero-text {
  font-family: var(--font-cinzel), serif;
  line-height: 1.2; /* maps to leading-[1] */
  /* text-transform: uppercase; */
  font-size: clamp(1.875rem, 0.92rem + 4.9vw, 5.625rem);
  letter-spacing: -0.025em;

  /* stylistic set to activate */
  font-feature-settings: "ss01" 1;
  /* font-feature-settings: "ss02" 1; */
}

/* Basic reset */
* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

a {
  color: inherit;
  text-decoration: none;
}

button {
  background-color: var(--button-primary-fill);
  color: var(--button-primary-text);
  border: 1px solid var(--button-primary-border);
  padding: 10px 20px; /* Example padding */
  border-radius: 5px; /* Example border radius */
  cursor: pointer;
  transition: background-color 0.3s ease, border-color 0.3s ease,
    color 0.3s ease; /* Smooth transition for hover */
}

button:hover {
  background-color: var(--button-primary-fill-hover);
  border-color: var(--button-primary-border-hover);
  color: var(--button-primary-text-hover);
}

/* Custom hover effects */
.nav-item {
  transition: all 0.2s ease-in-out;
}

/* Optional: Add subtle shadow to nav */
.nav-shadow {
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
}

/* === lighting effect with pseudo-elements === */
.bg-lighting::before {
  content: "";
  position: absolute;
  top: -20%;
  left: -20%;
  width: 140%;
  height: 140%;
  background: radial-gradient(
    circle at 50% 50%,
    rgba(255, 255, 255, 0.2) 0%,
    transparent 60%
  );
  pointer-events: none;
}

/* === Highlighter Styles === */

/* HighlighterItem Pseudo-elements */
.highlighterItem::before {
  content: "";
  position: absolute;
  width: 24rem; /* w-96 */
  height: 24rem; /* h-96 */
  left: -12rem; /* left-48 */
  top: -12rem; /* top-48 */
  background-color: rgb(var(--primary-rgb));
  border-radius: 9999px;
  opacity: 0;
  pointer-events: none;
  transition: opacity 500ms;
  transform: translate(
    var(--mouse-x, 0px),
    var(--mouse-y, 0px)
  ); /* Add fallback */
  z-index: 30; /* Check z-index conflicts */
  filter: blur(100px);
}
.highlighterItem::after {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: inherit;
  opacity: 0;
  transition: opacity 500ms;
  /* Example subtle foreground color */
  background: radial-gradient(
    250px circle at var(--mouse-x, 0px) var(--mouse-y, 0px),
    rgba(var(--foreground-rgb), 0.1),
    transparent
  );
  z-index: 10; /* Check z-index conflicts */
}

/* HighlighterItem02 Pseudo-elements */
.highlighterItem02::before {
  content: "";
  position: absolute;
  width: 16rem; /* w-64 */
  height: 16rem; /* h-64 */
  left: -8rem; /* left-32 */
  top: -8rem; /* top-32 */
  background-color: rgb(var(--secondary-rgb));
  border-radius: 9999px;
  opacity: 0;
  pointer-events: none;
  transition: opacity 500ms;
  transform: translate(var(--mouse-x, 0px), var(--mouse-y, 0px)); /* fallback */
  z-index: 30;
  filter: blur(64px);
}

.highlighterItem02::after {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: inherit;
  opacity: 0;
  transition: opacity 500ms;
  background: radial-gradient(
    250px circle at var(--mouse-x, 0px) var(--mouse-y, 0px),
    rgba(var(--foreground-rgb), 0.1),
    transparent
  );
  z-index: 10;
}

/* Group hover effects */
.group:hover .highlighterItem::before {
  opacity: 0.1;
}
.group:hover .highlighterItem::after {
  opacity: 0.3;
}
.group:hover .highlighterItem02::before {
  opacity: 0.15;
}
.group:hover .highlighterItem02::after {
  opacity: 0.3;
}

/* === Custom @layer definitions  === */

@layer utilities {
  .rtl {
    direction: rtl;
  }
}

/* MDX Prose Styles (Controlling Typography Plugin) --- */
/* Apply thin scrollbar specifically to code blocks */
.mdx-prose figure[data-rehype-pretty-code-figure] > pre {
  border: 1px solid rgb(var(--border-subtle-rgb));
  border-radius: 6px;
  padding: var(--spacing-md);
  overflow-x: auto; /* Ensure horizontal scrolling is enabled */
  font-size: 0.9em;
  line-height: 1.6;
  scrollbar-width: thin; /* Standard property */
  scrollbar-color: rgba(var(--foreground-rgb), 0.5) transparent; /* Optional: Thumb/track color */
}

/* Webkit scrollbar styling (optional but recommended for cross-browser) */
.mdx-prose figure[data-rehype-pretty-code-figure] > pre::-webkit-scrollbar {
  height: 6px; /* Height for horizontal scrollbar */
  width: 6px; /* Width for vertical scrollbar (if it ever scrolls vertically) */
}

.mdx-prose
  figure[data-rehype-pretty-code-figure]
  > pre::-webkit-scrollbar-track {
  background: transparent; /* Or a subtle background color */
}

.mdx-prose
  figure[data-rehype-pretty-code-figure]
  > pre::-webkit-scrollbar-thumb {
  background-color: rgba(var(--foreground-rgb), 0.5); /* Match thumb color */
  border-radius: 3px;
  border: 1px solid transparent; /* Prevent border from adding size */
  background-clip: content-box; /* Clip background to content area */
}

/* MDX Prose Styles (Controlling Typography Plugin) --- */
/* Plugin variables need to be defined to use theme variables */
.mdx-prose {
  @apply max-w-none;

  /* Map semantic variables defined in :root */
  --tw-prose-body: rgb(var(--color-text-default-rgb));
  --tw-prose-headings: rgb(var(--color-text-default-rgb));
  --tw-prose-lead: rgb(var(--color-text-muted-rgb));
  --tw-prose-links: rgb(
    var(--color-accent-primary-rgb)
  ); /* Using moth-orange */
  --tw-prose-bold: rgb(var(--color-text-default-rgb));
  --tw-prose-counters: rgb(var(--color-text-muted-rgb));
  --tw-prose-bullets: rgb(
    var(--color-accent-primary-rgb)
  ); /* Using moth-orange */
  --tw-prose-hr: rgb(var(--color-border-default-rgb)); /* Using moth-mousse */
  --tw-prose-quotes: rgb(var(--color-text-muted-rgb));
  --tw-prose-quote-borders: rgb(var(--color-border-default-rgb));
  --tw-prose-captions: rgb(var(--color-text-muted-rgb));
  --tw-prose-code: rgb(
    var(--color-accent-secondary-rgb)
  ); /* Using deep-ochre */
  --tw-prose-pre-code: inherit; /* Let syntax highlighter handle */
  --tw-prose-pre-bg: rgb(
    var(--color-code-background-rgb)
  ); /* Using moth-brown */
  --tw-prose-th-borders: rgb(var(--color-border-default-rgb));
  --tw-prose-td-borders: rgb(
    var(--color-border-subtle-rgb)
  ); /* Using moth-brown */

  /* Define invert vars pointing to the same values, just in case */
  --tw-prose-invert-body: rgb(var(--color-text-default-rgb));
  --tw-prose-invert-headings: rgb(var(--color-text-default-rgb));
  --tw-prose-invert-lead: rgb(var(--color-text-muted-rgb));
  --tw-prose-invert-links: rgb(var(--color-accent-primary-rgb));
  --tw-prose-invert-bold: rgb(var(--color-text-default-rgb));
  --tw-prose-invert-counters: rgb(var(--color-text-muted-rgb));
  --tw-prose-invert-bullets: rgb(var(--color-accent-primary-rgb));
  --tw-prose-invert-hr: rgb(var(--color-border-default-rgb));
  --tw-prose-invert-quotes: rgb(var(--color-text-muted-rgb));
  --tw-prose-invert-quote-borders: rgb(var(--color-border-default-rgb));
  --tw-prose-invert-captions: rgb(var(--color-text-muted-rgb));
  --tw-prose-invert-code: rgb(var(--color-accent-secondary-rgb));
  --tw-prose-invert-pre-code: inherit;
  --tw-prose-invert-pre-bg: rgb(var(--color-code-background-rgb));
  --tw-prose-invert-th-borders: rgb(var(--color-border-default-rgb));
  --tw-prose-invert-td-borders: rgb(var(--color-border-subtle-rgb));
}


================================================================================
FILE: styles/mdx.css
================================================================================

/* app/styles/mdx.css (Simplified for v3 & Typography Plugin) */

/* Overrides or Additions to Typography Plugin --- */

/*  Link Styling Enhancements --- */
/* Base color/decoration comes from --tw-prose-links */
.mdx-prose a {
  text-underline-offset: 2px;
  transition: color 150ms ease-in-out, text-decoration-color 150ms ease-in-out;
  /* Optionally override decoration color alpha */
  text-decoration-color: rgba(var(--primary-rgb), 0.5);
}
.mdx-prose a:hover {
  /* Hover color comes from plugin/theme vars, just adjust decoration */
  text-decoration-color: rgba(var(--secondary-rgb), 0.7);
}

/* External Link Indicator */
.mdx-prose a[target="_blank"]::after {
  content: "↗";
  display: inline-block;
  margin-left: 0.25rem;
  font-size: 0.75em;
  opacity: 0.7;
  transition: opacity 0.2s ease-out;
}
.mdx-prose a[target="_blank"]:hover::after {
  opacity: 1;
}

/* List Styling --- */
/* Marker color comes from --tw-prose-bullets */
/* .mdx-prose ul li::marker { color: rgb(var(--primary-rgb)); } */

/*  Inline Code Styling --- */
/* Let plugin handle color via its defaults, just add bg/padding */
.mdx-prose :not(pre) > code {
  background-color: var(--gray-alpha-100);
  padding: 0.2em 0.4em;
  border-radius: 4px;
  font-size: var(--fontSize-sm);
  font-family: var(--font-geist-mono), monospace;
}

/* Rehype Pretty Code Styling --- */
.mdx-prose figure[data-rehype-pretty-code-figure] {
  margin-block: 1.5em;
}

.mdx-prose figure[data-rehype-pretty-code-figure] > pre {
  border: 1px solid rgb(var(--border-subtle-rgb)); /* Use border variable */
  border-radius: 6px;
  padding: var(--spacing-md);
  overflow-x: auto;
  font-size: 0.9em; /* Slightly smaller than base */
  line-height: 1.6;
  /* Background comes from --tw-prose-pre-bg */
}

.mdx-prose figure[data-rehype-pretty-code-figure] > pre > code {
  display: grid;
  font-family: var(--font-geist-mono), monospace; /* Ensure monospace font */
  background-color: transparent !important; /* Override theme bg */
  font-size: inherit;
  /* Text color comes from --tw-prose-pre-code (theme) or highlighting spans */
}

/* Code Highlights */
.mdx-prose .line--highlighted {
  background-color: rgba(var(--primary-rgb), 0.1); /* Use primary with alpha */
  box-shadow: inset 3px 0 0 0 rgb(var(--primary-rgb));
}
.mdx-prose .word--highlighted {
  background-color: rgba(
    var(--secondary-rgb),
    0.2
  ); /* Use secondary with alpha */
  padding: 0.1em 0.2em;
  border-radius: 3px;
}

/* Code Block Titles */
.mdx-prose [data-rehype-pretty-code-title] {
  font-size: 0.85em;
  font-family: var(--font-geist-mono), monospace;
  color: rgba(var(--foreground-rgb), 0.7);
  background-color: var(--gray-alpha-200); /* Slightly darker alpha gray */
  padding: var(--spacing-sm) var(--spacing-md);
  border: 1px solid rgb(var(--border-subtle-rgb));
  border-bottom: none;
  border-top-left-radius: 6px;
  border-top-right-radius: 6px;
  margin-bottom: 0;
}


================================================================================
FILE: styles/styes-dir.txt
================================================================================

Directory Tree:
.
├── animations.css
├── globals.css
├── mdx.css
├── theme.css
└── utility-patterns.css


================================================================================
FILE: animations.css
================================================================================

/* app/styles/animations.css */

/* ==========================================================================
   Keyframe Definitions
   ========================================================================== */

/*  Animated Gradient Underline */
@keyframes slideGradient {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

/* === flip effect === */
@keyframes slideWordsUp {
  0%,
  45% {
    /* Pause on 'Build' */
    transform: translateY(0);
  }
  50%,
  95% {
    /* Pause on 'Break' */
    /* Move container up by the height of one line (100% of its own height) */
    transform: translateY(-100%);
  }
  100% {
    /* Loop back */
    transform: translateY(0);
  }
}

/* ========= Animation Utility Classes ========= */

/* ========= Fancy Hover ========= */

.fancy-hover {
  @media (hover) {
    & > li {
      transition: opacity 0.3s linear;
    }
  }

  &:has(> li:hover) > li:not(:hover),
  &:has(> li:focus-within) > li:not(:focus-within) {
    opacity: 0.25;
  }
}

.bouncy-hover {
  @media (hover) {
    /* @media (hover) and (prefers-reduced-motion) { */
    & > li {
      transform-origin: left center;
      transition: transform 1s var(--bounce), opacity 0.3s linear;
    }
  }

  &:has(> li:hover) > li:not(:hover),
  &:has(> li:focus-within) > li:not(:focus-within) {
    opacity: 0.25;
    transform: scale(0.8);
  }
}

.fanning-hover {
  /* play with these */
  --arc: 5deg;
  --distance-multiplier: 15%;

  &:has(li:nth-child(1):hover) {
    --target: 1;
  }
  &:has(li:nth-child(2):hover) {
    --target: 2;
  }
  &:has(li:nth-child(3):hover) {
    --target: 3;
  }
  &:has(li:nth-child(4) :hover) {
    --target: 4;
  }
  &:has(li:nth-child(5) :hover) {
    --target: 5;
  }
  &:has(li:nth-child(6) :hover) {
    --target: 6;
  }
  &:has(li:nth-child(7) :hover) {
    --target: 7;
  }
  &:has(li:nth-child(8) :hover) {
    --target: 8;
  }
  &:has(li:nth-child(9) :hover) {
    --target: 9;
  }
  &:has(li:nth-child(10) :hover) {
    --target: 10;
  }

  @media (hover) and (prefers-reduced-motion: no-preference) {
    & > li {
      transform-origin: -200% 50%;
      transition: transform 1s var (--bounce), opacity 0.3s linear;
    }

    &:has(> li:hover) > li:not(:hover),
    &:has(> li:focus-within) > li:not(:focus-within) {
      /* used for calculations, don't touch */
      --distance-from-target: abs(var (--sibling-index) - var(--target));
      --distance-multiplier-calc: var(--distance-from-target) *
        var(--distance-multiplier);
      --gradual-fadeout: calc(100% - var(--distance-multiplier-calc));
      --angle: calc((var(--sibling-index) - var(--target)) * var(--arc));

      /* opacity: 0.25; */
      /* transform: scale(0.8); */
      opacity: var (--gradual-fadeout);
      transform: rotateZ(var(--angle));
    }
  }
}

/* ========= Fanning Effect ========= */

.fanning-list {
  list-style: none; /* Remove default list bullets */
  padding: 0;
  margin: 0;
  /* Add any other base styles for the ul */
  /* The :has() selector below triggers the fanning effect */
  /* This ensures the effect only happens when a child li is hovered or focused */
}

/* Styles for individual list items */
.fanning-list-item {
  /* Set the transform origin for rotation */
  transform-origin: left center;
  transition: transform 0.5s ease-in-out, opacity 0.5s ease-in-out;
  /* Add padding, margin, or other styling for list items */
  padding: 10px; /* Example padding */
  margin-bottom: 5px; /* Example margin */
  /* Ensure items are block level or have defined width for transform-origin to work consistently */
  display: block;
  width: 100%; /* Example width */

  /* Optional: Add a subtle effect on the active item itself */
  /* As discussed, this specific rule is not in the core blog post demo */
  /* &:hover,
  &:focus-within {
    transform: scale(1.05);
  } */
}
/* Optional: Add a subtle scale effect on active item */
.fanning-list-item:hover,
.fanning-list-item:focus-within {
  transform: scale(1.02);
  transition: transform 0.3s ease;
}

/* Media query to disable hover effects on devices that don't support hover */
/* This is important for touch devices */
@media (hover: none) {
  .fanning-list:has(> li:hover) > li:not(:hover) {
    opacity: 1 !important; /* Override opacity */
    transform: none !important; /* Override transform */
  }
}

/* Optional: Add styles for reduced motion */
/* @media (prefers-reduced-motion: reduce) {
  .fanning-list-item {
    Disable transitions
    transition: none !important;
  }
} */

/* ========= Quick Flip Effect ========= */
.quick-flip {
  overflow-y: clip;
  --quick-flip-duration: 0.325s;
}

.quick-flip > * {
  display: block; /* Won't work without this block */
  transition: translate var(--quick-flip-duration),
    transform 0s calc(var(--quick-flip-duration) / 2);
  transition-timing-function: cubic-bezier(0.66, 0, 0.34, 1);
}

.quick-flip:hover > *,
.quick-flip:focus > * {
  translate: 0 -2lh;
  transform: translateY(2lh);
}

.animate-slideGradient {
  animation: slideGradient 3s ease infinite;
}

/* ========= Flip Effect Hero ========= */

.flip-animation-container {
  /* Apply the animation */
  animation: slideWordsUp 4s infinite ease-in-out;
  /* Ensure smooth GPU acceleration */
  will-change: transform;
  transform: translateZ(0); /* Force GPU layer */
  width: auto;
}

/* @media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-delay: -1ms l important;
    animation-duration: 1ms !important;
    animation-iteration-count: 1 !important;
    background-attachment: initial !important;
    scroll-behavior: auto !important;
    transition-duration: 0s !important;
    transition-delay: 0s !important;
  }
} */

/* ==========================================================================
   Custom AOS Animations
   ========================================================================== */
@media screen {
  html:not(.no-js) body [data-aos="fade-up"] {
    -webkit-transform: translate3d(0, 14px, 0);
    transform: translate3d(0, 14px, 0);
  }
  html:not(.no-js) body [data-aos="fade-down"] {
    -webkit-transform: translate3d(0, -14px, 0);
    transform: translate3d(0, -14px, 0);
  }
  html:not(.no-js) body [data-aos="fade-right"] {
    -webkit-transform: translate3d(-14px, 0, 0);
    transform: translate3d(-14px, 0, 0);
  }
  html:not(.no-js) body [data-aos="fade-left"] {
    -webkit-transform: translate3d(14px, 0, 0);
    transform: translate3d(14px, 0, 0);
  }
  html:not(.no-js) body [data-aos="fade-up-right"] {
    -webkit-transform: translate3d(-14px, 14px, 0);
    transform: translate3d(-14px, 14px, 0);
  }

  html:not(.no-js) body [data-aos="fade-up-left"] {
    -webkit-transform: translate3d(14px, 14px, 0);
    transform: translate3d(14px, 14px, 0);
  }

  html:not(.no-js) body [data-aos="fade-down-right"] {
    -webkit-transform: translate3d(-14px, -14px, 0);
    transform: translate3d(-14px, -14px, 0);
  }

  html:not(.no-js) body [data-aos="fade-down-left"] {
    -webkit-transform: translate3d(14px, -14px, 0);
    transform: translate3d(14px, -14px, 0);
  }

  html:not(.no-js) body [data-aos="zoom-in-up"] {
    -webkit-transform: translate3d(0, 14px, 0) scale(0.6);
    transform: translate3d(0, 14px, 0) scale(0.6);
  }

  html:not(.no-js) body [data-aos="zoom-in-down"] {
    -webkit-transform: translate3d(0, -14px, 0) scale(0.6);
    transform: translate3d(0, -14px, 0) scale(0.6);
  }

  html:not(.no-js) body [data-aos="zoom-in-right"] {
    -webkit-transform: translate3d(-14px, 0, 0) scale(0.6);
    transform: translate3d(-14px, 0, 0) scale(0.6);
  }

  html:not(.no-js) body [data-aos="zoom-in-left"] {
    -webkit-transform: translate3d(14px, 0, 0) scale(0.6);
    transform: translate3d(14px, 0, 0) scale(0.6);
  }

  html:not(.no-js) body [data-aos="zoom-out-up"] {
    -webkit-transform: translate3d(0, 14px, 0) scale(1.2);
    transform: translate3d(0, 14px, 0) scale(1.2);
  }

  html:not(.no-js) body [data-aos="zoom-out-down"] {
    -webkit-transform: translate3d(0, -14px, 0) scale(1.2);
    transform: translate3d(0, -14px, 0) scale(1.2);
  }

  html:not(.no-js) body [data-aos="zoom-out-right"] {
    -webkit-transform: translate3d(-14px, 0, 0) scale(1.2);
    transform: translate3d(-14px, 0, 0) scale(1.2);
  }

  html:not(.no-js) body [data-aos="zoom-out-left"] {
    -webkit-transform: translate3d(14px, 0, 0) scale(1.2);
    transform: translate3d(14px, 0, 0) scale(1.2);
  }
}


================================================================================
FILE: globals.css
================================================================================

/* app/styles/globals.css (Updated for Tailwind v3) */

/* === Custom Font Definitions === */
@font-face {
  font-family: "MonaspaceNeon"; /* Must match the key in tailwind.config.ts */
  src: url("/fonts/MonaspaceNeon-Regular.woff2") format("woff2"); /* Adjust path and format */
  font-weight: normal; /* Or specify weight range if variable */
  font-style: normal;
  font-display: swap; /* Improves perceived performance */
}

@font-face {
  font-family: "MonaspaceArgon";
  src: url("/fonts/MonaspaceArgon-Regular.woff2") format("woff2");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "MonaspaceXenon"; /* MUST MATCH */
  src: url("/fonts/MonaspaceXenon-Regular.woff2") format("woff2");
}
@font-face {
  font-family: "MonaspaceRadon";
  src: url("/fonts/MonaspaceRadon-Regular.woff2") format("woff2");
}

/* === Tailwind v3 Directives  === */
@tailwind base;
@tailwind components;
@tailwind utilities;

/* === Custom Style Imports (AFTER Tailwind directives for v3 JIT) === */
@import "./theme.css"; /* Defines CSS variables, custom component styles */
@import "./utility-patterns.css";
@import "./animations.css";
@import "./mdx.css";

/* === Base HTML/Body Styles === */
html,
body {
  max-width: 100vw;
  overflow-x: hidden; /* Prevent horizontal scroll */
  min-height: 100vh;
}

/* :root {
  --hdr-gradient: radial-gradient(
    farthest-corner circle at 50% 50% in oklab,
    oklch(44% 0.04 139) 0%, oklch(20% 0.04 135) 100%
  );
  --sdr-gradient: radial-gradient(
    farthest-corner circle at 50% 50%,
    #475843 0%, #0e1a07 100%
  );

  background: var(--hdr-gradient);
} */

body {
  /* Theme-aware Background and Text Color --- */
  /* Generic role-based variables, which get their values, from the theme class (.dark, .mocha-mousse) applied to the html tag. */

  background-color: var(--color-surface-page);
  color: var(--color-text-default);

  background-image: none;
  /* Or 'scroll' if scrollable needed, but 'initial' is safer */
  background-attachment: initial;

  font-family: var(--font-cal-sans);
  font-size: var(--fontSize-base);
  line-height: var(--lineHeight-normal);

  font-feature-settings: "ss01" 1;
  font-feature-settings: "ss02" 1;
  /* Standard browser normalization */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;

  overscroll-behavior: none !important;

  &[page-type="detail"] {
    background: radial-gradient(
        circle at 35% 50%,
        /* YOUR_COLOR_1 (consider using low opacity, e.g., rgba(R,G,B, 0.15)) */
          rgba(255, 165, 0, 0.15),
        /* Example: Semi-transparent Orange */ transparent 50%
      ),
      radial-gradient(
        circle at 65% 50%,
        /* YOUR_COLOR_2 (consider using low opacity) */ rgba(0, 128, 128, 0.15),
        /* Example: Semi-transparent Teal */ transparent 50%
      ),
      radial-gradient(
        circle at 50% 65%,
        /* YOUR_COLOR_3 (consider using low opacity) */
          rgba(221, 160, 221, 0.15),
        /* Example: Semi-transparent Plum */ transparent 50%
      );
    background-attachment: fixed;
  }
}

.font-mono {
  letter-spacing: 0.05em !important;
}

.will-change-transform {
  transform: translateY(3.3446px) translateZ(0px);
  will-change: transform;
}

.hero-text {
  font-family: var(--font-cinzel), serif;
  line-height: 1.2; /* maps to leading-[1] */
  /* text-transform: uppercase; */
  font-size: clamp(1.875rem, 0.92rem + 4.9vw, 5.625rem);
  letter-spacing: -0.025em;

  /* stylistic set to activate */
  font-feature-settings: "ss01" 1;
  /* font-feature-settings: "ss02" 1; */
}

/* Basic reset */
* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

a {
  color: inherit;
  text-decoration: none;
}

button {
  background-color: var(--button-primary-fill);
  color: var(--button-primary-text);
  border: 1px solid var(--button-primary-border);
  padding: 10px 20px; /* Example padding */
  border-radius: 5px; /* Example border radius */
  cursor: pointer;
  transition: background-color 0.3s ease, border-color 0.3s ease,
    color 0.3s ease; /* Smooth transition for hover */
}

button:hover {
  background-color: var(--button-primary-fill-hover);
  border-color: var(--button-primary-border-hover);
  color: var(--button-primary-text-hover);
}

/* Custom hover effects */
.nav-item {
  transition: all 0.2s ease-in-out;
}

/* Optional: Add subtle shadow to nav */
.nav-shadow {
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
}

/* === lighting effect with pseudo-elements === */
.bg-lighting::before {
  content: "";
  position: absolute;
  top: -20%;
  left: -20%;
  width: 140%;
  height: 140%;
  background: radial-gradient(
    circle at 50% 50%,
    rgba(255, 255, 255, 0.2) 0%,
    transparent 60%
  );
  pointer-events: none;
}

/* === Highlighter Styles === */

/* HighlighterItem Pseudo-elements */
.highlighterItem::before {
  content: "";
  position: absolute;
  width: 24rem; /* w-96 */
  height: 24rem; /* h-96 */
  left: -12rem; /* left-48 */
  top: -12rem; /* top-48 */
  background-color: rgb(var(--primary-rgb));
  border-radius: 9999px;
  opacity: 0;
  pointer-events: none;
  transition: opacity 500ms;
  transform: translate(
    var(--mouse-x, 0px),
    var(--mouse-y, 0px)
  ); /* Add fallback */
  z-index: 30; /* Check z-index conflicts */
  filter: blur(100px);
}
.highlighterItem::after {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: inherit;
  opacity: 0;
  transition: opacity 500ms;
  /* Example subtle foreground color */
  background: radial-gradient(
    250px circle at var(--mouse-x, 0px) var(--mouse-y, 0px),
    rgba(var(--foreground-rgb), 0.1),
    transparent
  );
  z-index: 10; /* Check z-index conflicts */
}

/* HighlighterItem02 Pseudo-elements */
.highlighterItem02::before {
  content: "";
  position: absolute;
  width: 16rem; /* w-64 */
  height: 16rem; /* h-64 */
  left: -8rem; /* left-32 */
  top: -8rem; /* top-32 */
  background-color: rgb(var(--secondary-rgb));
  border-radius: 9999px;
  opacity: 0;
  pointer-events: none;
  transition: opacity 500ms;
  transform: translate(var(--mouse-x, 0px), var(--mouse-y, 0px)); /* fallback */
  z-index: 30;
  filter: blur(64px);
}

.highlighterItem02::after {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: inherit;
  opacity: 0;
  transition: opacity 500ms;
  background: radial-gradient(
    250px circle at var(--mouse-x, 0px) var(--mouse-y, 0px),
    rgba(var(--foreground-rgb), 0.1),
    transparent
  );
  z-index: 10;
}

/* Group hover effects */
.group:hover .highlighterItem::before {
  opacity: 0.1;
}
.group:hover .highlighterItem::after {
  opacity: 0.3;
}
.group:hover .highlighterItem02::before {
  opacity: 0.15;
}
.group:hover .highlighterItem02::after {
  opacity: 0.3;
}

/* === Custom @layer definitions  === */

@layer utilities {
  .rtl {
    direction: rtl;
  }
}

/* MDX Prose Styles (Controlling Typography Plugin) --- */
/* Apply thin scrollbar specifically to code blocks */
.mdx-prose figure[data-rehype-pretty-code-figure] > pre {
  border: 1px solid rgb(var(--border-subtle-rgb));
  border-radius: 6px;
  padding: var(--spacing-md);
  overflow-x: auto; /* Ensure horizontal scrolling is enabled */
  font-size: 0.9em;
  line-height: 1.6;
  scrollbar-width: thin; /* Standard property */
  scrollbar-color: rgba(var(--foreground-rgb), 0.5) transparent; /* Optional: Thumb/track color */
}

/* Webkit scrollbar styling (optional but recommended for cross-browser) */
.mdx-prose figure[data-rehype-pretty-code-figure] > pre::-webkit-scrollbar {
  height: 6px; /* Height for horizontal scrollbar */
  width: 6px; /* Width for vertical scrollbar (if it ever scrolls vertically) */
}

.mdx-prose
  figure[data-rehype-pretty-code-figure]
  > pre::-webkit-scrollbar-track {
  background: transparent; /* Or a subtle background color */
}

.mdx-prose
  figure[data-rehype-pretty-code-figure]
  > pre::-webkit-scrollbar-thumb {
  background-color: rgba(var(--foreground-rgb), 0.5); /* Match thumb color */
  border-radius: 3px;
  border: 1px solid transparent; /* Prevent border from adding size */
  background-clip: content-box; /* Clip background to content area */
}

/* MDX Prose Styles (Controlling Typography Plugin) --- */
/* Plugin variables need to be defined to use theme variables */
.mdx-prose {
  @apply max-w-none;

  /* Map semantic variables defined in :root */
  --tw-prose-body: rgb(var(--color-text-default-rgb));
  --tw-prose-headings: rgb(var(--color-text-default-rgb));
  --tw-prose-lead: rgb(var(--color-text-muted-rgb));
  --tw-prose-links: rgb(
    var(--color-accent-primary-rgb)
  ); /* Using moth-orange */
  --tw-prose-bold: rgb(var(--color-text-default-rgb));
  --tw-prose-counters: rgb(var(--color-text-muted-rgb));
  --tw-prose-bullets: rgb(
    var(--color-accent-primary-rgb)
  ); /* Using moth-orange */
  --tw-prose-hr: rgb(var(--color-border-default-rgb)); /* Using moth-mousse */
  --tw-prose-quotes: rgb(var(--color-text-muted-rgb));
  --tw-prose-quote-borders: rgb(var(--color-border-default-rgb));
  --tw-prose-captions: rgb(var(--color-text-muted-rgb));
  --tw-prose-code: rgb(
    var(--color-accent-secondary-rgb)
  ); /* Using deep-ochre */
  --tw-prose-pre-code: inherit; /* Let syntax highlighter handle */
  --tw-prose-pre-bg: rgb(
    var(--color-code-background-rgb)
  ); /* Using moth-brown */
  --tw-prose-th-borders: rgb(var(--color-border-default-rgb));
  --tw-prose-td-borders: rgb(
    var(--color-border-subtle-rgb)
  ); /* Using moth-brown */

  /* Define invert vars pointing to the same values, just in case */
  --tw-prose-invert-body: rgb(var(--color-text-default-rgb));
  --tw-prose-invert-headings: rgb(var(--color-text-default-rgb));
  --tw-prose-invert-lead: rgb(var(--color-text-muted-rgb));
  --tw-prose-invert-links: rgb(var(--color-accent-primary-rgb));
  --tw-prose-invert-bold: rgb(var(--color-text-default-rgb));
  --tw-prose-invert-counters: rgb(var(--color-text-muted-rgb));
  --tw-prose-invert-bullets: rgb(var(--color-accent-primary-rgb));
  --tw-prose-invert-hr: rgb(var(--color-border-default-rgb));
  --tw-prose-invert-quotes: rgb(var(--color-text-muted-rgb));
  --tw-prose-invert-quote-borders: rgb(var(--color-border-default-rgb));
  --tw-prose-invert-captions: rgb(var(--color-text-muted-rgb));
  --tw-prose-invert-code: rgb(var(--color-accent-secondary-rgb));
  --tw-prose-invert-pre-code: inherit;
  --tw-prose-invert-pre-bg: rgb(var(--color-code-background-rgb));
  --tw-prose-invert-th-borders: rgb(var(--color-border-default-rgb));
  --tw-prose-invert-td-borders: rgb(var(--color-border-subtle-rgb));
}


================================================================================
FILE: mdx.css
================================================================================

/* app/styles/mdx.css (Simplified for v3 & Typography Plugin) */

/* Overrides or Additions to Typography Plugin --- */

/*  Link Styling Enhancements --- */
/* Base color/decoration comes from --tw-prose-links */
.mdx-prose a {
  text-underline-offset: 2px;
  transition: color 150ms ease-in-out, text-decoration-color 150ms ease-in-out;
  /* Optionally override decoration color alpha */
  text-decoration-color: rgba(var(--primary-rgb), 0.5);
}
.mdx-prose a:hover {
  /* Hover color comes from plugin/theme vars, just adjust decoration */
  text-decoration-color: rgba(var(--secondary-rgb), 0.7);
}

/* External Link Indicator */
.mdx-prose a[target="_blank"]::after {
  content: "↗";
  display: inline-block;
  margin-left: 0.25rem;
  font-size: 0.75em;
  opacity: 0.7;
  transition: opacity 0.2s ease-out;
}
.mdx-prose a[target="_blank"]:hover::after {
  opacity: 1;
}

/* List Styling --- */
/* Marker color comes from --tw-prose-bullets */
/* .mdx-prose ul li::marker { color: rgb(var(--primary-rgb)); } */

/*  Inline Code Styling --- */
/* Let plugin handle color via its defaults, just add bg/padding */
.mdx-prose :not(pre) > code {
  background-color: var(--gray-alpha-100);
  padding: 0.2em 0.4em;
  border-radius: 4px;
  font-size: var(--fontSize-sm);
  font-family: var(--font-geist-mono), monospace;
}

/* Rehype Pretty Code Styling --- */
.mdx-prose figure[data-rehype-pretty-code-figure] {
  margin-block: 1.5em;
}

.mdx-prose figure[data-rehype-pretty-code-figure] > pre {
  border: 1px solid rgb(var(--border-subtle-rgb)); /* Use border variable */
  border-radius: 6px;
  padding: var(--spacing-md);
  overflow-x: auto;
  font-size: 0.9em; /* Slightly smaller than base */
  line-height: 1.6;
  /* Background comes from --tw-prose-pre-bg */
}

.mdx-prose figure[data-rehype-pretty-code-figure] > pre > code {
  display: grid;
  font-family: var(--font-geist-mono), monospace; /* Ensure monospace font */
  background-color: transparent !important; /* Override theme bg */
  font-size: inherit;
  /* Text color comes from --tw-prose-pre-code (theme) or highlighting spans */
}

/* Code Highlights */
.mdx-prose .line--highlighted {
  background-color: rgba(var(--primary-rgb), 0.1); /* Use primary with alpha */
  box-shadow: inset 3px 0 0 0 rgb(var(--primary-rgb));
}
.mdx-prose .word--highlighted {
  background-color: rgba(
    var(--secondary-rgb),
    0.2
  ); /* Use secondary with alpha */
  padding: 0.1em 0.2em;
  border-radius: 3px;
}

/* Code Block Titles */
.mdx-prose [data-rehype-pretty-code-title] {
  font-size: 0.85em;
  font-family: var(--font-geist-mono), monospace;
  color: rgba(var(--foreground-rgb), 0.7);
  background-color: var(--gray-alpha-200); /* Slightly darker alpha gray */
  padding: var(--spacing-sm) var(--spacing-md);
  border: 1px solid rgb(var(--border-subtle-rgb));
  border-bottom: none;
  border-top-left-radius: 6px;
  border-top-right-radius: 6px;
  margin-bottom: 0;
}


================================================================================
FILE: theme.css
================================================================================

/* app/styles/theme.css */

@import url("https://fonts.googleapis.com/css2?family=Cal+Sans&display=swap");

/* ========== Core CSS Variable Definitions ========== */

:root {
  /* === Base Color Palette === */
  /* Base Hex Colors */
  --accent-terra-cotta: #bc8f8f;
  --accent-earth-green: #8fbc8f;
  --accent-warm-tan: #d2b48c;
  --accent-deep-ochre: #a0522d;
  --accent-soft-grey: #c0c0c0;
  --color_moth-green: #0e1b07;
  --color_moth-brown: #35170c;
  --color_moth-mousse: #9e7967;
  --color_moth-light: #f7e8e1;
  --color_moth-orange: #924622;
  --color_white: #ffffff; /* Explicit white if needed */
  --color_black: #000000; /* Explicit black if needed */

  /* Base RGB Values (for use with Tailwind opacity) */
  --rgb-moth-green: 14, 27, 7;
  --rgb-moth-brown: 53, 23, 12;
  --rgb-moth-mousse: 158, 121, 103;
  --rgb-moth-light: 247, 232, 225;
  --rgb-moth-orange: 146, 70, 34;
  --rgb-accent-terra-cotta: 188, 143, 143;
  --rgb-accent-earth-green: 143, 188, 143;
  --rgb-accent-warm-tan: 210, 180, 140;
  --rgb-accent-deep-ochre: 160, 82, 45;
  --rgb-accent-soft-grey: 192, 192, 192;
  --rgb-white: 255, 255, 255;
  --rgb-black: 0, 0, 0;

  /* Monaspace RGB Variables */
  --color-neon-primary-rgb: 0, 255, 0; /* Bright Green */
  --color-argon-primary-rgb: 0, 255, 255; /* Cyan */
  --color-xenon-primary-rgb: 255, 0, 255; /* Magenta */
  --color-radon-primary-rgb: 255, 0, 0; /* Red */
  --color-krypton-primary-rgb: 255, 255, 0; /* Yellow */
  /* Define -dark vars pointing to primary, as there's only one theme */
  --color-neon-dark-rgb: var(--color-neon-primary-rgb);
  --color-argon-dark-rgb: var(--color-argon-primary-rgb);
  --color-xenon-dark-rgb: var(--color-xenon-primary-rgb);
  --color-radon-dark-rgb: var(--color-radon-primary-rgb);
  --color-krypton-dark-rgb: var(--color-krypton-primary-rgb);

  /* === Semantic Color Mapping === */
  /* Uses vars defined in "Base RGB Values" section */
  --color-surface-page-rgb: var(--rgb-moth-green);
  --color-surface-card-rgb: var(--rgb-moth-brown); /* Card Background */
  --color-surface-secondary-rgb: var(
    --rgb-moth-brown
  ); /* Alt Surfaces/Borders */
  --color-text-default-rgb: var(--rgb-moth-light); /* Primary text */
  --color-text-muted-rgb: var(--rgb-moth-mousse); /* Secondary/subtle text */
  --color-text-inverted-rgb: var(
    --rgb-moth-green
  ); /* Text on light/accent backgrounds */
  --color-accent-primary-rgb: var(--rgb-moth-orange); /* Primary Accent */
  --color-accent-secondary-rgb: var(
    --rgb-accent-deep-ochre
  ); /* Secondary Accent */
  --color-border-default-rgb: var(--rgb-moth-mousse); /* Default borders */
  --color-border-subtle-rgb: var(
    --rgb-moth-brown
  ); /* Subtle borders (e.g., code blocks) */
  --color-interactive-primary-rgb: var(
    --rgb-accent-deep-ochre
  ); /* Primary buttons/links */
  --color-interactive-secondary-rgb: var(
    --rgb-accent-warm-tan
  ); /* Secondary buttons/links */
  --color-interactive-muted-rgb: var(
    --rgb-moth-mousse
  ); /* Muted interactive elements */
  --color-interactive-text-rgb: var(
    --rgb-moth-light
  ); /* Text on primary interactive elements */
  --color-code-background-rgb: var(
    --rgb-moth-brown
  ); /* Code block background */

  --hdr-gradient: radial-gradient(
    farthest-corner circle at 100% 0% in oklab,
    oklch(35% 0.09 136) 30% 49%,
    oklch(36% 0.18 312 / 0%) 100% 50%
  );

  /* ==========================================================================
                  === Semantic Colors ===
   ========================================================================== */
  --color-surface-page: rgb(var(--color-surface-page-rgb));
  /* Secondary Dark BG/Borders */
  --color-surface-secondary: var(--color_moth-brown);
  --color-text-default: var(--color_moth-light);
  --color-text-muted: var(--color_moth-mousse);

  --color-accent: var(--accent-earth-green);
  --color-accent-secondary: var(--accent-deep-ochre);
  --color-header: var(--color_moth-green);
  --color-text-secondary: rgb(var(--color_26)); /* Chocolate secondary text */
  --color-interactive-primary: rgb(var(--color_26)); /* Chocolate buttons */
  --color-interactive-secondary: var(--accent-warm-tan);
  --color-coco: rgba(var(--color_dark-chocolate), 1);
  --color-moth-orange: var(--color_moth-orange);
  --color-interactive-text: rgb(var(--color_0)); /* White text for buttons */
  --color-surface-card: rgb(var(--color_16)); /* Light grey/beige cards */
  --color-border-default: rgb(var(--color_16)); /* Light grey/beige borders */
  --color-neon-primary: rgb(var(--color-neon-dark-rgb));
  --color-argon-primary: rgb(var(--color-argon-dark-rgb));
  --color-xenon-primary: rgb(var(--color-xenon-dark-rgb));
  --color-radon-primary: rgb(var(--color-radon-primary-rgb));
  --color-krypton-primary: rgb(var(--color-krypton-primary-rgb));
  /* ==========================================================================
            === Semantic Colors END ===
   ========================================================================== */

  /* === Shadows (Dark Theme Adjustments) === */
  /* Using subtle light text color for highlights, darker for base/outer */
  --shadow-highlight-rgb: var(--rgb-moth-light);
  --shadow-base-rgb: var(--rgb-moth-brown);
  --shadow-outer-rgb: var(--rgb-black); /* Use black for deep shadow */

  /* === Typography === */
  /* Font Variables (referenced by layout.tsx & tailwind.config.ts) */
  --font-cinzel: "Cinzel", serif;
  --font-cinzel-deco: "Cinzel Decorative", serif;
  --font-dancing-script: "Dancing Script", cursive;
  --font-geist-mono: "Geist Mono", monospace; /* Assumed name */

  /* Core Spacing & Typography Tokens  */
  --spacing-base: 1rem;
  --spacing-xs: calc(var(--spacing-base) * 0.5);
  --spacing-sm: calc(var(--spacing-base) * 0.75);
  --spacing-md: var(--spacing-base);
  --spacing-lg: calc(var(--spacing-base) * 1.5);
  --spacing-xl: calc(var(--spacing-base) * 2);
  --spacing-2xl: calc(var(--spacing-base) * 3);

  --font-cal-sans: "Cal Sans", sans-serif;

  --fontSize-base: clamp(1rem, 1.05cqw + 0.8rem, 1.25rem);
  --fontSize-sm: clamp(0.89rem, 0.95cqw + 0.7rem, 1.13rem);
  --fontSize-xs: clamp(0.8rem, 0.91cqw + 0.6rem, 0.98rem);
  --fontSize-h1: clamp(2.5rem, 5vw, 3.5rem);
  --fontSize-h2: clamp(2rem, 4vw, 3rem);
  --fontSize-h3: clamp(1.75rem, 3vw, 2.5rem);
  --fontSize-h4: clamp(1.5rem, 2.5vw, 2rem);
  --fontSize-base: clamp(1rem, 1.05cqw + 0.8rem, 1.25rem);

  /* Layout Tokens  */
  --nav-height: 3.75rem;
  --max-width: 70rem;
  --slide-height: 100vh;

  --bounce: linear(
    0,
    0.009 1%,
    0.04 2.1%,
    0.093 3.3%,
    0.164 4.5%,
    0.324 6.7%,
    0.807 12.6%,
    0.935 14.4%,
    1.037 16.1%,
    1.12 17.8%,
    1.179 19.4%,
    1.22 21%,
    1.245 22.7%,
    1.253 25%,
    1.233 27.6%,
    1.189 30.3%,
    1.058 36.6%,
    1.004 39.7%,
    0.96 43.2%,
    0.939 46.7%,
    0.941 52%,
    0.998 64%,
    1.015 70.6%,
    1
  );
} /* End of :root */

/* ========== Dark Theme Overrides ==========  */

.dark {
  --color-surface-page: var(--color_moth-green);
  --color-surface-secondary: #35170c; /* Secondary Dark BG / Borders */
  --color-accent: #924622;
  --color-text-default: #f7e8e1; /* Light text for dark mode */
  --color-text-muted: #9e7967;
}

html {
  color-scheme: light; /* Enforce light theme by default */
  scroll-behavior: smooth;
  font-size: 100%;
}

/* Marquee (Used in Header) */
@keyframes marquee {
  0% {
    transform: translateX(0);
  }
  to {
    transform: translateX(-100%);
  }
}

.marquee {
  animation: marquee 30s linear infinite;
  white-space: nowrap;
  font-family: var(--font-dancing-script), serif; /* Ensure font var is correct */
}

/* Hamburger Menu Base (Used by ui.module.css / MobileMenu) */
.hamburger div {
  transition: all 0.3s ease;
}
.menu {
  transition: transform 0.3s ease;
}

/* === Component Styles (Keep minimal) === */

.scroll-watcher {
  height: 10px;
  position: fixed;
  top: 0;
  z-index: 1000;
  background-color: var(--color-accent);
  width: 100%;
  scale: 0 1;
  transform-origin: left;
  animation: scroll-watcher linear;
  animation-timeline: scroll(y);
}

@keyframes scroll-watcher {
  to {
    scale: 1 1;
  }
}

/* Scroll controls */
.scroll-controls {
  position: sticky;
  bottom: theme("spacing.8", "2rem");
  z-index: 50;
  display: flex;
  justify-content: flex-end;
  margin-right: calc(var(--scrollbar-width, 0px) + 1rem);
}

/* Scroll Utilities  */
[data-scroll-section] {
  scroll-snap-type: y mandatory;
  scroll-behavior: smooth;
  overscroll-behavior: contain;
}


================================================================================
FILE: utility-patterns.css
================================================================================

/* app/styles/utility-patterns.css */

.glowtext {
  position: relative;
  /* Ensure the base text has the correct color and font family */
  /* These are applied via Tailwind classes in the component */
}

.glowtext::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0.6; /* Original was 60% */
  filter: blur(6px);
  pointer-events: none; /* Ensure the pseudo-element doesn't interfere with interactions */
  /* Hardware acceleration hints */
  backface-visibility: hidden;
  -webkit-backface-visibility: hidden;
  -moz-backface-visibility: hidden;
  transform: translateZ(0);
  -webkit-transform: translateZ(0);
  -moz-transform: translateZ(0);
  /* The color of the glow comes from the inherited text color */
}

/* Apply hardware acceleration to the main element as well */
.accelerate {
  backface-visibility: hidden;
  -webkit-backface-visibility: hidden;
  -moz-backface-visibility: hidden;
  transform: translateZ(0);
  -webkit-transform: translateZ(0);
  -moz-transform: translateZ(0);
  /* will-change property is often applied via inline style or utility class */
}

/* Keyframes are defined in tailwind.config.js */
/* Animation classes are applied via Tailwind utilities (e.g., animate-ghostpulse) */

/* Styles for the ghost animated elements */
/* These might be applied directly to the element or a wrapper */
.ghost {
  filter: saturate(0);
  opacity: 0.4;
}

.ghost2 {
  /* animation-name, duration, etc. are applied via Tailwind animate-{name} utilities */
  filter: saturate(30%);
  /* font-family, font-variation-settings are applied via Tailwind classes */
}

.ghost3 {
  /* animation-name, duration, etc. are applied via Tailwind animate-{name} utilities */
  filter: saturate(30%);
  /* font-family, font-variation-settings are applied via Tailwind classes */
}

.ghost4 {
  /* animation-name, duration, etc. are applied via Tailwind animate-{name} utilities */
  filter: saturate(30%);
  /* font-weight, font-family, font-variation-settings are applied via Tailwind classes */
}

/* === Typography (Using CSS Variables from theme.css) === */
.heading-1 {
  font-size: var(--fontSize-h1);
  font-weight: 800; /* extrabold */
  line-height: var(--lineHeight-tight);
}
.heading-2 {
  font-size: var(--fontSize-h2);
  font-weight: 800; /* extrabold */
  line-height: var(--lineHeight-tight);
}
.heading-3 {
  font-size: var(--fontSize-h3);
  font-weight: 700; /* bold */
  line-height: var(--lineHeight-tight);
}
.heading-4 {
  font-size: var(--fontSize-h4);
  font-weight: 700; /* bold */
  line-height: var(--lineHeight-tight);
}

.header-title {
  font-weight: 400;
  color: #d5a54e;
  font-family: Cochin LT W01 Roman, sans-serif;
  left: 0;
  margin: 0;
  position: absolute;
  text-align: center;
  text-transform: uppercase;
  top: 30vh;
  width: 100%;
  opacity: 0;
}

/* === Button Components (Using CSS Variables from theme.css) === */
/* These act as base styles that can be extended with Tailwind classes */
.btn {
  @apply inline-flex items-center justify-center rounded-full px-[var(--spacing-md)] py-[0.375rem] text-[length:var(--fontSize-sm)] leading-[var(--lineHeight-normal)] font-medium transition-all duration-150 whitespace-nowrap border border-transparent;
}

.btn-sm {
  @apply inline-flex items-center justify-center rounded-full px-[var(--spacing-sm)] py-[var(--spacing-xs)] text-[length:var(--fontSize-xs)] leading-[var(--lineHeight-normal)] font-medium transition-all duration-150 whitespace-nowrap border border-transparent;
  /* Use --fontSize-xs defined in theme.css */
}

/* === Form Components === */
/* NOTE: @tailwindcss/forms plugin provides base styles.
   These custom classes might override or supplement them.
*/
.form-input,
.form-textarea,
.form-multiselect,
.form-select {
  /* Forms plugin needs to be active */
  @apply block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm dark:bg-slate-800 dark:border-slate-600 dark:text-slate-200 dark:placeholder-slate-500 dark:focus:border-indigo-400 dark:focus:ring-indigo-400;
  /* Adjust colors (e.g., border-gray-300, focus:border-indigo-500) to match theme */
  font-size: var(--fontSize-sm); /* Override font size if needed */
}

.form-select {
  @apply pr-10; /* Keep padding for arrow */
}

.form-checkbox,
.form-radio {
  @apply rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 dark:border-slate-600 dark:bg-slate-800 dark:checked:bg-indigo-500 dark:focus:ring-indigo-400;
}

/* === Scrollbar Utilities === */
.scrollbar-thin {
  scrollbar-width: thin;
}
.scrollbar-thin::-webkit-scrollbar {
  width: 6px;
  height: 6px;
}
.no-scrollbar {
  scrollbar-width: none;
  -ms-overflow-style: none;
}
.no-scrollbar::-webkit-scrollbar {
  display: none;
}
.no-search-decoration::-webkit-search-decoration,
.no-search-decoration::-webkit-search-cancel-button,
.no-search-decoration::-webkit-search-results-button,
.no-search-decoration::-webkit-search-results-decoration {
  -webkit-appearance: none;
}



================================================================================
FILE: styles/theme.css
================================================================================

/* app/styles/theme.css */

@import url("https://fonts.googleapis.com/css2?family=Cal+Sans&display=swap");

/* ========== Core CSS Variable Definitions ========== */

:root {
  /* === Base Color Palette === */
  /* Base Hex Colors */
  --accent-terra-cotta: #bc8f8f;
  --accent-earth-green: #8fbc8f;
  --accent-warm-tan: #d2b48c;
  --accent-deep-ochre: #a0522d;
  --accent-soft-grey: #c0c0c0;
  --color_moth-green: #0e1b07;
  --color_moth-brown: #35170c;
  --color_moth-mousse: #9e7967;
  --color_moth-light: #f7e8e1;
  --color_moth-orange: #924622;
  --color_white: #ffffff; /* Explicit white if needed */
  --color_black: #000000; /* Explicit black if needed */

  /* Base RGB Values (for use with Tailwind opacity) */
  --rgb-moth-green: 14, 27, 7;
  --rgb-moth-brown: 53, 23, 12;
  --rgb-moth-mousse: 158, 121, 103;
  --rgb-moth-light: 247, 232, 225;
  --rgb-moth-orange: 146, 70, 34;
  --rgb-accent-terra-cotta: 188, 143, 143;
  --rgb-accent-earth-green: 143, 188, 143;
  --rgb-accent-warm-tan: 210, 180, 140;
  --rgb-accent-deep-ochre: 160, 82, 45;
  --rgb-accent-soft-grey: 192, 192, 192;
  --rgb-white: 255, 255, 255;
  --rgb-black: 0, 0, 0;

  /* Monaspace RGB Variables */
  --color-neon-primary-rgb: 0, 255, 0; /* Bright Green */
  --color-argon-primary-rgb: 0, 255, 255; /* Cyan */
  --color-xenon-primary-rgb: 255, 0, 255; /* Magenta */
  --color-radon-primary-rgb: 255, 0, 0; /* Red */
  --color-krypton-primary-rgb: 255, 255, 0; /* Yellow */
  /* Define -dark vars pointing to primary, as there's only one theme */
  --color-neon-dark-rgb: var(--color-neon-primary-rgb);
  --color-argon-dark-rgb: var(--color-argon-primary-rgb);
  --color-xenon-dark-rgb: var(--color-xenon-primary-rgb);
  --color-radon-dark-rgb: var(--color-radon-primary-rgb);
  --color-krypton-dark-rgb: var(--color-krypton-primary-rgb);

  /* === Semantic Color Mapping === */
  /* Uses vars defined in "Base RGB Values" section */
  --color-surface-page-rgb: var(--rgb-moth-green);
  --color-surface-card-rgb: var(--rgb-moth-brown); /* Card Background */
  --color-surface-secondary-rgb: var(
    --rgb-moth-brown
  ); /* Alt Surfaces/Borders */
  --color-text-default-rgb: var(--rgb-moth-light); /* Primary text */
  --color-text-muted-rgb: var(--rgb-moth-mousse); /* Secondary/subtle text */
  --color-text-inverted-rgb: var(
    --rgb-moth-green
  ); /* Text on light/accent backgrounds */
  --color-accent-primary-rgb: var(--rgb-moth-orange); /* Primary Accent */
  --color-accent-secondary-rgb: var(
    --rgb-accent-deep-ochre
  ); /* Secondary Accent */
  --color-border-default-rgb: var(--rgb-moth-mousse); /* Default borders */
  --color-border-subtle-rgb: var(
    --rgb-moth-brown
  ); /* Subtle borders (e.g., code blocks) */
  --color-interactive-primary-rgb: var(
    --rgb-accent-deep-ochre
  ); /* Primary buttons/links */
  --color-interactive-secondary-rgb: var(
    --rgb-accent-warm-tan
  ); /* Secondary buttons/links */
  --color-interactive-muted-rgb: var(
    --rgb-moth-mousse
  ); /* Muted interactive elements */
  --color-interactive-text-rgb: var(
    --rgb-moth-light
  ); /* Text on primary interactive elements */
  --color-code-background-rgb: var(
    --rgb-moth-brown
  ); /* Code block background */

  --hdr-gradient: radial-gradient(
    farthest-corner circle at 100% 0% in oklab,
    oklch(35% 0.09 136) 30% 49%,
    oklch(36% 0.18 312 / 0%) 100% 50%
  );

  /* ==========================================================================
                  === Semantic Colors ===
   ========================================================================== */
  --color-surface-page: rgb(var(--color-surface-page-rgb));
  /* Secondary Dark BG/Borders */
  --color-surface-secondary: var(--color_moth-brown);
  --color-text-default: var(--color_moth-light);
  --color-text-muted: var(--color_moth-mousse);

  --color-accent: var(--accent-earth-green);
  --color-accent-secondary: var(--accent-deep-ochre);
  --color-header: var(--color_moth-green);
  --color-text-secondary: rgb(var(--color_26)); /* Chocolate secondary text */
  --color-interactive-primary: rgb(var(--color_26)); /* Chocolate buttons */
  --color-interactive-secondary: var(--accent-warm-tan);
  --color-coco: rgba(var(--color_dark-chocolate), 1);
  --color-moth-orange: var(--color_moth-orange);
  --color-interactive-text: rgb(var(--color_0)); /* White text for buttons */
  --color-surface-card: rgb(var(--color_16)); /* Light grey/beige cards */
  --color-border-default: rgb(var(--color_16)); /* Light grey/beige borders */
  --color-neon-primary: rgb(var(--color-neon-dark-rgb));
  --color-argon-primary: rgb(var(--color-argon-dark-rgb));
  --color-xenon-primary: rgb(var(--color-xenon-dark-rgb));
  --color-radon-primary: rgb(var(--color-radon-primary-rgb));
  --color-krypton-primary: rgb(var(--color-krypton-primary-rgb));
  /* ==========================================================================
            === Semantic Colors END ===
   ========================================================================== */

  /* === Shadows (Dark Theme Adjustments) === */
  /* Using subtle light text color for highlights, darker for base/outer */
  --shadow-highlight-rgb: var(--rgb-moth-light);
  --shadow-base-rgb: var(--rgb-moth-brown);
  --shadow-outer-rgb: var(--rgb-black); /* Use black for deep shadow */

  /* === Typography === */
  /* Font Variables (referenced by layout.tsx & tailwind.config.ts) */
  --font-cinzel: "Cinzel", serif;
  --font-cinzel-deco: "Cinzel Decorative", serif;
  --font-dancing-script: "Dancing Script", cursive;
  --font-geist-mono: "Geist Mono", monospace; /* Assumed name */

  /* Core Spacing & Typography Tokens  */
  --spacing-base: 1rem;
  --spacing-xs: calc(var(--spacing-base) * 0.5);
  --spacing-sm: calc(var(--spacing-base) * 0.75);
  --spacing-md: var(--spacing-base);
  --spacing-lg: calc(var(--spacing-base) * 1.5);
  --spacing-xl: calc(var(--spacing-base) * 2);
  --spacing-2xl: calc(var(--spacing-base) * 3);

  --font-cal-sans: "Cal Sans", sans-serif;

  --fontSize-base: clamp(1rem, 1.05cqw + 0.8rem, 1.25rem);
  --fontSize-sm: clamp(0.89rem, 0.95cqw + 0.7rem, 1.13rem);
  --fontSize-xs: clamp(0.8rem, 0.91cqw + 0.6rem, 0.98rem);
  --fontSize-h1: clamp(2.5rem, 5vw, 3.5rem);
  --fontSize-h2: clamp(2rem, 4vw, 3rem);
  --fontSize-h3: clamp(1.75rem, 3vw, 2.5rem);
  --fontSize-h4: clamp(1.5rem, 2.5vw, 2rem);
  --fontSize-base: clamp(1rem, 1.05cqw + 0.8rem, 1.25rem);

  /* Layout Tokens  */
  --nav-height: 3.75rem;
  --max-width: 70rem;
  --slide-height: 100vh;

  --bounce: linear(
    0,
    0.009 1%,
    0.04 2.1%,
    0.093 3.3%,
    0.164 4.5%,
    0.324 6.7%,
    0.807 12.6%,
    0.935 14.4%,
    1.037 16.1%,
    1.12 17.8%,
    1.179 19.4%,
    1.22 21%,
    1.245 22.7%,
    1.253 25%,
    1.233 27.6%,
    1.189 30.3%,
    1.058 36.6%,
    1.004 39.7%,
    0.96 43.2%,
    0.939 46.7%,
    0.941 52%,
    0.998 64%,
    1.015 70.6%,
    1
  );
} /* End of :root */

/* ========== Dark Theme Overrides ==========  */

.dark {
  --color-surface-page: var(--color_moth-green);
  --color-surface-secondary: #35170c; /* Secondary Dark BG / Borders */
  --color-accent: #924622;
  --color-text-default: #f7e8e1; /* Light text for dark mode */
  --color-text-muted: #9e7967;
}

html {
  color-scheme: light; /* Enforce light theme by default */
  scroll-behavior: smooth;
  font-size: 100%;
}

/* Marquee (Used in Header) */
@keyframes marquee {
  0% {
    transform: translateX(0);
  }
  to {
    transform: translateX(-100%);
  }
}

.marquee {
  animation: marquee 30s linear infinite;
  white-space: nowrap;
  font-family: var(--font-dancing-script), serif; /* Ensure font var is correct */
}

/* Hamburger Menu Base (Used by ui.module.css / MobileMenu) */
.hamburger div {
  transition: all 0.3s ease;
}
.menu {
  transition: transform 0.3s ease;
}

/* === Component Styles (Keep minimal) === */

.scroll-watcher {
  height: 10px;
  position: fixed;
  top: 0;
  z-index: 1000;
  background-color: var(--color-accent);
  width: 100%;
  scale: 0 1;
  transform-origin: left;
  animation: scroll-watcher linear;
  animation-timeline: scroll(y);
}

@keyframes scroll-watcher {
  to {
    scale: 1 1;
  }
}

/* Scroll controls */
.scroll-controls {
  position: sticky;
  bottom: theme("spacing.8", "2rem");
  z-index: 50;
  display: flex;
  justify-content: flex-end;
  margin-right: calc(var(--scrollbar-width, 0px) + 1rem);
}

/* Scroll Utilities  */
[data-scroll-section] {
  scroll-snap-type: y mandatory;
  scroll-behavior: smooth;
  overscroll-behavior: contain;
}


================================================================================
FILE: styles/utility-patterns.css
================================================================================

/* app/styles/utility-patterns.css */

.glowtext {
  position: relative;
  /* Ensure the base text has the correct color and font family */
  /* These are applied via Tailwind classes in the component */
}

.glowtext::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0.6; /* Original was 60% */
  filter: blur(6px);
  pointer-events: none; /* Ensure the pseudo-element doesn't interfere with interactions */
  /* Hardware acceleration hints */
  backface-visibility: hidden;
  -webkit-backface-visibility: hidden;
  -moz-backface-visibility: hidden;
  transform: translateZ(0);
  -webkit-transform: translateZ(0);
  -moz-transform: translateZ(0);
  /* The color of the glow comes from the inherited text color */
}

/* Apply hardware acceleration to the main element as well */
.accelerate {
  backface-visibility: hidden;
  -webkit-backface-visibility: hidden;
  -moz-backface-visibility: hidden;
  transform: translateZ(0);
  -webkit-transform: translateZ(0);
  -moz-transform: translateZ(0);
  /* will-change property is often applied via inline style or utility class */
}

/* Keyframes are defined in tailwind.config.js */
/* Animation classes are applied via Tailwind utilities (e.g., animate-ghostpulse) */

/* Styles for the ghost animated elements */
/* These might be applied directly to the element or a wrapper */
.ghost {
  filter: saturate(0);
  opacity: 0.4;
}

.ghost2 {
  /* animation-name, duration, etc. are applied via Tailwind animate-{name} utilities */
  filter: saturate(30%);
  /* font-family, font-variation-settings are applied via Tailwind classes */
}

.ghost3 {
  /* animation-name, duration, etc. are applied via Tailwind animate-{name} utilities */
  filter: saturate(30%);
  /* font-family, font-variation-settings are applied via Tailwind classes */
}

.ghost4 {
  /* animation-name, duration, etc. are applied via Tailwind animate-{name} utilities */
  filter: saturate(30%);
  /* font-weight, font-family, font-variation-settings are applied via Tailwind classes */
}

/* === Typography (Using CSS Variables from theme.css) === */
.heading-1 {
  font-size: var(--fontSize-h1);
  font-weight: 800; /* extrabold */
  line-height: var(--lineHeight-tight);
}
.heading-2 {
  font-size: var(--fontSize-h2);
  font-weight: 800; /* extrabold */
  line-height: var(--lineHeight-tight);
}
.heading-3 {
  font-size: var(--fontSize-h3);
  font-weight: 700; /* bold */
  line-height: var(--lineHeight-tight);
}
.heading-4 {
  font-size: var(--fontSize-h4);
  font-weight: 700; /* bold */
  line-height: var(--lineHeight-tight);
}

.header-title {
  font-weight: 400;
  color: #d5a54e;
  font-family: Cochin LT W01 Roman, sans-serif;
  left: 0;
  margin: 0;
  position: absolute;
  text-align: center;
  text-transform: uppercase;
  top: 30vh;
  width: 100%;
  opacity: 0;
}

/* === Button Components (Using CSS Variables from theme.css) === */
/* These act as base styles that can be extended with Tailwind classes */
.btn {
  @apply inline-flex items-center justify-center rounded-full px-[var(--spacing-md)] py-[0.375rem] text-[length:var(--fontSize-sm)] leading-[var(--lineHeight-normal)] font-medium transition-all duration-150 whitespace-nowrap border border-transparent;
}

.btn-sm {
  @apply inline-flex items-center justify-center rounded-full px-[var(--spacing-sm)] py-[var(--spacing-xs)] text-[length:var(--fontSize-xs)] leading-[var(--lineHeight-normal)] font-medium transition-all duration-150 whitespace-nowrap border border-transparent;
  /* Use --fontSize-xs defined in theme.css */
}

/* === Form Components === */
/* NOTE: @tailwindcss/forms plugin provides base styles.
   These custom classes might override or supplement them.
*/
.form-input,
.form-textarea,
.form-multiselect,
.form-select {
  /* Forms plugin needs to be active */
  @apply block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm dark:bg-slate-800 dark:border-slate-600 dark:text-slate-200 dark:placeholder-slate-500 dark:focus:border-indigo-400 dark:focus:ring-indigo-400;
  /* Adjust colors (e.g., border-gray-300, focus:border-indigo-500) to match theme */
  font-size: var(--fontSize-sm); /* Override font size if needed */
}

.form-select {
  @apply pr-10; /* Keep padding for arrow */
}

.form-checkbox,
.form-radio {
  @apply rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 dark:border-slate-600 dark:bg-slate-800 dark:checked:bg-indigo-500 dark:focus:ring-indigo-400;
}

/* === Scrollbar Utilities === */
.scrollbar-thin {
  scrollbar-width: thin;
}
.scrollbar-thin::-webkit-scrollbar {
  width: 6px;
  height: 6px;
}
.no-scrollbar {
  scrollbar-width: none;
  -ms-overflow-style: none;
}
.no-scrollbar::-webkit-scrollbar {
  display: none;
}
.no-search-decoration::-webkit-search-decoration,
.no-search-decoration::-webkit-search-cancel-button,
.no-search-decoration::-webkit-search-results-button,
.no-search-decoration::-webkit-search-results-decoration {
  -webkit-appearance: none;
}

